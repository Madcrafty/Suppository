{"version":3,"file":"rete-connection-plugin.min.js","sources":["src/pseudoconnection.ts","src/utils.ts","src/flow/base.ts","src/flow/utils.ts","src/flow/builtin/bidirect.ts","src/flow/builtin/classic/sync-connections.ts","src/flow/builtin/classic/index.ts","src/presets/classic.ts","src/index.ts"],"sourcesContent":["import { getUID } from 'rete'\nimport { BaseArea, BaseAreaPlugin } from 'rete-area-plugin'\n\nimport { ClassicScheme, Position, SocketData } from './types'\n\n/**\n * Create pseudoconnection. Used to trigger rendering of connection that is being created by user.\n * Has additional `isPseudo` property in payload.\n * @param extra Extra payload to add to connection\n */\nexport function createPseudoconnection<Schemes extends ClassicScheme, K>(extra?: Partial<Schemes['Connection']>) {\n  let element: HTMLElement | null = null\n  let id: string | null = null\n\n  function unmount(areaPlugin: BaseAreaPlugin<Schemes, BaseArea<Schemes> | K>) {\n    if (id) {\n      areaPlugin.removeConnectionView(id)\n    }\n    element = null\n    id = null\n  }\n  function mount(areaPlugin: BaseAreaPlugin<Schemes, BaseArea<Schemes> | K>) {\n    unmount(areaPlugin)\n    id = `pseudo_${getUID()}`\n  }\n\n  return {\n    isMounted() {\n      return Boolean(id)\n    },\n    mount,\n    // eslint-disable-next-line complexity\n    render(areaPlugin: BaseAreaPlugin<Schemes, BaseArea<Schemes> | K>, { x, y }: Position, data: SocketData) {\n      const isOutput = data.side === 'output'\n      const pointer = { x: x + (isOutput ? -3 : 3), y } // fix hover of underlying elements\n\n      if (!id) throw new Error('pseudo connection id wasn\\'t generated')\n\n      const payload = isOutput ? {\n        id,\n        source: data.nodeId,\n        sourceOutput: data.key,\n        target: '',\n        targetInput: '',\n        ...(extra || {})\n      } : {\n        id,\n        target: data.nodeId,\n        targetInput: data.key,\n        source: '',\n        sourceOutput: '',\n        ...(extra || {})\n      }\n\n      if (!element) {\n        const view = areaPlugin.addConnectionView(payload)\n\n        element = view.element\n      }\n\n      if (!element) return\n\n      areaPlugin.emit({\n        type: 'render', data: {\n          element,\n          type: 'connection',\n          payload,\n          ...(isOutput ? { end: pointer } : { start: pointer })\n        }\n      })\n    },\n    unmount\n  }\n}\n","import { SocketData } from './types'\n/**\n * @param elements list of Element returned by document.elementsFromPoint\n */\nexport function findSocket(socketsCache: WeakMap<Element, SocketData>, elements: Element[]) {\n  for (const element of elements) {\n    const found = socketsCache.get(element)\n\n    if (found) {\n      return found\n    }\n  }\n}\n","import { BaseSchemes, NodeEditor, Scope } from 'rete'\n\nimport { Connection, SocketData } from '../types'\n\nexport type Context<Schemes extends BaseSchemes, K extends any[]> = {\n    editor: NodeEditor<Schemes>\n    scope: Scope<Connection, K>\n    socketsCache: Map<Element, SocketData>\n}\nexport type EventType = 'up' | 'down'\nexport type PickParams = { socket: SocketData, event: EventType }\n\nexport abstract class Flow<Schemes extends BaseSchemes, K extends any[]> {\n    public abstract pick(params: PickParams, context: Context<Schemes, K>): Promise<void>\n    public abstract getPickedSocket(): SocketData | undefined\n    public abstract drop(context: Context<Schemes, K>): void\n}\n","import { getUID } from 'rete'\n\nimport { ClassicScheme, SocketData } from '../types'\nimport { Context, PickParams } from './base'\n\nexport interface StateContext<Schemes extends ClassicScheme, K extends any[]> {\n  currentState: State<Schemes, K>\n  switchTo(state: State<Schemes, K>): void\n}\n\nexport abstract class State<Schemes extends ClassicScheme, K extends any[]> {\n  context!: StateContext<Schemes, K>\n  initial: SocketData | undefined\n\n  setContext(context: StateContext<Schemes, K>) {\n    this.context = context\n  }\n\n  abstract pick(params: PickParams, context: Context<Schemes, K>): Promise<void>\n  abstract drop(context: Context<Schemes, K>): void\n}\n\nexport function getSourceTarget(initial: SocketData, socket: SocketData) {\n  const forward = initial.side === 'output' && socket.side === 'input'\n  const backward = initial.side === 'input' && socket.side === 'output'\n  const [source, target] = forward\n    ? [initial, socket]\n    : (backward ? [socket, initial] : [])\n\n  if (source && target) return [source, target]\n}\n\nexport function canMakeConnection(initial: SocketData, socket: SocketData) {\n  return Boolean(getSourceTarget(initial, socket))\n}\n\nexport function makeConnection<Schemes extends ClassicScheme, K extends any[]>(initial: SocketData, socket: SocketData, context: Context<Schemes, K>) {\n  const [source, target] = getSourceTarget(initial, socket) || [null, null]\n\n  if (source && target) {\n    context.editor.addConnection({\n      id: getUID(),\n      source: source.nodeId,\n      sourceOutput: source.key,\n      target: target.nodeId,\n      targetInput: target.key\n    })\n    return true\n  }\n}\n","import { ClassicScheme, SocketData } from '../../types'\nimport { Context, Flow, PickParams } from '../base'\nimport { makeConnection as defaultMakeConnection, State, StateContext } from '../utils'\n\n/**\n * Bidirect flow params\n */\nexport type BidirectParams<Schemes extends ClassicScheme> = {\n  /** If true, user can pick a pseudo-connection by clicking on socket, not only by pointerdown */\n  pickByClick: boolean\n  /** Custom function to make connection */\n  makeConnection: <K extends any[]>(from: SocketData, to: SocketData, context: Context<Schemes, K>) => boolean | undefined\n}\n\nclass Picked<Schemes extends ClassicScheme, K extends any[]> extends State<Schemes, K> {\n  constructor(public initial: SocketData, private params: BidirectParams<Schemes>) {\n    super()\n  }\n\n  async pick({ socket }: PickParams, context: Context<Schemes, K>): Promise<void> {\n    if (this.params.makeConnection(this.initial, socket, context)) {\n      this.drop(context, socket, true)\n    } else if (!this.params.pickByClick) {\n      this.drop(context, socket)\n    }\n  }\n\n  drop(context: Context<ClassicScheme, K>, socket: SocketData | null = null, created = false): void {\n    if (this.initial) {\n      context.scope.emit({ type: 'connectiondrop', data: { initial: this.initial, socket, created } })\n    }\n    this.context.switchTo(new Idle<Schemes, K>(this.params))\n  }\n}\n\nclass Idle<Schemes extends ClassicScheme, K extends any[]> extends State<Schemes, K> {\n  constructor(private params: BidirectParams<Schemes>) {\n    super()\n  }\n\n  async pick({ socket, event }: PickParams, context: Context<Schemes, K>): Promise<void> {\n    if (event === 'down') {\n      if (await context.scope.emit({ type: 'connectionpick', data: { socket } })) {\n        this.context.switchTo(new Picked(socket, this.params))\n      } else {\n        this.drop(context)\n      }\n    }\n  }\n\n  drop(context: Context<Schemes, K>, socket: SocketData | null = null, created = false): void {\n    if (this.initial) {\n      context.scope.emit({ type: 'connectiondrop', data: { initial: this.initial, socket, created } })\n    }\n    delete this.initial\n  }\n}\n\n/**\n * Bidirect flow. User can pick a socket and connect it by releasing mouse button.\n * More simple than classic flow, but less functional (can't remove connection by clicking on input socket).\n */\nexport class BidirectFlow<Schemes extends ClassicScheme, K extends any[]> implements StateContext<Schemes, K>, Flow<Schemes, K> {\n  currentState!: State<Schemes, K>\n\n  constructor(params?: Partial<BidirectParams<Schemes>>) {\n    const pickByClick = Boolean(params?.pickByClick)\n    const makeConnection = params?.makeConnection || defaultMakeConnection\n\n    this.switchTo(new Idle({ pickByClick, makeConnection }))\n  }\n\n  public async pick(params: PickParams, context: Context<Schemes, K>) {\n    await this.currentState.pick(params, context)\n  }\n\n  public getPickedSocket() {\n    return this.currentState.initial\n  }\n\n  public drop(context: Context<Schemes, K>) {\n    this.currentState.drop(context)\n  }\n\n  public switchTo(state: State<Schemes, K>): void {\n    state.setContext(this)\n    this.currentState = state\n  }\n}\n","import { NodeEditor } from 'rete'\n\nimport { ClassicScheme, SocketData } from '../../../types'\n\nfunction findPort<Schemes extends ClassicScheme>(socket: SocketData, editor: NodeEditor<Schemes>) {\n  const node = editor.getNode(socket.nodeId)\n\n  if (!node) throw new Error('cannot find node')\n\n  const list = socket.side === 'input' ? node.inputs : node.outputs\n\n  return list[socket.key]\n}\nfunction findConnections<Schemes extends ClassicScheme>(socket: SocketData, editor: NodeEditor<Schemes>) {\n  const { nodeId, side, key } = socket\n\n  return editor.getConnections().filter(connection => {\n    if (side === 'input') {\n      return connection.target === nodeId && connection.targetInput === key\n    }\n    if (side === 'output') {\n      return connection.source === nodeId && connection.sourceOutput === key\n    }\n  })\n}\n\n/**\n * Remove existing connections if Port doesnt allow multiple connections\n */\nexport function syncConnections<Schemes extends ClassicScheme>(sockets: SocketData[], editor: NodeEditor<Schemes>) {\n  const connections: Schemes['Connection'][] = sockets.map(socket => {\n    const port = findPort(socket, editor)\n    const multiple = port?.multipleConnections\n\n    if (multiple) return []\n\n    return findConnections(socket, editor)\n  }).flat()\n\n  return {\n    commit() {\n      const uniqueIds = Array.from(new Set(connections.map(({ id }) => id)))\n\n      uniqueIds.forEach(id => editor.removeConnection(id))\n    }\n  }\n}\n","\nimport { ClassicScheme, SocketData } from '../../../types'\nimport { Context, Flow, PickParams } from '../../base'\nimport {\n  canMakeConnection as defaultCanMakeConnection, makeConnection as defaultMakeConnection, State, StateContext\n} from '../../utils'\nimport { syncConnections } from './sync-connections'\n\n/**\n * Classic flow params\n */\nexport type ClassicParams<Schemes extends ClassicScheme> = {\n  /** Custom function to check if connection can be made */\n  canMakeConnection: (from: SocketData, to: SocketData) => boolean | undefined\n  /** Custom function to make connection */\n  makeConnection: <K extends any[]>(from: SocketData, to: SocketData, context: Context<Schemes, K>) => boolean | undefined\n}\n\nclass Picked<Schemes extends ClassicScheme, K extends any[]> extends State<Schemes, K> {\n  constructor(public initial: SocketData, private params: ClassicParams<Schemes>) {\n    super()\n  }\n\n  async pick({ socket }: PickParams, context: Context<Schemes, K>): Promise<void> {\n    if (this.params.canMakeConnection(this.initial, socket)) {\n      syncConnections([this.initial, socket], context.editor).commit()\n      const created = this.params.makeConnection(this.initial, socket, context)\n\n      this.drop(context, created ? socket : null, created)\n    }\n  }\n\n  drop(context: Context<Schemes, K>, socket: SocketData | null = null, created = false): void {\n    if (this.initial) {\n      context.scope.emit({ type: 'connectiondrop', data: { initial: this.initial, socket, created } })\n    }\n    this.context.switchTo(new Idle(this.params))\n  }\n}\n\nclass PickedExisting<Schemes extends ClassicScheme, K extends any[]> extends State<Schemes, K> {\n  initial!: SocketData\n  outputSocket: SocketData\n\n  constructor(public connection: Schemes['Connection'], private params: ClassicParams<Schemes>, context: Context<Schemes, K>) {\n    super()\n    const outputSocket = Array.from(context.socketsCache.values()).find(data => {\n      return data.nodeId === this.connection.source\n        && data.side === 'output'\n        && data.key === this.connection.sourceOutput\n    })\n\n    if (!outputSocket) throw new Error('cannot find output socket')\n\n    this.outputSocket = outputSocket\n  }\n\n  async init(context: Context<Schemes, K>) {\n    context.scope.emit({ type: 'connectionpick', data: { socket: this.outputSocket } }).then(response => {\n      if (response) {\n        context.editor.removeConnection(this.connection.id)\n        this.initial = this.outputSocket\n      } else {\n        this.drop(context)\n      }\n    })\n  }\n\n  async pick({ socket, event }: PickParams, context: Context<Schemes, K>): Promise<void> {\n    if (this.initial && !(socket.side === 'input' && this.connection.target === socket.nodeId && this.connection.targetInput === socket.key)) {\n      if (this.params.canMakeConnection(this.initial, socket)) {\n        syncConnections([this.initial, socket], context.editor).commit()\n        const created = this.params.makeConnection(this.initial, socket, context)\n\n        this.drop(context, created ? socket : null, created)\n      }\n    } else if (event === 'down') {\n      if (this.initial) {\n        syncConnections([this.initial, socket], context.editor).commit()\n        const created = this.params.makeConnection(this.initial, socket, context)\n\n        this.drop(context, created ? socket : null, created)\n      }\n    }\n  }\n\n  drop(context: Context<Schemes, K>, socket: SocketData | null = null, created = false): void {\n    if (this.initial) {\n      context.scope.emit({ type: 'connectiondrop', data: { initial: this.initial, socket, created } })\n    }\n    this.context.switchTo(new Idle<Schemes, K>(this.params))\n  }\n}\n\nclass Idle<Schemes extends ClassicScheme, K extends any[]> extends State<Schemes, K> {\n  constructor(private params: ClassicParams<Schemes>) {\n    super()\n  }\n\n  async pick({ socket, event }: PickParams, context: Context<Schemes, K>): Promise<void> {\n    if (event !== 'down') return\n    if (socket.side === 'input') {\n      const connection = context\n        .editor.getConnections()\n        .find(item => item.target === socket.nodeId && item.targetInput === socket.key)\n\n      if (connection) {\n        const state = new PickedExisting(connection, this.params, context)\n\n        await state.init(context)\n        this.context.switchTo(state)\n        return\n      }\n    }\n\n    if (await context.scope.emit({ type: 'connectionpick', data: { socket } })) {\n      this.context.switchTo(new Picked(socket, this.params))\n    } else {\n      this.drop(context)\n    }\n  }\n\n  drop(context: Context<Schemes, K>, socket: SocketData | null = null, created = false): void {\n    if (this.initial) {\n      context.scope.emit({ type: 'connectiondrop', data: { initial: this.initial, socket, created } })\n    }\n    delete this.initial\n  }\n}\n\n/**\n * Classic flow. User can pick/click a socket and connect it by releasing/clicking on another socket.\n * If connection already exists and user clicks on input socket, connection will be removed.\n */\nexport class ClassicFlow<Schemes extends ClassicScheme, K extends any[]> implements StateContext<Schemes, K>, Flow<Schemes, K> {\n  currentState!: State<Schemes, K>\n\n  constructor(params?: Partial<ClassicParams<Schemes>>) {\n    const canMakeConnection = params?.canMakeConnection || defaultCanMakeConnection\n    const makeConnection = params?.makeConnection || defaultMakeConnection\n\n    this.switchTo(new Idle<Schemes, K>({ canMakeConnection, makeConnection }))\n  }\n\n  public async pick(params: PickParams, context: Context<Schemes, K>) {\n    await this.currentState.pick(params, context)\n  }\n\n  public getPickedSocket() {\n    return this.currentState.initial\n  }\n\n  public switchTo(state: State<Schemes, K>): void {\n    state.setContext(this)\n    this.currentState = state\n  }\n\n  public drop(context: Context<Schemes, K>) {\n    this.currentState.drop(context)\n  }\n}\n","import { ClassicFlow } from '../flow'\n\n/**\n * Classic preset. Uses `ClassicFlow` for managing connections by user\n */\nexport function setup() {\n  return () => new ClassicFlow()\n}\n","import { NodeEditor, Scope } from 'rete'\nimport { BaseArea, BaseAreaPlugin, RenderSignal } from 'rete-area-plugin'\n\nimport { Flow } from './flow'\nimport { EventType } from './flow/base'\nimport { createPseudoconnection } from './pseudoconnection'\nimport { ClassicScheme, Connection, Position, Preset, Side, SocketData } from './types'\nimport { findSocket } from './utils'\n\nexport * from './flow'\nexport * as Presets from './presets'\nexport { createPseudoconnection } from './pseudoconnection'\nexport type { Connection, ConnectionExtra, Preset, Side, SocketData } from './types'\n\ntype Requires =\n  | { type: 'pointermove', data: { position: Position, event: PointerEvent } }\n  | { type: 'pointerup', data: { position: Position, event: PointerEvent } }\n  | RenderSignal<'socket', {\n    nodeId: string,\n    side: Side,\n    key: string\n  }>\n  | { type: 'unmount', data: { element: HTMLElement } }\n\n/**\n * Connection plugin. Responsible for user interaction with connections (creation, deletion)\n * @priority 9\n * @emits connectionpick\n * @emits connectiondrop\n * @listens pointermove\n * @listens pointerup\n * @listens render\n * @listens unmount\n */\nexport class ConnectionPlugin<Schemes extends ClassicScheme, K = Requires> extends Scope<Connection, [Requires | K]> {\n  presets: Preset<Schemes>[] = []\n  private areaPlugin!: BaseAreaPlugin<Schemes, BaseArea<Schemes>>\n  private editor!: NodeEditor<Schemes>\n  private currentFlow: Flow<Schemes, any[]> | null = null\n  private preudoconnection = createPseudoconnection({ isPseudo: true })\n  private socketsCache = new Map<Element, SocketData>()\n\n  constructor() {\n    super('connection')\n  }\n\n  /**\n   * Add preset to the plugin\n   * @param preset Preset to add\n   */\n  public addPreset(preset: Preset<Schemes>) {\n    this.presets.push(preset)\n  }\n\n  private findPreset(data: SocketData) {\n    for (const preset of this.presets) {\n      const flow = preset(data)\n\n      if (flow) return flow\n    }\n    return null\n  }\n\n  update() {\n    if (!this.currentFlow) return\n    const socket = this.currentFlow.getPickedSocket()\n\n    if (socket) {\n      this.preudoconnection.render(this.areaPlugin, this.areaPlugin.area.pointer, socket)\n    }\n  }\n\n  /**\n   * Drop pseudo-connection if exists\n   * @emits connectiondrop\n   */\n  drop() {\n    const flowContext = { editor: this.editor, scope: this, socketsCache: this.socketsCache }\n\n    if (this.currentFlow) {\n      this.currentFlow.drop(flowContext)\n      this.preudoconnection.unmount(this.areaPlugin)\n      this.currentFlow = null\n    }\n  }\n\n  // eslint-disable-next-line max-statements\n  async pick(event: PointerEvent, type: EventType) {\n    const flowContext = { editor: this.editor, scope: this, socketsCache: this.socketsCache }\n    const pointedElements = document.elementsFromPoint(event.clientX, event.clientY)\n    const pickedSocket = findSocket(this.socketsCache, pointedElements)\n\n    if (pickedSocket) {\n      event.preventDefault()\n      event.stopPropagation()\n      this.currentFlow = this.currentFlow || this.findPreset(pickedSocket)\n\n      if (this.currentFlow) {\n        await this.currentFlow.pick({ socket: pickedSocket, event: type }, flowContext)\n        this.preudoconnection.mount(this.areaPlugin)\n      }\n    } else if (this.currentFlow) {\n      this.currentFlow.drop(flowContext)\n    }\n    if (this.currentFlow && !this.currentFlow.getPickedSocket()) {\n      this.preudoconnection.unmount(this.areaPlugin)\n      this.currentFlow = null\n    }\n    this.update()\n  }\n\n  setParent(scope: Scope<Requires | K>): void {\n    super.setParent(scope)\n    this.areaPlugin = this.parentScope<BaseAreaPlugin<Schemes, BaseArea<Schemes>>>(BaseAreaPlugin)\n    this.editor = this.areaPlugin.parentScope<NodeEditor<Schemes>>(NodeEditor)\n\n    const pointerdownSocket = (e: PointerEvent) => {\n      this.pick(e, 'down')\n    }\n\n    // eslint-disable-next-line max-statements\n    this.addPipe(context => {\n      if (!context || typeof context !== 'object' || !('type' in context)) return context\n\n      if (context.type === 'pointermove') {\n        this.update()\n      } else if (context.type === 'pointerup') {\n        this.pick(context.data.event, 'up')\n      } else if (context.type === 'render') {\n        if (context.data.type === 'socket') {\n          const { element } = context.data\n\n          element.addEventListener('pointerdown', pointerdownSocket)\n          this.socketsCache.set(element, context.data)\n        }\n      } else if (context.type === 'unmount') {\n        const { element } = context.data\n\n        element.removeEventListener('pointerdown', pointerdownSocket)\n        this.socketsCache.delete(element)\n      }\n      return context\n    })\n  }\n}\n"],"names":["createPseudoconnection","extra","element","id","unmount","areaPlugin","removeConnectionView","isMounted","Boolean","mount","concat","getUID","render","_ref","data","x","y","isOutput","side","pointer","Error","payload","_objectSpread","source","nodeId","sourceOutput","key","target","targetInput","view","addConnectionView","emit","type","end","start","findSocket","socketsCache","elements","_step","_iterator","_createForOfIteratorHelper","s","n","done","value","found","get","err","e","f","Flow","_createClass","_classCallCheck","State","context","this","getSourceTarget","initial","socket","forward","backward","_ref2","_slicedToArray","canMakeConnection","makeConnection","_ref4","editor","addConnection","Picked","_State","_inherits","_pick","_super","_createSuper","params","_this","call","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","drop","pickByClick","stop","_x","_x2","apply","arguments","length","undefined","created","scope","switchTo","Idle","_State2","_pick2","_super2","_this2","_callee2","_context2","event","sent","_x3","_x4","BidirectFlow","defaultMakeConnection","_pick3","_callee3","_context3","currentState","pick","_x5","_x6","state","setContext","syncConnections","sockets","connections","map","port","node","getNode","inputs","outputs","findPort","multipleConnections","getConnections","filter","connection","findConnections","flat","commit","Array","from","Set","forEach","removeConnection","PickedExisting","_init","outputSocket","values","find","_this3","then","response","_created","_State3","_super3","_this4","_callee4","_ref3","_connection","_context4","abrupt","item","init","_x7","ClassicFlow","defaultCanMakeConnection","_pick4","_callee5","_context5","_x8","_x9","ConnectionPlugin","_Scope","_defineProperty","_assertThisInitialized","isPseudo","Map","preset","presets","push","flow","currentFlow","getPickedSocket","preudoconnection","area","flowContext","pointedElements","pickedSocket","document","elementsFromPoint","clientX","clientY","preventDefault","stopPropagation","findPreset","update","_get","_getPrototypeOf","prototype","parentScope","BaseAreaPlugin","NodeEditor","pointerdownSocket","addPipe","_typeof","addEventListener","set","removeEventListener","Scope"],"mappings":"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"}