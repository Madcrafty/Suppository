/*!
* rete-context-menu-plugin v2.0.2
* (c) 2024 Vitaliy Stoliarov
* Released under the MIT license.
* */
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _typeof = require('@babel/runtime/helpers/typeof');
var _classCallCheck = require('@babel/runtime/helpers/classCallCheck');
var _createClass = require('@babel/runtime/helpers/createClass');
var _get = require('@babel/runtime/helpers/get');
var _inherits = require('@babel/runtime/helpers/inherits');
var _possibleConstructorReturn = require('@babel/runtime/helpers/possibleConstructorReturn');
var _getPrototypeOf = require('@babel/runtime/helpers/getPrototypeOf');
var rete = require('rete');
var reteAreaPlugin = require('rete-area-plugin');
var _toConsumableArray = require('@babel/runtime/helpers/toConsumableArray');
var _asyncToGenerator = require('@babel/runtime/helpers/asyncToGenerator');
var _regeneratorRuntime = require('@babel/runtime/regenerator');
var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var _slicedToArray = require('@babel/runtime/helpers/slicedToArray');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _typeof__default = /*#__PURE__*/_interopDefaultLegacy(_typeof);
var _classCallCheck__default = /*#__PURE__*/_interopDefaultLegacy(_classCallCheck);
var _createClass__default = /*#__PURE__*/_interopDefaultLegacy(_createClass);
var _get__default = /*#__PURE__*/_interopDefaultLegacy(_get);
var _inherits__default = /*#__PURE__*/_interopDefaultLegacy(_inherits);
var _possibleConstructorReturn__default = /*#__PURE__*/_interopDefaultLegacy(_possibleConstructorReturn);
var _getPrototypeOf__default = /*#__PURE__*/_interopDefaultLegacy(_getPrototypeOf);
var _toConsumableArray__default = /*#__PURE__*/_interopDefaultLegacy(_toConsumableArray);
var _asyncToGenerator__default = /*#__PURE__*/_interopDefaultLegacy(_asyncToGenerator);
var _regeneratorRuntime__default = /*#__PURE__*/_interopDefaultLegacy(_regeneratorRuntime);
var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);
var _slicedToArray__default = /*#__PURE__*/_interopDefaultLegacy(_slicedToArray);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty__default["default"](target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function createItem(_ref, key, context) {
  var _ref2 = _slicedToArray__default["default"](_ref, 2),
    label = _ref2[0],
    factory = _ref2[1];
  var item = {
    label: label,
    key: String(key)
  };
  if (typeof factory === 'function') {
    return _objectSpread(_objectSpread({}, item), {}, {
      handler: function handler() {
        return _asyncToGenerator__default["default"]( /*#__PURE__*/_regeneratorRuntime__default["default"].mark(function _callee() {
          var node;
          return _regeneratorRuntime__default["default"].wrap(function _callee$(_context) {
            while (1) switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return factory();
              case 2:
                node = _context.sent;
                _context.next = 5;
                return context.editor.addNode(node);
              case 5:
                context.area.translate(node.id, context.area.area.pointer);
              case 6:
              case "end":
                return _context.stop();
            }
          }, _callee);
        }))();
      }
    });
  }
  return _objectSpread(_objectSpread({}, item), {}, {
    handler: function handler() {/* do nothing */},
    subitems: factory.map(function (data, i) {
      return createItem(data, i, context);
    })
  });
}

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
/**
 * Classic context menu preset.
 * Configures nodes/actions items for root and Delete/Clone items for nodes
 * @param nodes List of items
 * @example Presets.classic.setup([
  ["Math", [
    ["Number", () => new NumberNode()],
  ]]
])
 */
function setup(nodes) {
  return function (context, plugin) {
    var area = plugin.parentScope(reteAreaPlugin.BaseAreaPlugin);
    var editor = area.parentScope(rete.NodeEditor);
    if (context === 'root') {
      return {
        searchBar: true,
        list: nodes.map(function (item, i) {
          return createItem(item, i, {
            editor: editor,
            area: area
          });
        })
      };
    }
    var deleteItem = {
      label: 'Delete',
      key: 'delete',
      handler: function handler() {
        return _asyncToGenerator__default["default"]( /*#__PURE__*/_regeneratorRuntime__default["default"].mark(function _callee() {
          var connectionId, nodeId, connections, _iterator, _step, connection;
          return _regeneratorRuntime__default["default"].wrap(function _callee$(_context) {
            while (1) switch (_context.prev = _context.next) {
              case 0:
                if (!('source' in context && 'target' in context)) {
                  _context.next = 6;
                  break;
                }
                // connection
                connectionId = context.id;
                _context.next = 4;
                return editor.removeConnection(connectionId);
              case 4:
                _context.next = 27;
                break;
              case 6:
                // node
                nodeId = context.id;
                connections = editor.getConnections().filter(function (c) {
                  return c.source === nodeId || c.target === nodeId;
                });
                _iterator = _createForOfIteratorHelper(connections);
                _context.prev = 9;
                _iterator.s();
              case 11:
                if ((_step = _iterator.n()).done) {
                  _context.next = 17;
                  break;
                }
                connection = _step.value;
                _context.next = 15;
                return editor.removeConnection(connection.id);
              case 15:
                _context.next = 11;
                break;
              case 17:
                _context.next = 22;
                break;
              case 19:
                _context.prev = 19;
                _context.t0 = _context["catch"](9);
                _iterator.e(_context.t0);
              case 22:
                _context.prev = 22;
                _iterator.f();
                return _context.finish(22);
              case 25:
                _context.next = 27;
                return editor.removeNode(nodeId);
              case 27:
              case "end":
                return _context.stop();
            }
          }, _callee, null, [[9, 19, 22, 25]]);
        }))();
      }
    };
    var clone = context.clone;
    var cloneItem = clone && {
      label: 'Clone',
      key: 'clone',
      handler: function handler() {
        return _asyncToGenerator__default["default"]( /*#__PURE__*/_regeneratorRuntime__default["default"].mark(function _callee2() {
          var node;
          return _regeneratorRuntime__default["default"].wrap(function _callee2$(_context2) {
            while (1) switch (_context2.prev = _context2.next) {
              case 0:
                node = clone();
                _context2.next = 3;
                return editor.addNode(node);
              case 3:
                area.translate(node.id, area.area.pointer);
              case 4:
              case "end":
                return _context2.stop();
            }
          }, _callee2);
        }))();
      }
    };
    return {
      searchBar: false,
      list: [deleteItem].concat(_toConsumableArray__default["default"](cloneItem ? [cloneItem] : []))
    };
  };
}

var index$1 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  setup: setup
});

/**
 * Presets that create items for root and node specific context menu.
 * @module
*/

var index = /*#__PURE__*/Object.freeze({
  __proto__: null,
  classic: index$1
});

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf__default["default"](Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf__default["default"](this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn__default["default"](this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
/**
 * Context menu plugin props
 * @priority 8
 */
/**
 * Signal types produced by ContextMenuPlugin instance
 * @priority 10
 */
/**
 * Plugin for context menu.
 * Responsible for initialing rendering of context menu with predefined items.
 * @priority 9
 * @emits render
 * @emits unmount
 * @listens unmount
 * @listens contextmenu
 * @listens pointerdown
 */
var ContextMenuPlugin = /*#__PURE__*/function (_Scope) {
  _inherits__default["default"](ContextMenuPlugin, _Scope);
  var _super = _createSuper(ContextMenuPlugin);
  /**
   * @param props Properties
   */
  function ContextMenuPlugin(props) {
    var _this;
    _classCallCheck__default["default"](this, ContextMenuPlugin);
    _this = _super.call(this, 'context-menu');
    _this.props = props;
    return _this;
  }
  _createClass__default["default"](ContextMenuPlugin, [{
    key: "setParent",
    value: function setParent(scope) {
      var _this2 = this;
      _get__default["default"](_getPrototypeOf__default["default"](ContextMenuPlugin.prototype), "setParent", this).call(this, scope);
      var area = this.parentScope(reteAreaPlugin.BaseAreaPlugin);
      var container = area.container;
      if (!container || !(container instanceof HTMLElement)) throw new Error('container expected');
      var element = document.createElement('div');
      element.style.display = 'none';
      element.style.position = 'fixed';

      // eslint-disable-next-line max-statements
      this.addPipe(function (context) {
        var parent = _this2.parentScope();
        if (!context || _typeof__default["default"](context) !== 'object' || !('type' in context)) return context;
        if (context.type === 'unmount') {
          if (context.data.element === element) {
            element.style.display = 'none';
          }
        } else if (context.type === 'contextmenu') {
          context.data.event.preventDefault();
          context.data.event.stopPropagation();
          var _this2$props$items = _this2.props.items(context.data.context, _this2),
            searchBar = _this2$props$items.searchBar,
            list = _this2$props$items.list;
          container.appendChild(element);
          element.style.left = "".concat(context.data.event.clientX, "px");
          element.style.top = "".concat(context.data.event.clientY, "px");
          element.style.display = '';
          parent.emit({
            type: 'render',
            data: {
              type: 'contextmenu',
              element: element,
              searchBar: searchBar,
              onHide: function onHide() {
                parent.emit({
                  type: 'unmount',
                  data: {
                    element: element
                  }
                });
              },
              items: list
            }
          });
        } else if (context.type === 'pointerdown') {
          if (!context.data.event.composedPath().includes(element)) {
            parent.emit({
              type: 'unmount',
              data: {
                element: element
              }
            });
          }
        }
        return context;
      });
    }
  }]);
  return ContextMenuPlugin;
}(rete.Scope);

exports.ContextMenuPlugin = ContextMenuPlugin;
exports.Presets = index;
//# sourceMappingURL=rete-context-menu-plugin.common.js.map
