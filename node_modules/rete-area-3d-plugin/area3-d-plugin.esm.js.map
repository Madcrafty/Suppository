{"version":3,"file":"area3-d-plugin.esm.js","sources":["node_modules/three/examples/jsm/renderers/CSS3DRenderer.js","src/utils/geometry.ts","src/scene/ObjectHTML.ts","src/content.ts","src/scene/Drag/DragControls.ts","src/scene/Drag/DraggableObject3D.ts","src/scene/Drag/index.ts","src/scene/HybridRenderer.ts","node_modules/three/examples/jsm/controls/OrbitControls.js","src/scene/OrbitControls/index.ts","src/scene/index.ts","src/area.ts","src/connection-view.ts","src/elements-holder.ts","src/node-view.ts","src/extensions/animate.ts","src/utils/shapes.ts","src/extensions/forms/comment.ts","node_modules/parse-svg-path/index.js","node_modules/adaptive-bezier-curve/function.js","node_modules/adaptive-bezier-curve/index.js","node_modules/abs-svg-path/index.js","node_modules/normalize-svg-path/index.js","node_modules/vec2-copy/index.js","node_modules/svg-path-contours/index.js","src/extensions/forms/connection/geometry.ts","src/extensions/forms/connection/index.ts","node_modules/three/examples/jsm/utils/BufferGeometryUtils.js","src/extensions/forms/node/geometry.ts","src/extensions/forms/node/index.ts","src/extensions/forms/reroute.ts","src/extensions/forms/index.ts","src/utils/bounding-box.ts","src/utils/rects.ts","src/extensions/bounding-box.ts","src/extensions/lookAt.ts","src/extensions/index.ts","src/index.ts"],"sourcesContent":["import {\n\tMatrix4,\n\tObject3D,\n\tQuaternion,\n\tVector3\n} from 'three';\n\n/**\n * Based on http://www.emagix.net/academic/mscs-project/item/camera-sync-with-css3-and-webgl-threejs\n */\n\nconst _position = new Vector3();\nconst _quaternion = new Quaternion();\nconst _scale = new Vector3();\n\nclass CSS3DObject extends Object3D {\n\n\tconstructor( element = document.createElement( 'div' ) ) {\n\n\t\tsuper();\n\n\t\tthis.isCSS3DObject = true;\n\n\t\tthis.element = element;\n\t\tthis.element.style.position = 'absolute';\n\t\tthis.element.style.pointerEvents = 'auto';\n\t\tthis.element.style.userSelect = 'none';\n\n\t\tthis.element.setAttribute( 'draggable', false );\n\n\t\tthis.addEventListener( 'removed', function () {\n\n\t\t\tthis.traverse( function ( object ) {\n\n\t\t\t\tif ( object.element instanceof Element && object.element.parentNode !== null ) {\n\n\t\t\t\t\tobject.element.parentNode.removeChild( object.element );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.element = source.element.cloneNode( true );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass CSS3DSprite extends CSS3DObject {\n\n\tconstructor( element ) {\n\n\t\tsuper( element );\n\n\t\tthis.isCSS3DSprite = true;\n\n\t\tthis.rotation2D = 0;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.rotation2D = source.rotation2D;\n\n\t\treturn this;\n\n\t}\n\n}\n\n//\n\nconst _matrix = new Matrix4();\nconst _matrix2 = new Matrix4();\n\nclass CSS3DRenderer {\n\n\tconstructor( parameters = {} ) {\n\n\t\tconst _this = this;\n\n\t\tlet _width, _height;\n\t\tlet _widthHalf, _heightHalf;\n\n\t\tconst cache = {\n\t\t\tcamera: { fov: 0, style: '' },\n\t\t\tobjects: new WeakMap()\n\t\t};\n\n\t\tconst domElement = parameters.element !== undefined ? parameters.element : document.createElement( 'div' );\n\n\t\tdomElement.style.overflow = 'hidden';\n\n\t\tthis.domElement = domElement;\n\n\t\tconst viewElement = document.createElement( 'div' );\n\t\tviewElement.style.transformOrigin = '0 0';\n\t\tviewElement.style.pointerEvents = 'none';\n\t\tdomElement.appendChild( viewElement );\n\n\t\tconst cameraElement = document.createElement( 'div' );\n\n\t\tcameraElement.style.transformStyle = 'preserve-3d';\n\n\t\tviewElement.appendChild( cameraElement );\n\n\t\tthis.getSize = function () {\n\n\t\t\treturn {\n\t\t\t\twidth: _width,\n\t\t\t\theight: _height\n\t\t\t};\n\n\t\t};\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tconst fov = camera.projectionMatrix.elements[ 5 ] * _heightHalf;\n\n\t\t\tif ( cache.camera.fov !== fov ) {\n\n\t\t\t\tviewElement.style.perspective = camera.isPerspectiveCamera ? fov + 'px' : '';\n\t\t\t\tcache.camera.fov = fov;\n\n\t\t\t}\n\n\t\t\tif ( camera.view && camera.view.enabled ) {\n\n\t\t\t\t// view offset\n\t\t\t\tviewElement.style.transform = `translate( ${ - camera.view.offsetX * ( _width / camera.view.width ) }px, ${ - camera.view.offsetY * ( _height / camera.view.height ) }px )`;\n\n\t\t\t\t// view fullWidth and fullHeight, view width and height\n\t\t\t\tviewElement.style.transform += `scale( ${ camera.view.fullWidth / camera.view.width }, ${ camera.view.fullHeight / camera.view.height } )`;\n\n\t\t\t} else {\n\n\t\t\t\tviewElement.style.transform = '';\n\n\t\t\t}\n\n\t\t\tif ( scene.matrixWorldAutoUpdate === true ) scene.updateMatrixWorld();\n\t\t\tif ( camera.parent === null && camera.matrixWorldAutoUpdate === true ) camera.updateMatrixWorld();\n\n\t\t\tlet tx, ty;\n\n\t\t\tif ( camera.isOrthographicCamera ) {\n\n\t\t\t\ttx = - ( camera.right + camera.left ) / 2;\n\t\t\t\tty = ( camera.top + camera.bottom ) / 2;\n\n\t\t\t}\n\n\t\t\tconst scaleByViewOffset = camera.view && camera.view.enabled ? camera.view.height / camera.view.fullHeight : 1;\n\t\t\tconst cameraCSSMatrix = camera.isOrthographicCamera ?\n\t\t\t\t`scale( ${ scaleByViewOffset } )` + 'scale(' + fov + ')' + 'translate(' + epsilon( tx ) + 'px,' + epsilon( ty ) + 'px)' + getCameraCSSMatrix( camera.matrixWorldInverse ) :\n\t\t\t\t`scale( ${ scaleByViewOffset } )` + 'translateZ(' + fov + 'px)' + getCameraCSSMatrix( camera.matrixWorldInverse );\n\n\t\t\tconst style = cameraCSSMatrix +\n\t\t\t\t'translate(' + _widthHalf + 'px,' + _heightHalf + 'px)';\n\n\t\t\tif ( cache.camera.style !== style ) {\n\n\t\t\t\tcameraElement.style.transform = style;\n\n\t\t\t\tcache.camera.style = style;\n\n\t\t\t}\n\n\t\t\trenderObject( scene, scene, camera, cameraCSSMatrix );\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height ) {\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\t\t\t_widthHalf = _width / 2;\n\t\t\t_heightHalf = _height / 2;\n\n\t\t\tdomElement.style.width = width + 'px';\n\t\t\tdomElement.style.height = height + 'px';\n\n\t\t\tviewElement.style.width = width + 'px';\n\t\t\tviewElement.style.height = height + 'px';\n\n\t\t\tcameraElement.style.width = width + 'px';\n\t\t\tcameraElement.style.height = height + 'px';\n\n\t\t};\n\n\t\tfunction epsilon( value ) {\n\n\t\t\treturn Math.abs( value ) < 1e-10 ? 0 : value;\n\n\t\t}\n\n\t\tfunction getCameraCSSMatrix( matrix ) {\n\n\t\t\tconst elements = matrix.elements;\n\n\t\t\treturn 'matrix3d(' +\n\t\t\t\tepsilon( elements[ 0 ] ) + ',' +\n\t\t\t\tepsilon( - elements[ 1 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 2 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 3 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 4 ] ) + ',' +\n\t\t\t\tepsilon( - elements[ 5 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 6 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 7 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 8 ] ) + ',' +\n\t\t\t\tepsilon( - elements[ 9 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 10 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 11 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 12 ] ) + ',' +\n\t\t\t\tepsilon( - elements[ 13 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 14 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 15 ] ) +\n\t\t\t')';\n\n\t\t}\n\n\t\tfunction getObjectCSSMatrix( matrix ) {\n\n\t\t\tconst elements = matrix.elements;\n\t\t\tconst matrix3d = 'matrix3d(' +\n\t\t\t\tepsilon( elements[ 0 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 1 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 2 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 3 ] ) + ',' +\n\t\t\t\tepsilon( - elements[ 4 ] ) + ',' +\n\t\t\t\tepsilon( - elements[ 5 ] ) + ',' +\n\t\t\t\tepsilon( - elements[ 6 ] ) + ',' +\n\t\t\t\tepsilon( - elements[ 7 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 8 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 9 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 10 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 11 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 12 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 13 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 14 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 15 ] ) +\n\t\t\t')';\n\n\t\t\treturn 'translate(-50%,-50%)' + matrix3d;\n\n\t\t}\n\n\t\tfunction renderObject( object, scene, camera, cameraCSSMatrix ) {\n\n\t\t\tif ( object.isCSS3DObject ) {\n\n\t\t\t\tconst visible = ( object.visible === true ) && ( object.layers.test( camera.layers ) === true );\n\t\t\t\tobject.element.style.display = ( visible === true ) ? '' : 'none';\n\n\t\t\t\tif ( visible === true ) {\n\n\t\t\t\t\tobject.onBeforeRender( _this, scene, camera );\n\n\t\t\t\t\tlet style;\n\n\t\t\t\t\tif ( object.isCSS3DSprite ) {\n\n\t\t\t\t\t\t// http://swiftcoder.wordpress.com/2008/11/25/constructing-a-billboard-matrix/\n\n\t\t\t\t\t\t_matrix.copy( camera.matrixWorldInverse );\n\t\t\t\t\t\t_matrix.transpose();\n\n\t\t\t\t\t\tif ( object.rotation2D !== 0 ) _matrix.multiply( _matrix2.makeRotationZ( object.rotation2D ) );\n\n\t\t\t\t\t\tobject.matrixWorld.decompose( _position, _quaternion, _scale );\n\t\t\t\t\t\t_matrix.setPosition( _position );\n\t\t\t\t\t\t_matrix.scale( _scale );\n\n\t\t\t\t\t\t_matrix.elements[ 3 ] = 0;\n\t\t\t\t\t\t_matrix.elements[ 7 ] = 0;\n\t\t\t\t\t\t_matrix.elements[ 11 ] = 0;\n\t\t\t\t\t\t_matrix.elements[ 15 ] = 1;\n\n\t\t\t\t\t\tstyle = getObjectCSSMatrix( _matrix );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstyle = getObjectCSSMatrix( object.matrixWorld );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst element = object.element;\n\t\t\t\t\tconst cachedObject = cache.objects.get( object );\n\n\t\t\t\t\tif ( cachedObject === undefined || cachedObject.style !== style ) {\n\n\t\t\t\t\t\telement.style.transform = style;\n\n\t\t\t\t\t\tconst objectData = { style: style };\n\t\t\t\t\t\tcache.objects.set( object, objectData );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( element.parentNode !== cameraElement ) {\n\n\t\t\t\t\t\tcameraElement.appendChild( element );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobject.onAfterRender( _this, scene, camera );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = object.children.length; i < l; i ++ ) {\n\n\t\t\t\trenderObject( object.children[ i ], scene, camera, cameraCSSMatrix );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nexport { CSS3DObject, CSS3DSprite, CSS3DRenderer };\n","import { BufferGeometry } from 'three'\n\nexport function flipFaces(geometry: BufferGeometry) {\n  const index = geometry.getIndex()\n\n  if (index) {\n    const numTriangles = index.count / 3\n\n    for (let i = 0; i < numTriangles; i++) {\n      const a = index.getX(i * 3 + 2)\n      const b = index.getX(i * 3 + 1)\n      const c = index.getX(i * 3)\n\n      index.setXYZ(i * 3, a, b, c)\n    }\n  }\n}\n","import {\n  BackSide, BufferGeometry, FrontSide, Material,\n  Mesh, MeshBasicMaterial, NoBlending, Object3D, ShadowMaterial\n} from 'three'\nimport { CSS3DObject } from 'three/examples/jsm/renderers/CSS3DRenderer.js'\n\nimport { flipFaces } from '../utils/geometry'\n\nexport function createMaterial(transparent: boolean) {\n  return new ShadowMaterial({\n    transparent: true,\n    opacity: transparent ? 0.5 : 0.7,\n    blending: NoBlending,\n    side: FrontSide\n  })\n}\n\nexport function createBackMaterial() {\n  return new MeshBasicMaterial({\n    color: 0x6e88ff,\n    side: BackSide\n  })\n}\n\nexport type ObjectHTMLMaterials = {\n  front?: Material\n  back?: Material\n}\n\nexport class ObjectHTML extends Object3D {\n  css3dObject: CSS3DObject\n  front: Mesh\n  back: Mesh\n\n  constructor(element: HTMLElement) {\n    super()\n    this.css3dObject = new CSS3DObject(element)\n    this.css3dObject.onAfterRender = () => {\n      const internalTranslate = ' translate(50%, 50%)'\n\n      if (!element.style.transform.endsWith(internalTranslate)) {\n        element.style.transform += internalTranslate\n      }\n    }\n    this.add(this.css3dObject)\n\n    const front = new Mesh()\n\n    this.front = front\n    this.add(front)\n\n    const back = new Mesh()\n\n    back.castShadow = true\n    this.back = back\n    this.add(back)\n\n    this.updateMaterials()\n  }\n\n  updateGeometry(geometry?: BufferGeometry) {\n    const scaled = geometry?.clone().scale(1, -1, 1)\n\n    if (scaled) flipFaces(scaled)\n\n    if (this.front) this.front.geometry = scaled || new BufferGeometry()\n    if (this.back) this.back.geometry = scaled || new BufferGeometry()\n  }\n\n  updateMaterials(materials?: ObjectHTMLMaterials) {\n    if (this.front) this.front.material = materials?.front || createMaterial(false)\n    if (this.back) this.back.material = materials?.back || createBackMaterial()\n  }\n}\n\nexport function findTop(objects: ObjectHTML[]) {\n  objects.sort((a, b) => {\n    if (!a.css3dObject || !b.css3dObject) return 0\n    const position = a.css3dObject.element.compareDocumentPosition(b.css3dObject.element)\n\n    if (position & Node.DOCUMENT_POSITION_FOLLOWING) {\n      return 1\n    } else if (position & Node.DOCUMENT_POSITION_PRECEDING) {\n      return -1\n    }\n    return 0\n  })\n\n  return objects[0]\n}\n","import { BufferGeometry } from 'three'\n\nimport { HybridScene } from './scene'\nimport { ObjectHTML, ObjectHTMLMaterials } from './scene/ObjectHTML'\n\n/**\n * Responsible for managing 2D content in the plane of 3D scene for a current editor\n */\nexport class Content<Scope> {\n  public holder: HTMLElement\n  public objects = new WeakMap<HTMLElement, ObjectHTML>()\n\n  constructor(private scene: HybridScene<Scope>, private scope: Scope, private reordered: (target: HTMLElement) => Promise<unknown>) {\n    const css3dContainer = scene.renderer.css3d.domElement.firstElementChild?.firstElementChild\n\n    if (!css3dContainer || !(css3dContainer instanceof HTMLElement)) {\n      throw new Error('cannot find container for css3d element')\n    }\n\n    this.holder = css3dContainer\n  }\n\n  public getPointerFrom(event: MouseEvent) {\n    const { left, top } = this.holder.getBoundingClientRect()\n    const x = event.clientX - left\n    const y = event.clientY - top\n\n    return { x, y }\n  }\n\n  /**\n   * Add an HTML element to the 3D scene\n   * @param element HTML element\n   */\n  add(element: HTMLElement, object = new ObjectHTML(element)) {\n    this.objects.set(element, object)\n    this.holder.appendChild(element)\n    this.scene.add(object, this.scope)\n  }\n\n  /**\n   * Reorder the given element in the 3D scene\n   * @param target HTML element to reorder\n   * @param next HTML element to insert before\n   * @throws if `target` or `next` are not in the scene\n   */\n  // eslint-disable-next-line no-undef\n  async reorder(target: HTMLElement, next: ChildNode | null) {\n    if (!this.holder.contains(target)) {\n      throw new Error(`content doesn't have 'target' for reordering`)\n    }\n    if (next !== null && !this.holder.contains(next)) {\n      throw new Error(`content doesn't have 'next' for reordering`)\n    }\n\n    this.holder.insertBefore(target, next)\n    await this.reordered(target)\n  }\n\n  /**\n   * Remove an HTML element from the 3D scene\n   * @param element HTML element\n   */\n  remove(element: HTMLElement) {\n    const object = this.objects.get(element)\n\n    if (object) {\n      this.objects.delete(element)\n      this.scene.remove(object, this.scope)\n    }\n  }\n\n  /**\n   * Update the form (geometry) of the given element\n   */\n  updateGeometry(element: HTMLElement, geometry?: BufferGeometry | ((old?: BufferGeometry) => BufferGeometry | undefined)) {\n    const object = this.objects.get(element)\n\n    if (object) {\n      object.updateGeometry(typeof geometry === 'function' ? geometry(object.front.geometry) : geometry)\n    }\n  }\n\n  /**\n   * Update the material of the given element\n   */\n  updateMaterials(element: HTMLElement, materials?: ObjectHTMLMaterials) {\n    const object = this.objects.get(element)\n\n    if (object) object.updateMaterials(materials)\n  }\n}\n","import {\n  Camera, EventDispatcher, Intersection, Matrix4,\n  Object3D, Plane, Raycaster, Vector2, Vector3\n} from 'three'\n\nimport { findTop, ObjectHTML } from '../ObjectHTML'\n\ntype DefaultObject3D = Object3D\nexport type DragStartEvent = { type: 'dragstart', object: DefaultObject3D }\nexport type DragEvent = { type: 'drag', object: DefaultObject3D, position: Vector3 }\nexport type DragEndEvent = { type: 'dragend', object: DefaultObject3D }\n\nconst raycaster = new Raycaster()\n\n// EventDispatcher should have default generic for three 152-156 compatibility\nclass DragControls extends EventDispatcher {\n  enabled = true\n  intersections: Intersection<ObjectHTML>[] = []\n  selected: Object3D | null = null\n  hovered: Object3D | null = null\n  objects = new Set<DefaultObject3D>()\n\n  private pointer = new Vector2()\n  private offset = new Vector3()\n  private intersection = new Vector3()\n  private worldPosition = new Vector3()\n  private inverseMatrix = new Matrix4()\n\n  constructor(private camera: Camera, private domElement: HTMLElement, private getPlane: (object: Object3D) => Plane) {\n    super()\n\n    this.domElement.style.touchAction = 'none' // disable touch scroll\n    this.activate()\n  }\n\n  attach(object: Object3D) {\n    this.objects.add(object)\n  }\n\n  detach(object: Object3D) {\n    this.objects.delete(object)\n  }\n\n  activate() {\n    this.domElement.addEventListener('pointermove', this.onPointerMove)\n    this.domElement.addEventListener('pointerdown', this.onPointerDown)\n    this.domElement.addEventListener('pointerup', this.onPointerCancel)\n    this.domElement.addEventListener('pointerleave', this.onPointerCancel)\n  }\n\n  deactivate() {\n    this.domElement.removeEventListener('pointermove', this.onPointerMove)\n    this.domElement.removeEventListener('pointerdown', this.onPointerDown)\n    this.domElement.removeEventListener('pointerup', this.onPointerCancel)\n    this.domElement.removeEventListener('pointerleave', this.onPointerCancel)\n\n    this.domElement.style.cursor = ''\n  }\n\n  dispose() {\n    this.deactivate()\n  }\n\n  getObjects(): Object3D[] {\n    return Array.from(this.objects.values())\n  }\n\n  getRaycaster() {\n    return raycaster\n  }\n\n  onPointerMove = (event: PointerEvent) => {\n    if (this.enabled === false) return\n\n    this.updatePointer(event)\n\n    raycaster.setFromCamera(this.pointer, this.camera)\n\n    if (this.selected) {\n      if (raycaster.ray.intersectPlane(this.getPlane(this.selected), this.intersection)) {\n        const newPosition = this.intersection.sub(this.offset).applyMatrix4(this.inverseMatrix)\n\n        const eventData: DragEvent = { type: 'drag', object: this.selected, position: newPosition }\n\n        this.dispatchEvent(eventData as never)\n      }\n    }\n  }\n\n  findContainer(intersection: Intersection<ObjectHTML>) {\n    let object: ObjectHTML | null = null\n    const objects = this.getObjects()\n\n    intersection.object.traverseAncestors(intersectedObject => {\n      if (objects.includes(intersectedObject) && intersectedObject instanceof ObjectHTML) object = intersectedObject\n    })\n    if (!object) throw new Error('cannot find Object3D')\n\n    return object\n  }\n\n  findIntersectedObject(intersections: Intersection<ObjectHTML>[]) {\n    return findTop(intersections.map(i => this.findContainer(i)))\n  }\n\n  onPointerDown = (event: MouseEvent) => {\n    if (this.enabled === false) return\n\n    this.updatePointer(event)\n\n    this.intersections.length = 0\n\n    raycaster.setFromCamera(this.pointer, this.camera)\n    this.intersections = raycaster.intersectObjects(this.getObjects(), true)\n\n    if (this.intersections.length > 0) {\n      this.selected = this.findIntersectedObject(this.intersections) || null\n\n      if (!this.selected) return\n      if (!this.selected.parent) throw new Error('parent required for selected object')\n\n      if (raycaster.ray.intersectPlane(this.getPlane(this.selected), this.intersection)) {\n        this.inverseMatrix.copy(this.selected.parent.matrixWorld).invert()\n        this.offset.copy(this.intersection).sub(this.worldPosition.setFromMatrixPosition(this.selected.matrixWorld))\n      }\n\n      event.stopPropagation()\n      this.domElement.style.cursor = 'move'\n\n      const eventData: DragStartEvent = { type: 'dragstart', object: this.selected }\n\n      this.dispatchEvent(eventData as never)\n    }\n  }\n\n  onPointerCancel = () => {\n    if (this.enabled === false) return\n\n    if (this.selected) {\n      const eventData: DragEndEvent = { type: 'dragend', object: this.selected }\n\n      this.dispatchEvent(eventData as never)\n\n      this.selected = null\n    }\n\n    this.domElement.style.cursor = this.hovered ? 'pointer' : 'auto'\n  }\n\n  updatePointer = (event: MouseEvent) => {\n    const rect = this.domElement.getBoundingClientRect()\n\n    this.pointer.x = (event.clientX - rect.left) / rect.width * 2 - 1\n    this.pointer.y = - (event.clientY - rect.top) / rect.height * 2 + 1\n  }\n}\n\nexport { DragControls }\n","import { ObjectHTML } from '../ObjectHTML'\n\nexport class DraggableObject3D extends ObjectHTML {\n  constructor(element: HTMLElement, public events: {\n    start: () => void,\n    translate: (x: number, y: number, z: number) => void,\n    drag: () => void\n  }) {\n    super(element)\n  }\n}\n","import { DragControls, DragStartEvent, DragEvent, DragEndEvent } from './DragControls'\nimport { DraggableObject3D } from './DraggableObject3D'\n\nexport { DragControls, DraggableObject3D }\n\nexport function attachDraggableHooks(controls: DragControls) {\n  controls.addEventListener('dragstart', (e: any) => {\n    const event = e as DragStartEvent\n\n    if (event.object instanceof DraggableObject3D) {\n      event.object.events.start()\n    }\n  })\n  controls.addEventListener('drag', (e: any) => {\n    const event = e as DragEvent\n\n    if (event.object instanceof DraggableObject3D) {\n      const { x, y, z } = event.position\n\n      event.object.events.translate(x, y, z)\n    }\n  })\n  controls.addEventListener('dragend', (e: any) => {\n    const event = e as DragEndEvent\n\n    if (event.object instanceof DraggableObject3D) {\n      event.object.events.drag()\n    }\n  })\n}\n","import { Camera, PCFSoftShadowMap, Scene, WebGLRenderer } from 'three'\nimport { CSS3DRenderer } from 'three/examples/jsm/renderers/CSS3DRenderer.js'\n\n/**\n * HybridRenderer is a wrapper for Three.js CSS3DRenderer and WebGLRenderer.\n */\nexport class HybridRenderer {\n  /** CSS3DRenderer instance created by default */\n  css3d: CSS3DRenderer\n  /** WebGLRenderer instance created by default */\n  webgl: WebGLRenderer\n  domElement: HTMLElement\n\n  constructor() {\n    this.css3d = this.getDefaultCSS3DRenderer()\n    this.webgl = this.getDefaultWebGLRenderer()\n\n    this.domElement = document.createElement('div')\n\n    this.css3d.domElement.setAttribute('data-css3d', 'true')\n\n    fillAbsolute(this.domElement)\n    fillAbsolute(this.css3d.domElement)\n    fillAbsolute(this.webgl.domElement)\n\n    this.domElement.appendChild(this.css3d.domElement)\n    this.domElement.appendChild(this.webgl.domElement)\n\n    this.webgl.domElement.style.pointerEvents = 'none'\n  }\n\n  getContent() {\n    return this.webgl.domElement.firstElementChild\n  }\n\n  private getDefaultCSS3DRenderer() {\n    const css3d = new CSS3DRenderer()\n\n    return css3d\n  }\n\n  private getDefaultWebGLRenderer() {\n    const webgl = new WebGLRenderer({ alpha: false, antialias: true })\n\n    webgl.setPixelRatio(window.devicePixelRatio)\n    webgl.setClearColor(0xffffff, 0)\n    webgl.shadowMap.enabled = true\n    webgl.shadowMap.type = PCFSoftShadowMap\n\n    return webgl\n  }\n\n  setSize(width: number, height: number) {\n    this.css3d.setSize(width, height)\n    this.webgl.setSize(width, height)\n  }\n\n  render(scene: Scene, camera: Camera) {\n    this.css3d.render(scene, camera)\n    this.webgl.render(scene, camera)\n  }\n}\n\nfunction fillAbsolute(el: HTMLElement) {\n  el.style.width = '100%'\n  el.style.height = '100%'\n  el.style.position = 'absolute'\n  el.style.left = '0'\n  el.style.top = '0'\n}\n","import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3,\n\tPlane,\n\tRay,\n\tMathUtils\n} from 'three';\n\n// OrbitControls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\nconst _ray = new Ray();\nconst _plane = new Plane();\nconst TILT_LIMIT = Math.cos( 70 * MathUtils.DEG2RAD );\n\nclass OrbitControls extends EventDispatcher {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper();\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\t\tthis.zoomToCursor = false;\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t//\n\t\t// public methods\n\t\t//\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn spherical.phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn spherical.theta;\n\n\t\t};\n\n\t\tthis.getDistance = function () {\n\n\t\t\treturn this.object.position.distanceTo( this.target );\n\n\t\t};\n\n\t\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = domElement;\n\n\t\t};\n\n\t\tthis.stopListenToKeyEvents = function () {\n\n\t\t\tthis._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = null;\n\n\t\t};\n\n\t\tthis.saveState = function () {\n\n\t\t\tscope.target0.copy( scope.target );\n\t\t\tscope.position0.copy( scope.object.position );\n\t\t\tscope.zoom0 = scope.object.zoom;\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\tscope.update();\n\n\t\t\tstate = STATE.NONE;\n\n\t\t};\n\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\n\t\tthis.update = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tconst quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\t\tconst quatInverse = quat.clone().invert();\n\n\t\t\tconst lastPosition = new Vector3();\n\t\t\tconst lastQuaternion = new Quaternion();\n\t\t\tconst lastTargetPosition = new Vector3();\n\n\t\t\tconst twoPI = 2 * Math.PI;\n\n\t\t\treturn function update( deltaTime = null ) {\n\n\t\t\t\tconst position = scope.object.position;\n\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\trotateLeft( getAutoRotationAngle( deltaTime ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t}\n\n\t\t\t\t// restrict theta to be between desired limits\n\n\t\t\t\tlet min = scope.minAzimuthAngle;\n\t\t\t\tlet max = scope.maxAzimuthAngle;\n\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\t\tspherical.makeSafe();\n\n\n\t\t\t\t// move target to panned location\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\t}\n\n\t\t\t\t// adjust the camera position based on zoom only if we're not zooming to the cursor or if it's an ortho camera\n\t\t\t\t// we adjust zoom later in these cases\n\t\t\t\tif ( scope.zoomToCursor && performCursorZoom || scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\tspherical.radius = clampDistance( spherical.radius );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.radius = clampDistance( spherical.radius * scale );\n\n\t\t\t\t}\n\n\n\t\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\t// adjust camera position\n\t\t\t\tlet zoomChanged = false;\n\t\t\t\tif ( scope.zoomToCursor && performCursorZoom ) {\n\n\t\t\t\t\tlet newRadius = null;\n\t\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t\t// move the camera down the pointer ray\n\t\t\t\t\t\t// this method avoids floating point error\n\t\t\t\t\t\tconst prevRadius = offset.length();\n\t\t\t\t\t\tnewRadius = clampDistance( prevRadius * scale );\n\n\t\t\t\t\t\tconst radiusDelta = prevRadius - newRadius;\n\t\t\t\t\t\tscope.object.position.addScaledVector( dollyDirection, radiusDelta );\n\t\t\t\t\t\tscope.object.updateMatrixWorld();\n\n\t\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t\t// adjust the ortho camera position based on zoom changes\n\t\t\t\t\t\tconst mouseBefore = new Vector3( mouse.x, mouse.y, 0 );\n\t\t\t\t\t\tmouseBefore.unproject( scope.object );\n\n\t\t\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / scale ) );\n\t\t\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\t\t\tzoomChanged = true;\n\n\t\t\t\t\t\tconst mouseAfter = new Vector3( mouse.x, mouse.y, 0 );\n\t\t\t\t\t\tmouseAfter.unproject( scope.object );\n\n\t\t\t\t\t\tscope.object.position.sub( mouseAfter ).add( mouseBefore );\n\t\t\t\t\t\tscope.object.updateMatrixWorld();\n\n\t\t\t\t\t\tnewRadius = offset.length();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled.' );\n\t\t\t\t\t\tscope.zoomToCursor = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// handle the placement of the target\n\t\t\t\t\tif ( newRadius !== null ) {\n\n\t\t\t\t\t\tif ( this.screenSpacePanning ) {\n\n\t\t\t\t\t\t\t// position the orbit target in front of the new camera position\n\t\t\t\t\t\t\tscope.target.set( 0, 0, - 1 )\n\t\t\t\t\t\t\t\t.transformDirection( scope.object.matrix )\n\t\t\t\t\t\t\t\t.multiplyScalar( newRadius )\n\t\t\t\t\t\t\t\t.add( scope.object.position );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// get the ray and translation plane to compute target\n\t\t\t\t\t\t\t_ray.origin.copy( scope.object.position );\n\t\t\t\t\t\t\t_ray.direction.set( 0, 0, - 1 ).transformDirection( scope.object.matrix );\n\n\t\t\t\t\t\t\t// if the camera is 20 degrees above the horizon then don't adjust the focus target to avoid\n\t\t\t\t\t\t\t// extremely large values\n\t\t\t\t\t\t\tif ( Math.abs( scope.object.up.dot( _ray.direction ) ) < TILT_LIMIT ) {\n\n\t\t\t\t\t\t\t\tobject.lookAt( scope.target );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t_plane.setFromNormalAndCoplanarPoint( scope.object.up, scope.target );\n\t\t\t\t\t\t\t\t_ray.intersectPlane( _plane, scope.target );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / scale ) );\n\t\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\t\tzoomChanged = true;\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\t\t\t\tperformCursorZoom = false;\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ||\n\t\t\t\t\tlastTargetPosition.distanceToSquared( scope.target ) > 0 ) {\n\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tlastTargetPosition.copy( scope.target );\n\n\t\t\t\t\tzoomChanged = false;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function () {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\tscope.domElement.removeEventListener( 'pointercancel', onPointerUp );\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\t\t\t\tscope._domElementKeyEvents = null;\n\n\t\t\t}\n\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t};\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tconst scope = this;\n\n\t\tconst STATE = {\n\t\t\tNONE: - 1,\n\t\t\tROTATE: 0,\n\t\t\tDOLLY: 1,\n\t\t\tPAN: 2,\n\t\t\tTOUCH_ROTATE: 3,\n\t\t\tTOUCH_PAN: 4,\n\t\t\tTOUCH_DOLLY_PAN: 5,\n\t\t\tTOUCH_DOLLY_ROTATE: 6\n\t\t};\n\n\t\tlet state = STATE.NONE;\n\n\t\tconst EPS = 0.000001;\n\n\t\t// current position in spherical coordinates\n\t\tconst spherical = new Spherical();\n\t\tconst sphericalDelta = new Spherical();\n\n\t\tlet scale = 1;\n\t\tconst panOffset = new Vector3();\n\n\t\tconst rotateStart = new Vector2();\n\t\tconst rotateEnd = new Vector2();\n\t\tconst rotateDelta = new Vector2();\n\n\t\tconst panStart = new Vector2();\n\t\tconst panEnd = new Vector2();\n\t\tconst panDelta = new Vector2();\n\n\t\tconst dollyStart = new Vector2();\n\t\tconst dollyEnd = new Vector2();\n\t\tconst dollyDelta = new Vector2();\n\n\t\tconst dollyDirection = new Vector3();\n\t\tconst mouse = new Vector2();\n\t\tlet performCursorZoom = false;\n\n\t\tconst pointers = [];\n\t\tconst pointerPositions = {};\n\n\t\tfunction getAutoRotationAngle( deltaTime ) {\n\n\t\t\tif ( deltaTime !== null ) {\n\n\t\t\t\treturn ( 2 * Math.PI / 60 * scope.autoRotateSpeed ) * deltaTime;\n\n\t\t\t} else {\n\n\t\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction rotateLeft( angle ) {\n\n\t\t\tsphericalDelta.theta -= angle;\n\n\t\t}\n\n\t\tfunction rotateUp( angle ) {\n\n\t\t\tsphericalDelta.phi -= angle;\n\n\t\t}\n\n\t\tconst panLeft = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tconst panUp = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t\t}\n\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// deltaX and deltaY are in pixels; right and down are positive\n\t\tconst pan = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\t\tconst element = scope.domElement;\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t// perspective\n\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\tlet targetDistance = offset.length();\n\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t// orthographic\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}();\n\n\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera || scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera || scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateMouseParameters( event ) {\n\n\t\t\tif ( ! scope.zoomToCursor ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tperformCursorZoom = true;\n\n\t\t\tconst rect = scope.domElement.getBoundingClientRect();\n\t\t\tconst x = event.clientX - rect.left;\n\t\t\tconst y = event.clientY - rect.top;\n\t\t\tconst w = rect.width;\n\t\t\tconst h = rect.height;\n\n\t\t\tmouse.x = ( x / w ) * 2 - 1;\n\t\t\tmouse.y = - ( y / h ) * 2 + 1;\n\n\t\t\tdollyDirection.set( mouse.x, mouse.y, 1 ).unproject( scope.object ).sub( scope.object.position ).normalize();\n\n\t\t}\n\n\t\tfunction clampDistance( dist ) {\n\n\t\t\treturn Math.max( scope.minDistance, Math.min( scope.maxDistance, dist ) );\n\n\t\t}\n\n\t\t//\n\t\t// event callbacks - update the object state\n\t\t//\n\n\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\tupdateMouseParameters( event );\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseWheel( event ) {\n\n\t\t\tupdateMouseParameters( event );\n\n\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleKeyDown( event ) {\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tswitch ( event.code ) {\n\n\t\t\t\tcase scope.keys.UP:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateUp( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateUp( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateLeft( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateLeft( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction handleTouchStartRotate() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\trotateStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\trotateStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartPan() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\tpanStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartDolly() {\n\n\t\t\tconst dx = pointers[ 0 ].pageX - pointers[ 1 ].pageX;\n\t\t\tconst dy = pointers[ 0 ].pageY - pointers[ 1 ].pageY;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyPan() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enablePan ) handleTouchStartPan();\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyRotate() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate();\n\n\t\t}\n\n\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\tif ( pointers.length == 1 ) {\n\n\t\t\t\trotateEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\trotateEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\tpanEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\tconst dx = event.pageX - position.x;\n\t\t\tconst dy = event.pageY - position.y;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyOut( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t\t}\n\n\t\t//\n\t\t// event handlers - FSM: listen for events and reset state\n\t\t//\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.setPointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.addEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\taddPointer( event );\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchStart( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseDown( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchMove( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseMove( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerUp( event ) {\n\n\t\t\tremovePointer( event );\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.releasePointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tlet mouseAction;\n\n\t\t\tswitch ( event.button ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tmouseAction = - 1;\n\n\t\t\t}\n\n\t\t\tswitch ( mouseAction ) {\n\n\t\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.PAN:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\thandleMouseWheel( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\t\thandleKeyDown( event );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( pointers.length ) {\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onContextMenu( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\tfunction addPointer( event ) {\n\n\t\t\tpointers.push( event );\n\n\t\t}\n\n\t\tfunction removePointer( event ) {\n\n\t\t\tdelete pointerPositions[ event.pointerId ];\n\n\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\n\n\t\t\t\tif ( pointers[ i ].pointerId == event.pointerId ) {\n\n\t\t\t\t\tpointers.splice( i, 1 );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction trackPointer( event ) {\n\n\t\t\tlet position = pointerPositions[ event.pointerId ];\n\n\t\t\tif ( position === undefined ) {\n\n\t\t\t\tposition = new Vector2();\n\t\t\t\tpointerPositions[ event.pointerId ] = position;\n\n\t\t\t}\n\n\t\t\tposition.set( event.pageX, event.pageY );\n\n\t\t}\n\n\t\tfunction getSecondPointerPosition( event ) {\n\n\t\t\tconst pointer = ( event.pointerId === pointers[ 0 ].pointerId ) ? pointers[ 1 ] : pointers[ 0 ];\n\n\t\t\treturn pointerPositions[ pointer.pointerId ];\n\n\t\t}\n\n\t\t//\n\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.addEventListener( 'pointercancel', onPointerUp );\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\n\n\t\t// force an update at start\n\n\t\tthis.update();\n\n\t}\n\n}\n\nexport { OrbitControls };\n","/* eslint-disable init-declarations */\nimport { Camera, Euler, Vector3 } from 'three'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js'\n\nexport { OrbitControls }\n\nexport type Transform = { position: Vector3, rotation: Euler }\n\ntype Check = (current: Transform, previous: Transform | undefined) => Promise<boolean | unknown>\ntype Updated = (current: Transform, previous: Transform | undefined) => Promise<boolean | unknown>\n\nexport function orbitControlsRestrictor(orbit: OrbitControls, camera: Camera, check: Check, updated: Updated) {\n  let previous: Transform | undefined\n  let previousTarget: Vector3\n\n  // eslint-disable-next-line max-statements\n  orbit.addEventListener('change', async () => {\n    const position = camera.position.clone()\n    const rotation = camera.rotation.clone()\n\n    if (await check({ position, rotation }, previous)) {\n      previous = { position, rotation }\n      previousTarget = orbit.target.clone()\n    } else {\n      if (previous && previousTarget) {\n        const { position: p, rotation: r } = previous\n        const t = previousTarget\n\n        camera.position.fromArray([p.x, p.y, p.z])\n        camera.rotation.fromArray([r.x, r.y, r.z])\n        orbit.target.fromArray([t.x, t.y, t.z])\n      }\n      orbit.update()\n      await updated({ position, rotation }, previous)\n    }\n  })\n}\n","import {\n  Object3D, PerspectiveCamera, Plane,\n  Raycaster, Scene, Vector2, Vector3\n} from 'three'\n\nimport { attachDraggableHooks, DragControls, DraggableObject3D } from './Drag'\nimport { HybridRenderer } from './HybridRenderer'\nimport { OrbitControls } from './OrbitControls'\n\nexport { DraggableObject3D }\n\ntype DefaultObject3D = Object3D\n\n/**\n * HybridScene is a wrapper for Three.js Scene with some additional features such as:\n * - drag controls\n * - orbit controls\n * - camera\n * - renderer\n */\nexport class HybridScene<Scope> {\n  camera: PerspectiveCamera\n  renderer: HybridRenderer\n  root = new Scene()\n  canvases = new Map<Scope, DefaultObject3D>()\n  controls: DragControls\n  orbit: OrbitControls\n\n  constructor(private container: HTMLElement) {\n    this.camera = new PerspectiveCamera()\n    this.camera.position.set(0, 0, 1000)\n    this.camera.fov = 45\n    this.camera.near = 1\n    this.camera.far = 4000\n\n    this.renderer = new HybridRenderer()\n\n    container.appendChild(this.renderer.domElement)\n\n    this.orbit = this.createOrbitControls()\n    this.controls = this.createDragControls(this.orbit)\n  }\n\n  private createOrbitControls() {\n    const orbit = new OrbitControls(this.camera, this.renderer.domElement)\n\n    orbit.update()\n\n    let orbitChangeNumber = 0\n\n    orbit.addEventListener('start', () => {\n      orbitChangeNumber = 0\n    })\n\n    orbit.addEventListener('change', () => {\n      orbitChangeNumber++\n    })\n\n    this.renderer.domElement.addEventListener('contextmenu', e => {\n      if (orbitChangeNumber > 5) e.stopPropagation()\n    })\n\n    return orbit\n  }\n\n  private createDragControls(orbit: OrbitControls) {\n    const controls = new DragControls(\n      this.camera,\n      this.renderer.domElement,\n      (object) => {\n        const canvas = object.parent\n\n        if (!canvas) throw new Error('object doesnt have parent')\n        if (!Array.from(this.canvases.values()).includes(canvas)) throw new Error('object parent isnt canvas')\n\n        return this.canvasToPlane(canvas)\n      }\n    )\n\n    attachDraggableHooks(controls)\n\n    controls.addEventListener('dragstart', () => orbit.enabled = false)\n    controls.addEventListener('dragend', () => orbit.enabled = true)\n\n    return controls\n  }\n\n  canvasToPlane(canvas: Object3D) {\n    const plane = new Plane()\n    const normal = new Vector3(0, 0, 1)\n\n    normal.applyQuaternion(canvas.quaternion)\n    plane.setFromNormalAndCoplanarPoint(normal, canvas.position.clone())\n\n    return plane\n  }\n\n  addCanvasFor(scope: Scope) {\n    const canvas = new Object3D()\n\n    canvas.scale.set(1, -1, 1)\n    this.canvases.set(scope, canvas)\n    this.root.add(canvas)\n  }\n\n  resize(width: number, height: number) {\n    this.camera.aspect = width / height\n    this.camera.updateProjectionMatrix()\n    this.renderer.setSize(width, height)\n  }\n\n  /**\n   * Render the frame. Can be directly used instead of `animate` extension.\n   */\n  public render() {\n    this.renderer.render(this.root, this.camera)\n  }\n\n  private getCanvasFor(scope: Scope) {\n    const canvas = this.canvases.get(scope)\n\n    if (!canvas) throw new Error('cannot find canvas for the scope')\n\n    return canvas\n  }\n\n  add(object: Object3D, scope: Scope) {\n    object.scale.set(1, -1, 1)\n    this.getCanvasFor(scope).add(object)\n    if (object instanceof DraggableObject3D) this.controls.attach(object)\n    this.render() // force DOM elements to be rendered synchronously\n  }\n\n  remove(object: Object3D, scope: Scope) {\n    this.getCanvasFor(scope).remove(object)\n    if (object instanceof DraggableObject3D) this.controls.detach(object)\n    this.render() // force DOM elements to be rendered synchronously\n  }\n\n  public getPointerFrom(event: MouseEvent, scope: Scope) {\n    const rect = this.container.getBoundingClientRect()\n    const raycaster = new Raycaster()\n    const pointer = new Vector2(\n      (event.clientX - rect.left) / rect.width * 2 - 1,\n      - (event.clientY - rect.top) / rect.height * 2 + 1\n    )\n\n    raycaster.setFromCamera(pointer, this.camera)\n\n    const canvas = this.getCanvasFor(scope)\n    const plane = this.canvasToPlane(canvas)\n\n    const intersection = raycaster.ray.intersectPlane(plane, new Vector3())\n\n    if (intersection) {\n      return canvas.worldToLocal(intersection)\n    }\n    return null\n  }\n}\n","import { Object3D } from 'three'\nimport { Content } from './content'\nimport { HybridScene } from './scene'\nimport { orbitControlsRestrictor } from './scene/OrbitControls'\nimport { Position, Vector3D } from './types'\n\nexport type Transform = { position: Vector3D, rotation: Vector3D }\nexport type TransformEventParams = { previous: Transform | undefined, current: Transform }\n\ntype Events = {\n  pointerDown: (position: Position, event: PointerEvent) => void\n  pointerMove: (position: Position, event: PointerEvent) => void\n  pointerUp: (position: Position, event: PointerEvent) => void\n  resize: (event: Event) => void\n  transformed: (params: TransformEventParams) => Promise<unknown>\n  reordered: (element: HTMLElement) => Promise<unknown>\n}\ntype Guards = {\n  transform: (params: TransformEventParams) => Promise<unknown | boolean>\n}\n\n/**\n * Area class is responsible for managing 3D scene for a current editor\n */\nexport class Area<Scope> {\n  scene: HybridScene<Scope>\n  pointer: Position = { x: 0, y: 0 }\n\n  content: Content<Scope>\n\n  constructor(private container: HTMLElement, scene: HybridScene<Scope> | null, private scope: Scope, private events: Events, private guards: Guards) {\n    this.scene = scene || new HybridScene(this.container)\n    this.content = new Content(this.scene, scope, element => this.events.reordered(element))\n\n    this.container.addEventListener('pointerdown', this.pointerdown)\n    this.container.addEventListener('pointermove', this.pointermove)\n    window.addEventListener('pointerup', this.pointerup)\n    window.addEventListener('resize', this.resize)\n\n    orbitControlsRestrictor(\n      this.scene.orbit,\n      this.scene.camera,\n      (current, previous) => this.guards.transform({ previous, current }),\n      (current, previous) => this.events.transformed({ previous, current })\n    )\n\n    this.scene.resize(this.container.clientWidth, this.container.clientHeight)\n  }\n\n  /**\n   * Get the canvas in form of Object3D for the current scope\n   */\n  public getCanvas(): Object3D | undefined {\n    return this.scene.canvases.get(this.scope)\n  }\n\n  /**\n   * Set the pointer position from the given mouse event into the `pointer` property\n   */\n  public setPointerFrom(event: MouseEvent) {\n    const point = this.scene.getPointerFrom(event, this.scope)\n\n    if (point) {\n      this.pointer = {\n        x: point.x,\n        y: point.y\n      }\n    }\n  }\n\n  private pointerdown = (event: PointerEvent) => {\n    this.setPointerFrom(event)\n    this.events.pointerDown(this.pointer, event)\n  }\n\n  private pointermove = (event: PointerEvent) => {\n    this.setPointerFrom(event)\n    this.events.pointerMove(this.pointer, event)\n  }\n\n  private pointerup = (event: PointerEvent) => {\n    this.setPointerFrom(event)\n    this.events.pointerUp(this.pointer, event)\n  }\n\n  /**\n   * Force resize the container of the 3D scene\n   * @param event The resize event\n   */\n  public resize = (event: Event) => {\n    this.events.resize(event)\n    this.scene.resize(this.container.clientWidth, this.container.clientHeight)\n  }\n\n  public destroy() {\n    this.container.removeEventListener('pointerdown', this.pointerdown)\n    this.container.removeEventListener('pointermove', this.pointermove)\n    window.removeEventListener('pointerup', this.pointerup)\n    window.removeEventListener('resize', this.resize)\n  }\n}\n","import { ObjectHTML } from './scene/ObjectHTML'\n\ntype Events = {\n  contextmenu: (event: MouseEvent) => void\n}\n\nexport class ConnectionView {\n  element: HTMLElement\n  object: ObjectHTML\n\n  constructor(events: Events) {\n    this.element = document.createElement('div')\n\n    this.element.style.position = 'absolute'\n    this.element.style.left = '0'\n    this.element.style.top = '0'\n    this.element.addEventListener('contextmenu', event => events.contextmenu(event))\n\n    this.object = new ObjectHTML(this.element)\n  }\n\n  // public update(params?: HTML3DOptions) {\n  //   setHTMLElement(this.object, this.element, {\n  //     materials: {\n  //       front: params?.materials?.front || createMaterial(false),\n  //       back: params?.materials?.back || createBackMaterial()\n  //     }\n  //   })\n  // }\n}\n","\nexport class ElementsHolder<E extends HTMLElement, Ctx extends { type: string, element: E, payload?: { id: string } }> {\n  views = new WeakMap<E, Ctx>()\n  viewsElements = new Map<`${string}_${string}`, E>()\n\n  public set(context: Ctx) {\n    const { element, type, payload } = context\n\n    if (payload?.id) {\n      this.views.set(element, context)\n      this.viewsElements.set(`${type}_${payload.id}`, element)\n    }\n  }\n\n  public get(type: string, id: string) {\n    const element = this.viewsElements.get(`${type}_${id}`)\n\n    return element && this.views.get(element)\n  }\n\n  public delete(element: E) {\n    const view = this.views.get(element)\n\n    if (view && view.payload?.id) {\n      this.views.delete(element)\n      this.viewsElements.delete(`${view.type}_${view.payload.id}`)\n    }\n  }\n}\n","import { DraggableObject3D } from './scene'\nimport { ObjectHTML } from './scene/ObjectHTML'\nimport { Position, Size } from './types'\n\nexport type NodeTranslateEventParams = { position: Position, previous: Position }\nexport type NodeResizeEventParams = { size: Size }\n\ntype Events = {\n  picked: () => void\n  translated: (params: NodeTranslateEventParams) => Promise<unknown | boolean>\n  dragged: () => void\n  contextmenu: (event: MouseEvent) => void\n  resized: (params: NodeResizeEventParams) => Promise<unknown | boolean>\n}\ntype Guards = {\n  resize: (params: NodeResizeEventParams) => Promise<unknown | boolean>\n  translate: (params: NodeTranslateEventParams) => Promise<unknown | boolean>\n}\n\nexport class NodeView {\n  element: HTMLElement\n  object: ObjectHTML\n  position: Position\n\n  constructor(private events: Events, private guards: Guards) {\n    this.element = document.createElement('div')\n    this.element.style.position = 'absolute'\n    this.position = { x: 0, y: 0 }\n    this.translate(0, 0)\n\n    this.element.addEventListener('contextmenu', event => this.events.contextmenu(event))\n\n    this.object = new DraggableObject3D(this.element, {\n      start: this.events.picked,\n      translate: this.translate,\n      drag: this.events.dragged\n    })\n  }\n\n  public translate = async (x: number, y: number) => {\n    type Params = undefined | { data: NodeTranslateEventParams }\n    const previous = { ...this.position }\n    const translation = await this.guards.translate({ previous, position: { x, y } }) as Params\n\n    if (!translation) return false\n\n    this.position = { ...translation.data.position }\n    this.object.position.set(this.position.x, this.position.y, this.object.position.z)\n\n    await this.events.translated({ position: this.position, previous })\n\n    return true\n  }\n\n  public resize = async (width: number, height: number) => {\n    const size = { width, height }\n\n    if (!(await this.guards.resize({ size }))) return false\n\n    const el = this.element.children.item(0)\n\n    if (!el || !(el instanceof HTMLElement)) return false\n\n    el.style.width = `${width}px`\n    el.style.height = `${height}px`\n\n    await this.events.resized({ size })\n\n    return true\n  }\n\n  public destroy() {\n    null\n  }\n}\n","import { Area3DPlugin } from '..'\nimport { ExpectSchemes } from '../types'\n\n/**\n * Animate the given 3D scene, uses `requestAnimationFrame`\n * @param area The 3D area plugin\n * @param tick Optional callback to be called on each frame\n * @example Area3DExtensions.animate(area)\n * @example Area3DExtensions.animate(area, time => console.log(time))\n */\nexport function animate<S extends ExpectSchemes, K>(area: Area3DPlugin<S, K>, tick?: (time: number) => void) {\n  function render(time: number) {\n    if (tick) tick(time)\n\n    area.area.scene.render()\n    requestAnimationFrame((t) => render(t))\n  }\n\n  render(performance.now())\n}\n","import { Shape } from 'three'\n\n// eslint-disable-next-line max-statements\nexport function getRoundedShape(width: number, height: number, radius: number) {\n  const shape = new Shape()\n  const x = 0\n  const y = 0\n\n  shape.moveTo(x + radius, y)\n  shape.lineTo(x + width - radius, y)\n  shape.quadraticCurveTo(x + width, y, x + width, y + radius)\n  shape.lineTo(x + width, y + height - radius)\n  shape.quadraticCurveTo(x + width, y + height, x + width - radius, y + height)\n  shape.lineTo(x + radius, y + height)\n  shape.quadraticCurveTo(x, y + height, x, y + height - radius)\n  shape.lineTo(x, y + radius)\n  shape.quadraticCurveTo(x, y, x + radius, y)\n  shape.closePath()\n\n  return shape\n}\n","import { ConnectionId, NodeId, Scope, ScopeAsParameter } from 'rete'\nimport { BufferGeometry, ShapeGeometry } from 'three'\n\nimport { Area3DPlugin } from '../..'\nimport { ExpectSchemes, Position } from '../../types'\nimport { getRoundedShape } from '../../utils/shapes'\n\nexport type Pin = {\n  id: string\n  position: Position\n  selected?: boolean\n}\nexport type PinData = {\n  id: ConnectionId\n  pins: Pin[]\n}\n\ntype Comment = {\n  element: HTMLElement\n  id: string\n  width: number\n  height: number\n  x: number\n  y: number\n}\n\ntype Requires =\n  | { type: 'commentcreated', data: Comment }\n  | { type: 'commentremoved', data: Comment }\n  | { type: 'editcomment', data: Comment }\n  | { type: 'commentselected', data: Comment }\n  | { type: 'commentunselected', data: Comment }\n  | { type: 'commenttranslated', data: { id: Comment['id'], dx: number, dy: number, sources?: NodeId[] } }\n  | { type: 'commentlinktranslate', data: { id: Comment['id'], link: string } }\n\n/**\n * Form generator for embedding rete-comment-plugin into 3D scene.\n * @param scope Area3DPlugin instance\n */\nexport function comment<S extends ExpectSchemes, K>(scope: ScopeAsParameter<Scope<K, any[]>, [Requires]>) {\n  const commentScope = scope as unknown as Scope<Requires> & {\n    comments: Map<string, Comment>\n  }\n  const area = commentScope.parentScope<Area3DPlugin<S, any>>(Area3DPlugin)\n\n  commentScope.addPipe(context => {\n    if (context.type === 'commentcreated') {\n      updateCommentGeometry(area, context.data)\n    }\n    if (context.type === 'commenttranslated') {\n      const { id } = context.data\n      const c = commentScope.comments.get(id)\n\n      if (c) {\n        updateCommentGeometry(area, c)\n      }\n    }\n    return context\n  })\n}\n\ntype CommentGeometry = BufferGeometry & {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  __commentGeometry?: {\n    width: number\n    height: number\n    x: number\n    y: number\n  }\n}\n\nfunction commentGeometry(width: number, height: number, x: number, y: number) {\n  const shape = getRoundedShape(width, height, 18)\n  const geometry = new ShapeGeometry(shape) as CommentGeometry\n\n  geometry.__commentGeometry = {\n    width,\n    height,\n    x,\n    y\n  }\n\n  geometry.translate(x, y, 0)\n\n  return geometry\n}\n\nfunction updateCommentGeometry(area: Area3DPlugin<ExpectSchemes, any>, c: Comment) {\n  area.area.content.updateGeometry(c.element, existing => {\n    const meta = (existing as CommentGeometry)?.__commentGeometry\n\n    if (meta) {\n      if (meta.width !== c.width || meta.height !== c.height) {\n        return commentGeometry(c.width, c.height, c.x, c.y)\n      }\n      if (meta.x !== c.x || meta.y !== c.y) {\n        return existing?.translate(c.x - meta.x, c.y - meta.y, 0)\n      }\n    }\n    return commentGeometry(c.width, c.height, c.x, c.y)\n  })\n}\n","\nmodule.exports = parse\n\n/**\n * expected argument lengths\n * @type {Object}\n */\n\nvar length = {a: 7, c: 6, h: 1, l: 2, m: 2, q: 4, s: 4, t: 2, v: 1, z: 0}\n\n/**\n * segment pattern\n * @type {RegExp}\n */\n\nvar segment = /([astvzqmhlc])([^astvzqmhlc]*)/ig\n\n/**\n * parse an svg path data string. Generates an Array\n * of commands where each command is an Array of the\n * form `[command, arg1, arg2, ...]`\n *\n * @param {String} path\n * @return {Array}\n */\n\nfunction parse(path) {\n\tvar data = []\n\tpath.replace(segment, function(_, command, args){\n\t\tvar type = command.toLowerCase()\n\t\targs = parseValues(args)\n\n\t\t// overloaded moveTo\n\t\tif (type == 'm' && args.length > 2) {\n\t\t\tdata.push([command].concat(args.splice(0, 2)))\n\t\t\ttype = 'l'\n\t\t\tcommand = command == 'm' ? 'l' : 'L'\n\t\t}\n\n\t\twhile (true) {\n\t\t\tif (args.length == length[type]) {\n\t\t\t\targs.unshift(command)\n\t\t\t\treturn data.push(args)\n\t\t\t}\n\t\t\tif (args.length < length[type]) throw new Error('malformed path data')\n\t\t\tdata.push([command].concat(args.splice(0, length[type])))\n\t\t}\n\t})\n\treturn data\n}\n\nvar number = /-?[0-9]*\\.?[0-9]+(?:e[-+]?\\d+)?/ig\n\nfunction parseValues(args) {\n\tvar numbers = args.match(number)\n\treturn numbers ? numbers.map(Number) : []\n}\n","function clone(point) { //TODO: use gl-vec2 for this\n    return [point[0], point[1]]\n}\n\nfunction vec2(x, y) {\n    return [x, y]\n}\n\nmodule.exports = function createBezierBuilder(opt) {\n    opt = opt||{}\n\n    var RECURSION_LIMIT = typeof opt.recursion === 'number' ? opt.recursion : 8\n    var FLT_EPSILON = typeof opt.epsilon === 'number' ? opt.epsilon : 1.19209290e-7\n    var PATH_DISTANCE_EPSILON = typeof opt.pathEpsilon === 'number' ? opt.pathEpsilon : 1.0\n\n    var curve_angle_tolerance_epsilon = typeof opt.angleEpsilon === 'number' ? opt.angleEpsilon : 0.01\n    var m_angle_tolerance = opt.angleTolerance || 0\n    var m_cusp_limit = opt.cuspLimit || 0\n\n    return function bezierCurve(start, c1, c2, end, scale, points) {\n        if (!points)\n            points = []\n\n        scale = typeof scale === 'number' ? scale : 1.0\n        var distanceTolerance = PATH_DISTANCE_EPSILON / scale\n        distanceTolerance *= distanceTolerance\n        begin(start, c1, c2, end, points, distanceTolerance)\n        return points\n    }\n\n\n    ////// Based on:\n    ////// https://github.com/pelson/antigrain/blob/master/agg-2.4/src/agg_curves.cpp\n\n    function begin(start, c1, c2, end, points, distanceTolerance) {\n        points.push(clone(start))\n        var x1 = start[0],\n            y1 = start[1],\n            x2 = c1[0],\n            y2 = c1[1],\n            x3 = c2[0],\n            y3 = c2[1],\n            x4 = end[0],\n            y4 = end[1]\n        recursive(x1, y1, x2, y2, x3, y3, x4, y4, points, distanceTolerance, 0)\n        points.push(clone(end))\n    }\n\n    function recursive(x1, y1, x2, y2, x3, y3, x4, y4, points, distanceTolerance, level) {\n        if(level > RECURSION_LIMIT) \n            return\n\n        var pi = Math.PI\n\n        // Calculate all the mid-points of the line segments\n        //----------------------\n        var x12   = (x1 + x2) / 2\n        var y12   = (y1 + y2) / 2\n        var x23   = (x2 + x3) / 2\n        var y23   = (y2 + y3) / 2\n        var x34   = (x3 + x4) / 2\n        var y34   = (y3 + y4) / 2\n        var x123  = (x12 + x23) / 2\n        var y123  = (y12 + y23) / 2\n        var x234  = (x23 + x34) / 2\n        var y234  = (y23 + y34) / 2\n        var x1234 = (x123 + x234) / 2\n        var y1234 = (y123 + y234) / 2\n\n        if(level > 0) { // Enforce subdivision first time\n            // Try to approximate the full cubic curve by a single straight line\n            //------------------\n            var dx = x4-x1\n            var dy = y4-y1\n\n            var d2 = Math.abs((x2 - x4) * dy - (y2 - y4) * dx)\n            var d3 = Math.abs((x3 - x4) * dy - (y3 - y4) * dx)\n\n            var da1, da2\n\n            if(d2 > FLT_EPSILON && d3 > FLT_EPSILON) {\n                // Regular care\n                //-----------------\n                if((d2 + d3)*(d2 + d3) <= distanceTolerance * (dx*dx + dy*dy)) {\n                    // If the curvature doesn't exceed the distanceTolerance value\n                    // we tend to finish subdivisions.\n                    //----------------------\n                    if(m_angle_tolerance < curve_angle_tolerance_epsilon) {\n                        points.push(vec2(x1234, y1234))\n                        return\n                    }\n\n                    // Angle & Cusp Condition\n                    //----------------------\n                    var a23 = Math.atan2(y3 - y2, x3 - x2)\n                    da1 = Math.abs(a23 - Math.atan2(y2 - y1, x2 - x1))\n                    da2 = Math.abs(Math.atan2(y4 - y3, x4 - x3) - a23)\n                    if(da1 >= pi) da1 = 2*pi - da1\n                    if(da2 >= pi) da2 = 2*pi - da2\n\n                    if(da1 + da2 < m_angle_tolerance) {\n                        // Finally we can stop the recursion\n                        //----------------------\n                        points.push(vec2(x1234, y1234))\n                        return\n                    }\n\n                    if(m_cusp_limit !== 0.0) {\n                        if(da1 > m_cusp_limit) {\n                            points.push(vec2(x2, y2))\n                            return\n                        }\n\n                        if(da2 > m_cusp_limit) {\n                            points.push(vec2(x3, y3))\n                            return\n                        }\n                    }\n                }\n            }\n            else {\n                if(d2 > FLT_EPSILON) {\n                    // p1,p3,p4 are collinear, p2 is considerable\n                    //----------------------\n                    if(d2 * d2 <= distanceTolerance * (dx*dx + dy*dy)) {\n                        if(m_angle_tolerance < curve_angle_tolerance_epsilon) {\n                            points.push(vec2(x1234, y1234))\n                            return\n                        }\n\n                        // Angle Condition\n                        //----------------------\n                        da1 = Math.abs(Math.atan2(y3 - y2, x3 - x2) - Math.atan2(y2 - y1, x2 - x1))\n                        if(da1 >= pi) da1 = 2*pi - da1\n\n                        if(da1 < m_angle_tolerance) {\n                            points.push(vec2(x2, y2))\n                            points.push(vec2(x3, y3))\n                            return\n                        }\n\n                        if(m_cusp_limit !== 0.0) {\n                            if(da1 > m_cusp_limit) {\n                                points.push(vec2(x2, y2))\n                                return\n                            }\n                        }\n                    }\n                }\n                else if(d3 > FLT_EPSILON) {\n                    // p1,p2,p4 are collinear, p3 is considerable\n                    //----------------------\n                    if(d3 * d3 <= distanceTolerance * (dx*dx + dy*dy)) {\n                        if(m_angle_tolerance < curve_angle_tolerance_epsilon) {\n                            points.push(vec2(x1234, y1234))\n                            return\n                        }\n\n                        // Angle Condition\n                        //----------------------\n                        da1 = Math.abs(Math.atan2(y4 - y3, x4 - x3) - Math.atan2(y3 - y2, x3 - x2))\n                        if(da1 >= pi) da1 = 2*pi - da1\n\n                        if(da1 < m_angle_tolerance) {\n                            points.push(vec2(x2, y2))\n                            points.push(vec2(x3, y3))\n                            return\n                        }\n\n                        if(m_cusp_limit !== 0.0) {\n                            if(da1 > m_cusp_limit)\n                            {\n                                points.push(vec2(x3, y3))\n                                return\n                            }\n                        }\n                    }\n                }\n                else {\n                    // Collinear case\n                    //-----------------\n                    dx = x1234 - (x1 + x4) / 2\n                    dy = y1234 - (y1 + y4) / 2\n                    if(dx*dx + dy*dy <= distanceTolerance) {\n                        points.push(vec2(x1234, y1234))\n                        return\n                    }\n                }\n            }\n        }\n\n        // Continue subdivision\n        //----------------------\n        recursive(x1, y1, x12, y12, x123, y123, x1234, y1234, points, distanceTolerance, level + 1) \n        recursive(x1234, y1234, x234, y234, x34, y34, x4, y4, points, distanceTolerance, level + 1) \n    }\n}\n","module.exports = require('./function')()","\nmodule.exports = absolutize\n\n/**\n * redefine `path` with absolute coordinates\n *\n * @param {Array} path\n * @return {Array}\n */\n\nfunction absolutize(path){\n\tvar startX = 0\n\tvar startY = 0\n\tvar x = 0\n\tvar y = 0\n\n\treturn path.map(function(seg){\n\t\tseg = seg.slice()\n\t\tvar type = seg[0]\n\t\tvar command = type.toUpperCase()\n\n\t\t// is relative\n\t\tif (type != command) {\n\t\t\tseg[0] = command\n\t\t\tswitch (type) {\n\t\t\t\tcase 'a':\n\t\t\t\t\tseg[6] += x\n\t\t\t\t\tseg[7] += y\n\t\t\t\t\tbreak\n\t\t\t\tcase 'v':\n\t\t\t\t\tseg[1] += y\n\t\t\t\t\tbreak\n\t\t\t\tcase 'h':\n\t\t\t\t\tseg[1] += x\n\t\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\tfor (var i = 1; i < seg.length;) {\n\t\t\t\t\t\tseg[i++] += x\n\t\t\t\t\t\tseg[i++] += y\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// update cursor state\n\t\tswitch (command) {\n\t\t\tcase 'Z':\n\t\t\t\tx = startX\n\t\t\t\ty = startY\n\t\t\t\tbreak\n\t\t\tcase 'H':\n\t\t\t\tx = seg[1]\n\t\t\t\tbreak\n\t\t\tcase 'V':\n\t\t\t\ty = seg[1]\n\t\t\t\tbreak\n\t\t\tcase 'M':\n\t\t\t\tx = startX = seg[1]\n\t\t\t\ty = startY = seg[2]\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tx = seg[seg.length - 2]\n\t\t\t\ty = seg[seg.length - 1]\n\t\t}\n\n\t\treturn seg\n\t})\n}\n","\nvar π = Math.PI\nvar _120 = radians(120)\n\nmodule.exports = normalize\n\n/**\n * describe `path` in terms of cubic bézier \n * curves and move commands\n *\n * @param {Array} path\n * @return {Array}\n */\n\nfunction normalize(path){\n\t// init state\n\tvar prev\n\tvar result = []\n\tvar bezierX = 0\n\tvar bezierY = 0\n\tvar startX = 0\n\tvar startY = 0\n\tvar quadX = null\n\tvar quadY = null\n\tvar x = 0\n\tvar y = 0\n\n\tfor (var i = 0, len = path.length; i < len; i++) {\n\t\tvar seg = path[i]\n\t\tvar command = seg[0]\n\t\tswitch (command) {\n\t\t\tcase 'M':\n\t\t\t\tstartX = seg[1]\n\t\t\t\tstartY = seg[2]\n\t\t\t\tbreak\n\t\t\tcase 'A':\n\t\t\t\tseg = arc(x, y,seg[1],seg[2],radians(seg[3]),seg[4],seg[5],seg[6],seg[7])\n\t\t\t\t// split multi part\n\t\t\t\tseg.unshift('C')\n\t\t\t\tif (seg.length > 7) {\n\t\t\t\t\tresult.push(seg.splice(0, 7))\n\t\t\t\t\tseg.unshift('C')\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\tcase 'S':\n\t\t\t\t// default control point\n\t\t\t\tvar cx = x\n\t\t\t\tvar cy = y\n\t\t\t\tif (prev == 'C' || prev == 'S') {\n\t\t\t\t\tcx += cx - bezierX // reflect the previous command's control\n\t\t\t\t\tcy += cy - bezierY // point relative to the current point\n\t\t\t\t}\n\t\t\t\tseg = ['C', cx, cy, seg[1], seg[2], seg[3], seg[4]]\n\t\t\t\tbreak\n\t\t\tcase 'T':\n\t\t\t\tif (prev == 'Q' || prev == 'T') {\n\t\t\t\t\tquadX = x * 2 - quadX // as with 'S' reflect previous control point\n\t\t\t\t\tquadY = y * 2 - quadY\n\t\t\t\t} else {\n\t\t\t\t\tquadX = x\n\t\t\t\t\tquadY = y\n\t\t\t\t}\n\t\t\t\tseg = quadratic(x, y, quadX, quadY, seg[1], seg[2])\n\t\t\t\tbreak\n\t\t\tcase 'Q':\n\t\t\t\tquadX = seg[1]\n\t\t\t\tquadY = seg[2]\n\t\t\t\tseg = quadratic(x, y, seg[1], seg[2], seg[3], seg[4])\n\t\t\t\tbreak\n\t\t\tcase 'L':\n\t\t\t\tseg = line(x, y, seg[1], seg[2])\n\t\t\t\tbreak\n\t\t\tcase 'H':\n\t\t\t\tseg = line(x, y, seg[1], y)\n\t\t\t\tbreak\n\t\t\tcase 'V':\n\t\t\t\tseg = line(x, y, x, seg[1])\n\t\t\t\tbreak\n\t\t\tcase 'Z':\n\t\t\t\tseg = line(x, y, startX, startY)\n\t\t\t\tbreak\n\t\t}\n\n\t\t// update state\n\t\tprev = command\n\t\tx = seg[seg.length - 2]\n\t\ty = seg[seg.length - 1]\n\t\tif (seg.length > 4) {\n\t\t\tbezierX = seg[seg.length - 4]\n\t\t\tbezierY = seg[seg.length - 3]\n\t\t} else {\n\t\t\tbezierX = x\n\t\t\tbezierY = y\n\t\t}\n\t\tresult.push(seg)\n\t}\n\n\treturn result\n}\n\nfunction line(x1, y1, x2, y2){\n\treturn ['C', x1, y1, x2, y2, x2, y2]\n}\n\nfunction quadratic(x1, y1, cx, cy, x2, y2){\n\treturn [\n\t\t'C',\n\t\tx1/3 + (2/3) * cx,\n\t\ty1/3 + (2/3) * cy,\n\t\tx2/3 + (2/3) * cx,\n\t\ty2/3 + (2/3) * cy,\n\t\tx2,\n\t\ty2\n\t]\n}\n\n// This function is ripped from \n// github.com/DmitryBaranovskiy/raphael/blob/4d97d4/raphael.js#L2216-L2304 \n// which references w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n// TODO: make it human readable\n\nfunction arc(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n\tif (!recursive) {\n\t\tvar xy = rotate(x1, y1, -angle)\n\t\tx1 = xy.x\n\t\ty1 = xy.y\n\t\txy = rotate(x2, y2, -angle)\n\t\tx2 = xy.x\n\t\ty2 = xy.y\n\t\tvar x = (x1 - x2) / 2\n\t\tvar y = (y1 - y2) / 2\n\t\tvar h = (x * x) / (rx * rx) + (y * y) / (ry * ry)\n\t\tif (h > 1) {\n\t\t\th = Math.sqrt(h)\n\t\t\trx = h * rx\n\t\t\try = h * ry\n\t\t}\n\t\tvar rx2 = rx * rx\n\t\tvar ry2 = ry * ry\n\t\tvar k = (large_arc_flag == sweep_flag ? -1 : 1)\n\t\t\t* Math.sqrt(Math.abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x)))\n\t\tif (k == Infinity) k = 1 // neutralize\n\t\tvar cx = k * rx * y / ry + (x1 + x2) / 2\n\t\tvar cy = k * -ry * x / rx + (y1 + y2) / 2\n\t\tvar f1 = Math.asin(((y1 - cy) / ry).toFixed(9))\n\t\tvar f2 = Math.asin(((y2 - cy) / ry).toFixed(9))\n\n\t\tf1 = x1 < cx ? π - f1 : f1\n\t\tf2 = x2 < cx ? π - f2 : f2\n\t\tif (f1 < 0) f1 = π * 2 + f1\n\t\tif (f2 < 0) f2 = π * 2 + f2\n\t\tif (sweep_flag && f1 > f2) f1 = f1 - π * 2\n\t\tif (!sweep_flag && f2 > f1) f2 = f2 - π * 2\n\t} else {\n\t\tf1 = recursive[0]\n\t\tf2 = recursive[1]\n\t\tcx = recursive[2]\n\t\tcy = recursive[3]\n\t}\n\t// greater than 120 degrees requires multiple segments\n\tif (Math.abs(f2 - f1) > _120) {\n\t\tvar f2old = f2\n\t\tvar x2old = x2\n\t\tvar y2old = y2\n\t\tf2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1)\n\t\tx2 = cx + rx * Math.cos(f2)\n\t\ty2 = cy + ry * Math.sin(f2)\n\t\tvar res = arc(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy])\n\t}\n\tvar t = Math.tan((f2 - f1) / 4)\n\tvar hx = 4 / 3 * rx * t\n\tvar hy = 4 / 3 * ry * t\n\tvar curve = [\n\t\t2 * x1 - (x1 + hx * Math.sin(f1)),\n\t\t2 * y1 - (y1 - hy * Math.cos(f1)),\n\t\tx2 + hx * Math.sin(f2),\n\t\ty2 - hy * Math.cos(f2),\n\t\tx2,\n\t\ty2\n\t]\n\tif (recursive) return curve\n\tif (res) curve = curve.concat(res)\n\tfor (var i = 0; i < curve.length;) {\n\t\tvar rot = rotate(curve[i], curve[i+1], angle)\n\t\tcurve[i++] = rot.x\n\t\tcurve[i++] = rot.y\n\t}\n\treturn curve\n}\n\nfunction rotate(x, y, rad){\n\treturn {\n\t\tx: x * Math.cos(rad) - y * Math.sin(rad),\n\t\ty: x * Math.sin(rad) + y * Math.cos(rad)\n\t}\n}\n\nfunction radians(degress){\n\treturn degress * (π / 180)\n}\n","module.exports = function vec2Copy(out, a) {\n    out[0] = a[0]\n    out[1] = a[1]\n    return out\n}","var bezier = require('adaptive-bezier-curve')\nvar abs = require('abs-svg-path')\nvar norm = require('normalize-svg-path')\nvar copy = require('vec2-copy')\n\nfunction set(out, x, y) {\n    out[0] = x\n    out[1] = y\n    return out\n}\n\nvar tmp1 = [0,0],\n    tmp2 = [0,0],\n    tmp3 = [0,0]\n\nfunction bezierTo(points, scale, start, seg) {\n    bezier(start, \n        set(tmp1, seg[1], seg[2]), \n        set(tmp2, seg[3], seg[4]),\n        set(tmp3, seg[5], seg[6]), scale, points)\n}\n\nmodule.exports = function contours(svg, scale) {\n    var paths = []\n\n    var points = []\n    var pen = [0, 0]\n    norm(abs(svg)).forEach(function(segment, i, self) {\n        if (segment[0] === 'M') {\n            copy(pen, segment.slice(1))\n            if (points.length>0) {\n                paths.push(points)\n                points = []\n            }\n        } else if (segment[0] === 'C') {\n            bezierTo(points, scale, pen, segment)\n            set(pen, segment[5], segment[6])\n        } else {\n            throw new Error('illegal type in SVG: '+segment[0])\n        }\n    })\n    if (points.length>0)\n        paths.push(points)\n    return paths\n}","/* eslint-disable @typescript-eslint/ban-ts-comment */\n// @ts-ignore\nimport parse from 'parse-svg-path'\n// @ts-ignore\nimport contours from 'svg-path-contours'\nimport { BufferGeometry, PlaneGeometry, Vector2 } from 'three'\n\n/**\n * Create geometry for classic connection.\n * Can be used in `customize` option.\n * @param path SVG path\n * @param width Connection width\n * @returns Connection geometry\n */\n// eslint-disable-next-line max-statements\nexport function createClassicConnectionGeometry(path: string, width: number): BufferGeometry {\n  const segments = contours(parse(path)) as [number, number][][]\n  const points = segments.map(segment => segment.map(([x, y]) => ({ x, y }))).flat()\n  const geometry: BufferGeometry = new PlaneGeometry(100, 10, points.length - 1, 1)\n\n  for (let i = 0; i < points.length; i++) {\n    const normal = new Vector2(0, width / 2)\n    const point = new Vector2(points[i].x, points[i].y)\n\n    if (i > 0 && i < points.length - 1) {\n      const prevPoint = new Vector2(points[i - 1].x, points[i - 1].y)\n      const nextPoint = new Vector2(points[i + 1].x, points[i + 1].y)\n      const vectorBetweenPoints = nextPoint.clone().sub(prevPoint)\n      const normalBetweenPoints = new Vector2(-vectorBetweenPoints.y, vectorBetweenPoints.x).clone().normalize()\n\n      normal.set(normalBetweenPoints.x, normalBetweenPoints.y).multiplyScalar(width / 2)\n    }\n\n    geometry.attributes.position.setX(i, point.x + normal.x)\n    geometry.attributes.position.setY(i, point.y + normal.y)\n\n    geometry.attributes.position.setX(i + points.length, point.x - normal.x)\n    geometry.attributes.position.setY(i + points.length, point.y - normal.y)\n  }\n\n  return geometry\n}\n","import { BaseSchemes, Scope, ScopeAsParameter } from 'rete'\nimport { classicConnectionPath } from 'rete-render-utils'\nimport { BufferGeometry } from 'three'\n\nimport { Area3DPlugin } from '../../..'\nimport { ExpectSchemes } from '../../../types'\nimport { createClassicConnectionGeometry } from './geometry'\n\nexport { createClassicConnectionGeometry }\n\ntype Position = { x: number, y: number }\ntype Requires<Schemes extends BaseSchemes> =\n  | { type: 'connectionpath', data: { payload: Schemes['Connection'], path?: string, points: Position[] } }\n\n/**\n * Options for node form generator\n */\nexport type Props = {\n  /** Customize connection geometry */\n  customize?: (path: string) => BufferGeometry\n}\n\n/**\n * Form generator for embedding connections into 3D scene.\n * @param scope Area3DPlugin instance\n * @param props Options for connection form generator\n */\nexport function connection<S extends ExpectSchemes, K, E>(scope: ScopeAsParameter<Scope<K, E[]>, [Requires<S>]>, props?: Props) {\n  const renderScope = scope as Scope<Requires<S>, E[]>\n  const area = renderScope.parentScope<Area3DPlugin<S, Requires<S>>>(Area3DPlugin)\n  // const editor = area.parentScope<NodeEditor<S>>(NodeEditor)\n\n  renderScope.addPipe(context => {\n    if (!context || typeof context !== 'object' || !('type' in context)) return context\n\n    if (context.type === 'connectionpath') {\n      const { id } = context.data.payload\n      const view = area.connectionViews.get(id)\n\n      if (view) {\n        const path = context.data.path || classicConnectionPath(context.data.points as [Position, Position], 0.3)\n        const geometry = props?.customize ? props.customize(path) : createClassicConnectionGeometry(path, 4.6)\n\n        if (geometry) {\n          area.area.content.updateGeometry(view.element, geometry)\n        }\n      }\n    }\n    return context\n  })\n}\n","import {\n\tBufferAttribute,\n\tBufferGeometry,\n\tFloat32BufferAttribute,\n\tInstancedBufferAttribute,\n\tInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tTriangleFanDrawMode,\n\tTriangleStripDrawMode,\n\tTrianglesDrawMode,\n\tVector3,\n} from 'three';\n\nfunction computeMikkTSpaceTangents( geometry, MikkTSpace, negateSign = true ) {\n\n\tif ( ! MikkTSpace || ! MikkTSpace.isReady ) {\n\n\t\tthrow new Error( 'BufferGeometryUtils: Initialized MikkTSpace library required.' );\n\n\t}\n\n\tif ( ! geometry.hasAttribute( 'position' ) || ! geometry.hasAttribute( 'normal' ) || ! geometry.hasAttribute( 'uv' ) ) {\n\n\t\tthrow new Error( 'BufferGeometryUtils: Tangents require \"position\", \"normal\", and \"uv\" attributes.' );\n\n\t}\n\n\tfunction getAttributeArray( attribute ) {\n\n\t\tif ( attribute.normalized || attribute.isInterleavedBufferAttribute ) {\n\n\t\t\tconst dstArray = new Float32Array( attribute.count * attribute.itemSize );\n\n\t\t\tfor ( let i = 0, j = 0; i < attribute.count; i ++ ) {\n\n\t\t\t\tdstArray[ j ++ ] = attribute.getX( i );\n\t\t\t\tdstArray[ j ++ ] = attribute.getY( i );\n\n\t\t\t\tif ( attribute.itemSize > 2 ) {\n\n\t\t\t\t\tdstArray[ j ++ ] = attribute.getZ( i );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn dstArray;\n\n\t\t}\n\n\t\tif ( attribute.array instanceof Float32Array ) {\n\n\t\t\treturn attribute.array;\n\n\t\t}\n\n\t\treturn new Float32Array( attribute.array );\n\n\t}\n\n\t// MikkTSpace algorithm requires non-indexed input.\n\n\tconst _geometry = geometry.index ? geometry.toNonIndexed() : geometry;\n\n\t// Compute vertex tangents.\n\n\tconst tangents = MikkTSpace.generateTangents(\n\n\t\tgetAttributeArray( _geometry.attributes.position ),\n\t\tgetAttributeArray( _geometry.attributes.normal ),\n\t\tgetAttributeArray( _geometry.attributes.uv )\n\n\t);\n\n\t// Texture coordinate convention of glTF differs from the apparent\n\t// default of the MikkTSpace library; .w component must be flipped.\n\n\tif ( negateSign ) {\n\n\t\tfor ( let i = 3; i < tangents.length; i += 4 ) {\n\n\t\t\ttangents[ i ] *= - 1;\n\n\t\t}\n\n\t}\n\n\t//\n\n\t_geometry.setAttribute( 'tangent', new BufferAttribute( tangents, 4 ) );\n\n\tif ( geometry !== _geometry ) {\n\n\t\tgeometry.copy( _geometry );\n\n\t}\n\n\treturn geometry;\n\n}\n\n/**\n * @param  {Array<BufferGeometry>} geometries\n * @param  {Boolean} useGroups\n * @return {BufferGeometry}\n */\nfunction mergeGeometries( geometries, useGroups = false ) {\n\n\tconst isIndexed = geometries[ 0 ].index !== null;\n\n\tconst attributesUsed = new Set( Object.keys( geometries[ 0 ].attributes ) );\n\tconst morphAttributesUsed = new Set( Object.keys( geometries[ 0 ].morphAttributes ) );\n\n\tconst attributes = {};\n\tconst morphAttributes = {};\n\n\tconst morphTargetsRelative = geometries[ 0 ].morphTargetsRelative;\n\n\tconst mergedGeometry = new BufferGeometry();\n\n\tlet offset = 0;\n\n\tfor ( let i = 0; i < geometries.length; ++ i ) {\n\n\t\tconst geometry = geometries[ i ];\n\t\tlet attributesCount = 0;\n\n\t\t// ensure that all geometries are indexed, or none\n\n\t\tif ( isIndexed !== ( geometry.index !== null ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '. All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// gather attributes, exit early if they're different\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tif ( ! attributesUsed.has( name ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '. All geometries must have compatible attributes; make sure \"' + name + '\" attribute exists among all geometries, or in none of them.' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tif ( attributes[ name ] === undefined ) attributes[ name ] = [];\n\n\t\t\tattributes[ name ].push( geometry.attributes[ name ] );\n\n\t\t\tattributesCount ++;\n\n\t\t}\n\n\t\t// ensure geometries have the same number of attributes\n\n\t\tif ( attributesCount !== attributesUsed.size ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '. Make sure all geometries have the same number of attributes.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// gather morph attributes, exit early if they're different\n\n\t\tif ( morphTargetsRelative !== geometry.morphTargetsRelative ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '. .morphTargetsRelative must be consistent throughout all geometries.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tfor ( const name in geometry.morphAttributes ) {\n\n\t\t\tif ( ! morphAttributesUsed.has( name ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '.  .morphAttributes must be consistent throughout all geometries.' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tif ( morphAttributes[ name ] === undefined ) morphAttributes[ name ] = [];\n\n\t\t\tmorphAttributes[ name ].push( geometry.morphAttributes[ name ] );\n\n\t\t}\n\n\t\tif ( useGroups ) {\n\n\t\t\tlet count;\n\n\t\t\tif ( isIndexed ) {\n\n\t\t\t\tcount = geometry.index.count;\n\n\t\t\t} else if ( geometry.attributes.position !== undefined ) {\n\n\t\t\t\tcount = geometry.attributes.position.count;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '. The geometry must have either an index or a position attribute' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tmergedGeometry.addGroup( offset, count, i );\n\n\t\t\toffset += count;\n\n\t\t}\n\n\t}\n\n\t// merge indices\n\n\tif ( isIndexed ) {\n\n\t\tlet indexOffset = 0;\n\t\tconst mergedIndex = [];\n\n\t\tfor ( let i = 0; i < geometries.length; ++ i ) {\n\n\t\t\tconst index = geometries[ i ].index;\n\n\t\t\tfor ( let j = 0; j < index.count; ++ j ) {\n\n\t\t\t\tmergedIndex.push( index.getX( j ) + indexOffset );\n\n\t\t\t}\n\n\t\t\tindexOffset += geometries[ i ].attributes.position.count;\n\n\t\t}\n\n\t\tmergedGeometry.setIndex( mergedIndex );\n\n\t}\n\n\t// merge attributes\n\n\tfor ( const name in attributes ) {\n\n\t\tconst mergedAttribute = mergeAttributes( attributes[ name ] );\n\n\t\tif ( ! mergedAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the ' + name + ' attribute.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tmergedGeometry.setAttribute( name, mergedAttribute );\n\n\t}\n\n\t// merge morph attributes\n\n\tfor ( const name in morphAttributes ) {\n\n\t\tconst numMorphTargets = morphAttributes[ name ][ 0 ].length;\n\n\t\tif ( numMorphTargets === 0 ) break;\n\n\t\tmergedGeometry.morphAttributes = mergedGeometry.morphAttributes || {};\n\t\tmergedGeometry.morphAttributes[ name ] = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; ++ i ) {\n\n\t\t\tconst morphAttributesToMerge = [];\n\n\t\t\tfor ( let j = 0; j < morphAttributes[ name ].length; ++ j ) {\n\n\t\t\t\tmorphAttributesToMerge.push( morphAttributes[ name ][ j ][ i ] );\n\n\t\t\t}\n\n\t\t\tconst mergedMorphAttribute = mergeAttributes( morphAttributesToMerge );\n\n\t\t\tif ( ! mergedMorphAttribute ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the ' + name + ' morphAttribute.' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tmergedGeometry.morphAttributes[ name ].push( mergedMorphAttribute );\n\n\t\t}\n\n\t}\n\n\treturn mergedGeometry;\n\n}\n\n/**\n * @param {Array<BufferAttribute>} attributes\n * @return {BufferAttribute}\n */\nfunction mergeAttributes( attributes ) {\n\n\tlet TypedArray;\n\tlet itemSize;\n\tlet normalized;\n\tlet gpuType = - 1;\n\tlet arrayLength = 0;\n\n\tfor ( let i = 0; i < attributes.length; ++ i ) {\n\n\t\tconst attribute = attributes[ i ];\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeAttributes() failed. InterleavedBufferAttributes are not supported.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tif ( TypedArray === undefined ) TypedArray = attribute.array.constructor;\n\t\tif ( TypedArray !== attribute.array.constructor ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.array must be of consistent array types across matching attributes.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tif ( itemSize === undefined ) itemSize = attribute.itemSize;\n\t\tif ( itemSize !== attribute.itemSize ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.itemSize must be consistent across matching attributes.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tif ( normalized === undefined ) normalized = attribute.normalized;\n\t\tif ( normalized !== attribute.normalized ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.normalized must be consistent across matching attributes.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tif ( gpuType === - 1 ) gpuType = attribute.gpuType;\n\t\tif ( gpuType !== attribute.gpuType ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.gpuType must be consistent across matching attributes.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tarrayLength += attribute.array.length;\n\n\t}\n\n\tconst array = new TypedArray( arrayLength );\n\tlet offset = 0;\n\n\tfor ( let i = 0; i < attributes.length; ++ i ) {\n\n\t\tarray.set( attributes[ i ].array, offset );\n\n\t\toffset += attributes[ i ].array.length;\n\n\t}\n\n\tconst result = new BufferAttribute( array, itemSize, normalized );\n\tif ( gpuType !== undefined ) {\n\n\t\tresult.gpuType = gpuType;\n\n\t}\n\n\treturn result;\n\n}\n\n/**\n * @param {BufferAttribute}\n * @return {BufferAttribute}\n */\nexport function deepCloneAttribute( attribute ) {\n\n\tif ( attribute.isInstancedInterleavedBufferAttribute || attribute.isInterleavedBufferAttribute ) {\n\n\t\treturn deinterleaveAttribute( attribute );\n\n\t}\n\n\tif ( attribute.isInstancedBufferAttribute ) {\n\n\t\treturn new InstancedBufferAttribute().copy( attribute );\n\n\t}\n\n\treturn new BufferAttribute().copy( attribute );\n\n}\n\n/**\n * @param {Array<BufferAttribute>} attributes\n * @return {Array<InterleavedBufferAttribute>}\n */\nfunction interleaveAttributes( attributes ) {\n\n\t// Interleaves the provided attributes into an InterleavedBuffer and returns\n\t// a set of InterleavedBufferAttributes for each attribute\n\tlet TypedArray;\n\tlet arrayLength = 0;\n\tlet stride = 0;\n\n\t// calculate the length and type of the interleavedBuffer\n\tfor ( let i = 0, l = attributes.length; i < l; ++ i ) {\n\n\t\tconst attribute = attributes[ i ];\n\n\t\tif ( TypedArray === undefined ) TypedArray = attribute.array.constructor;\n\t\tif ( TypedArray !== attribute.array.constructor ) {\n\n\t\t\tconsole.error( 'AttributeBuffers of different types cannot be interleaved' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tarrayLength += attribute.array.length;\n\t\tstride += attribute.itemSize;\n\n\t}\n\n\t// Create the set of buffer attributes\n\tconst interleavedBuffer = new InterleavedBuffer( new TypedArray( arrayLength ), stride );\n\tlet offset = 0;\n\tconst res = [];\n\tconst getters = [ 'getX', 'getY', 'getZ', 'getW' ];\n\tconst setters = [ 'setX', 'setY', 'setZ', 'setW' ];\n\n\tfor ( let j = 0, l = attributes.length; j < l; j ++ ) {\n\n\t\tconst attribute = attributes[ j ];\n\t\tconst itemSize = attribute.itemSize;\n\t\tconst count = attribute.count;\n\t\tconst iba = new InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, attribute.normalized );\n\t\tres.push( iba );\n\n\t\toffset += itemSize;\n\n\t\t// Move the data for each attribute into the new interleavedBuffer\n\t\t// at the appropriate offset\n\t\tfor ( let c = 0; c < count; c ++ ) {\n\n\t\t\tfor ( let k = 0; k < itemSize; k ++ ) {\n\n\t\t\t\tiba[ setters[ k ] ]( c, attribute[ getters[ k ] ]( c ) );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn res;\n\n}\n\n// returns a new, non-interleaved version of the provided attribute\nexport function deinterleaveAttribute( attribute ) {\n\n\tconst cons = attribute.data.array.constructor;\n\tconst count = attribute.count;\n\tconst itemSize = attribute.itemSize;\n\tconst normalized = attribute.normalized;\n\n\tconst array = new cons( count * itemSize );\n\tlet newAttribute;\n\tif ( attribute.isInstancedInterleavedBufferAttribute ) {\n\n\t\tnewAttribute = new InstancedBufferAttribute( array, itemSize, normalized, attribute.meshPerAttribute );\n\n\t} else {\n\n\t\tnewAttribute = new BufferAttribute( array, itemSize, normalized );\n\n\t}\n\n\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\tnewAttribute.setX( i, attribute.getX( i ) );\n\n\t\tif ( itemSize >= 2 ) {\n\n\t\t\tnewAttribute.setY( i, attribute.getY( i ) );\n\n\t\t}\n\n\t\tif ( itemSize >= 3 ) {\n\n\t\t\tnewAttribute.setZ( i, attribute.getZ( i ) );\n\n\t\t}\n\n\t\tif ( itemSize >= 4 ) {\n\n\t\t\tnewAttribute.setW( i, attribute.getW( i ) );\n\n\t\t}\n\n\t}\n\n\treturn newAttribute;\n\n}\n\n// deinterleaves all attributes on the geometry\nexport function deinterleaveGeometry( geometry ) {\n\n\tconst attributes = geometry.attributes;\n\tconst morphTargets = geometry.morphTargets;\n\tconst attrMap = new Map();\n\n\tfor ( const key in attributes ) {\n\n\t\tconst attr = attributes[ key ];\n\t\tif ( attr.isInterleavedBufferAttribute ) {\n\n\t\t\tif ( ! attrMap.has( attr ) ) {\n\n\t\t\t\tattrMap.set( attr, deinterleaveAttribute( attr ) );\n\n\t\t\t}\n\n\t\t\tattributes[ key ] = attrMap.get( attr );\n\n\t\t}\n\n\t}\n\n\tfor ( const key in morphTargets ) {\n\n\t\tconst attr = morphTargets[ key ];\n\t\tif ( attr.isInterleavedBufferAttribute ) {\n\n\t\t\tif ( ! attrMap.has( attr ) ) {\n\n\t\t\t\tattrMap.set( attr, deinterleaveAttribute( attr ) );\n\n\t\t\t}\n\n\t\t\tmorphTargets[ key ] = attrMap.get( attr );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * @param {Array<BufferGeometry>} geometry\n * @return {number}\n */\nfunction estimateBytesUsed( geometry ) {\n\n\t// Return the estimated memory used by this geometry in bytes\n\t// Calculate using itemSize, count, and BYTES_PER_ELEMENT to account\n\t// for InterleavedBufferAttributes.\n\tlet mem = 0;\n\tfor ( const name in geometry.attributes ) {\n\n\t\tconst attr = geometry.getAttribute( name );\n\t\tmem += attr.count * attr.itemSize * attr.array.BYTES_PER_ELEMENT;\n\n\t}\n\n\tconst indices = geometry.getIndex();\n\tmem += indices ? indices.count * indices.itemSize * indices.array.BYTES_PER_ELEMENT : 0;\n\treturn mem;\n\n}\n\n/**\n * @param {BufferGeometry} geometry\n * @param {number} tolerance\n * @return {BufferGeometry}\n */\nfunction mergeVertices( geometry, tolerance = 1e-4 ) {\n\n\ttolerance = Math.max( tolerance, Number.EPSILON );\n\n\t// Generate an index buffer if the geometry doesn't have one, or optimize it\n\t// if it's already available.\n\tconst hashToIndex = {};\n\tconst indices = geometry.getIndex();\n\tconst positions = geometry.getAttribute( 'position' );\n\tconst vertexCount = indices ? indices.count : positions.count;\n\n\t// next value for triangle indices\n\tlet nextIndex = 0;\n\n\t// attributes and new attribute arrays\n\tconst attributeNames = Object.keys( geometry.attributes );\n\tconst tmpAttributes = {};\n\tconst tmpMorphAttributes = {};\n\tconst newIndices = [];\n\tconst getters = [ 'getX', 'getY', 'getZ', 'getW' ];\n\tconst setters = [ 'setX', 'setY', 'setZ', 'setW' ];\n\n\t// Initialize the arrays, allocating space conservatively. Extra\n\t// space will be trimmed in the last step.\n\tfor ( let i = 0, l = attributeNames.length; i < l; i ++ ) {\n\n\t\tconst name = attributeNames[ i ];\n\t\tconst attr = geometry.attributes[ name ];\n\n\t\ttmpAttributes[ name ] = new BufferAttribute(\n\t\t\tnew attr.array.constructor( attr.count * attr.itemSize ),\n\t\t\tattr.itemSize,\n\t\t\tattr.normalized\n\t\t);\n\n\t\tconst morphAttr = geometry.morphAttributes[ name ];\n\t\tif ( morphAttr ) {\n\n\t\t\ttmpMorphAttributes[ name ] = new BufferAttribute(\n\t\t\t\tnew morphAttr.array.constructor( morphAttr.count * morphAttr.itemSize ),\n\t\t\t\tmorphAttr.itemSize,\n\t\t\t\tmorphAttr.normalized\n\t\t\t);\n\n\t\t}\n\n\t}\n\n\t// convert the error tolerance to an amount of decimal places to truncate to\n\tconst decimalShift = Math.log10( 1 / tolerance );\n\tconst shiftMultiplier = Math.pow( 10, decimalShift );\n\tfor ( let i = 0; i < vertexCount; i ++ ) {\n\n\t\tconst index = indices ? indices.getX( i ) : i;\n\n\t\t// Generate a hash for the vertex attributes at the current index 'i'\n\t\tlet hash = '';\n\t\tfor ( let j = 0, l = attributeNames.length; j < l; j ++ ) {\n\n\t\t\tconst name = attributeNames[ j ];\n\t\t\tconst attribute = geometry.getAttribute( name );\n\t\t\tconst itemSize = attribute.itemSize;\n\n\t\t\tfor ( let k = 0; k < itemSize; k ++ ) {\n\n\t\t\t\t// double tilde truncates the decimal value\n\t\t\t\thash += `${ ~ ~ ( attribute[ getters[ k ] ]( index ) * shiftMultiplier ) },`;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Add another reference to the vertex if it's already\n\t\t// used by another index\n\t\tif ( hash in hashToIndex ) {\n\n\t\t\tnewIndices.push( hashToIndex[ hash ] );\n\n\t\t} else {\n\n\t\t\t// copy data to the new index in the temporary attributes\n\t\t\tfor ( let j = 0, l = attributeNames.length; j < l; j ++ ) {\n\n\t\t\t\tconst name = attributeNames[ j ];\n\t\t\t\tconst attribute = geometry.getAttribute( name );\n\t\t\t\tconst morphAttr = geometry.morphAttributes[ name ];\n\t\t\t\tconst itemSize = attribute.itemSize;\n\t\t\t\tconst newarray = tmpAttributes[ name ];\n\t\t\t\tconst newMorphArrays = tmpMorphAttributes[ name ];\n\n\t\t\t\tfor ( let k = 0; k < itemSize; k ++ ) {\n\n\t\t\t\t\tconst getterFunc = getters[ k ];\n\t\t\t\t\tconst setterFunc = setters[ k ];\n\t\t\t\t\tnewarray[ setterFunc ]( nextIndex, attribute[ getterFunc ]( index ) );\n\n\t\t\t\t\tif ( morphAttr ) {\n\n\t\t\t\t\t\tfor ( let m = 0, ml = morphAttr.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\t\tnewMorphArrays[ m ][ setterFunc ]( nextIndex, morphAttr[ m ][ getterFunc ]( index ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\thashToIndex[ hash ] = nextIndex;\n\t\t\tnewIndices.push( nextIndex );\n\t\t\tnextIndex ++;\n\n\t\t}\n\n\t}\n\n\t// generate result BufferGeometry\n\tconst result = geometry.clone();\n\tfor ( const name in geometry.attributes ) {\n\n\t\tconst tmpAttribute = tmpAttributes[ name ];\n\n\t\tresult.setAttribute( name, new BufferAttribute(\n\t\t\ttmpAttribute.array.slice( 0, nextIndex * tmpAttribute.itemSize ),\n\t\t\ttmpAttribute.itemSize,\n\t\t\ttmpAttribute.normalized,\n\t\t) );\n\n\t\tif ( ! ( name in tmpMorphAttributes ) ) continue;\n\n\t\tfor ( let j = 0; j < tmpMorphAttributes[ name ].length; j ++ ) {\n\n\t\t\tconst tmpMorphAttribute = tmpMorphAttributes[ name ][ j ];\n\n\t\t\tresult.morphAttributes[ name ][ j ] = new BufferAttribute(\n\t\t\t\ttmpMorphAttribute.array.slice( 0, nextIndex * tmpMorphAttribute.itemSize ),\n\t\t\t\ttmpMorphAttribute.itemSize,\n\t\t\t\ttmpMorphAttribute.normalized,\n\t\t\t);\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tresult.setIndex( newIndices );\n\n\treturn result;\n\n}\n\n/**\n * @param {BufferGeometry} geometry\n * @param {number} drawMode\n * @return {BufferGeometry}\n */\nfunction toTrianglesDrawMode( geometry, drawMode ) {\n\n\tif ( drawMode === TrianglesDrawMode ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometryUtils.toTrianglesDrawMode(): Geometry already defined as triangles.' );\n\t\treturn geometry;\n\n\t}\n\n\tif ( drawMode === TriangleFanDrawMode || drawMode === TriangleStripDrawMode ) {\n\n\t\tlet index = geometry.getIndex();\n\n\t\t// generate index if not present\n\n\t\tif ( index === null ) {\n\n\t\t\tconst indices = [];\n\n\t\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tfor ( let i = 0; i < position.count; i ++ ) {\n\n\t\t\t\t\tindices.push( i );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setIndex( indices );\n\t\t\t\tindex = geometry.getIndex();\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils.toTrianglesDrawMode(): Undefined position attribute. Processing not possible.' );\n\t\t\t\treturn geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst numberOfTriangles = index.count - 2;\n\t\tconst newIndices = [];\n\n\t\tif ( drawMode === TriangleFanDrawMode ) {\n\n\t\t\t// gl.TRIANGLE_FAN\n\n\t\t\tfor ( let i = 1; i <= numberOfTriangles; i ++ ) {\n\n\t\t\t\tnewIndices.push( index.getX( 0 ) );\n\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// gl.TRIANGLE_STRIP\n\n\t\t\tfor ( let i = 0; i < numberOfTriangles; i ++ ) {\n\n\t\t\t\tif ( i % 2 === 0 ) {\n\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( ( newIndices.length / 3 ) !== numberOfTriangles ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unable to generate correct amount of triangles.' );\n\n\t\t}\n\n\t\t// build final geometry\n\n\t\tconst newGeometry = geometry.clone();\n\t\tnewGeometry.setIndex( newIndices );\n\t\tnewGeometry.clearGroups();\n\n\t\treturn newGeometry;\n\n\t} else {\n\n\t\tconsole.error( 'THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unknown draw mode:', drawMode );\n\t\treturn geometry;\n\n\t}\n\n}\n\n/**\n * Calculates the morphed attributes of a morphed/skinned BufferGeometry.\n * Helpful for Raytracing or Decals.\n * @param {Mesh | Line | Points} object An instance of Mesh, Line or Points.\n * @return {Object} An Object with original position/normal attributes and morphed ones.\n */\nfunction computeMorphedAttributes( object ) {\n\n\tconst _vA = new Vector3();\n\tconst _vB = new Vector3();\n\tconst _vC = new Vector3();\n\n\tconst _tempA = new Vector3();\n\tconst _tempB = new Vector3();\n\tconst _tempC = new Vector3();\n\n\tconst _morphA = new Vector3();\n\tconst _morphB = new Vector3();\n\tconst _morphC = new Vector3();\n\n\tfunction _calculateMorphedAttributeData(\n\t\tobject,\n\t\tattribute,\n\t\tmorphAttribute,\n\t\tmorphTargetsRelative,\n\t\ta,\n\t\tb,\n\t\tc,\n\t\tmodifiedAttributeArray\n\t) {\n\n\t\t_vA.fromBufferAttribute( attribute, a );\n\t\t_vB.fromBufferAttribute( attribute, b );\n\t\t_vC.fromBufferAttribute( attribute, c );\n\n\t\tconst morphInfluences = object.morphTargetInfluences;\n\n\t\tif ( morphAttribute && morphInfluences ) {\n\n\t\t\t_morphA.set( 0, 0, 0 );\n\t\t\t_morphB.set( 0, 0, 0 );\n\t\t\t_morphC.set( 0, 0, 0 );\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst influence = morphInfluences[ i ];\n\t\t\t\tconst morph = morphAttribute[ i ];\n\n\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute( morph, a );\n\t\t\t\t_tempB.fromBufferAttribute( morph, b );\n\t\t\t\t_tempC.fromBufferAttribute( morph, c );\n\n\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\t\t\t\t\t_morphB.addScaledVector( _tempB, influence );\n\t\t\t\t\t_morphC.addScaledVector( _tempC, influence );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( _vA ), influence );\n\t\t\t\t\t_morphB.addScaledVector( _tempB.sub( _vB ), influence );\n\t\t\t\t\t_morphC.addScaledVector( _tempC.sub( _vC ), influence );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_vA.add( _morphA );\n\t\t\t_vB.add( _morphB );\n\t\t\t_vC.add( _morphC );\n\n\t\t}\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tobject.applyBoneTransform( a, _vA );\n\t\t\tobject.applyBoneTransform( b, _vB );\n\t\t\tobject.applyBoneTransform( c, _vC );\n\n\t\t}\n\n\t\tmodifiedAttributeArray[ a * 3 + 0 ] = _vA.x;\n\t\tmodifiedAttributeArray[ a * 3 + 1 ] = _vA.y;\n\t\tmodifiedAttributeArray[ a * 3 + 2 ] = _vA.z;\n\t\tmodifiedAttributeArray[ b * 3 + 0 ] = _vB.x;\n\t\tmodifiedAttributeArray[ b * 3 + 1 ] = _vB.y;\n\t\tmodifiedAttributeArray[ b * 3 + 2 ] = _vB.z;\n\t\tmodifiedAttributeArray[ c * 3 + 0 ] = _vC.x;\n\t\tmodifiedAttributeArray[ c * 3 + 1 ] = _vC.y;\n\t\tmodifiedAttributeArray[ c * 3 + 2 ] = _vC.z;\n\n\t}\n\n\tconst geometry = object.geometry;\n\tconst material = object.material;\n\n\tlet a, b, c;\n\tconst index = geometry.index;\n\tconst positionAttribute = geometry.attributes.position;\n\tconst morphPosition = geometry.morphAttributes.position;\n\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\tconst normalAttribute = geometry.attributes.normal;\n\tconst morphNormal = geometry.morphAttributes.position;\n\n\tconst groups = geometry.groups;\n\tconst drawRange = geometry.drawRange;\n\tlet i, j, il, jl;\n\tlet group;\n\tlet start, end;\n\n\tconst modifiedPosition = new Float32Array( positionAttribute.count * positionAttribute.itemSize );\n\tconst modifiedNormal = new Float32Array( normalAttribute.count * normalAttribute.itemSize );\n\n\tif ( index !== null ) {\n\n\t\t// indexed buffer geometry\n\n\t\tif ( Array.isArray( material ) ) {\n\n\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\tgroup = groups[ i ];\n\n\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\ta = index.getX( j );\n\t\t\t\t\tb = index.getX( j + 1 );\n\t\t\t\t\tc = index.getX( j + 2 );\n\n\t\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\t\tobject,\n\t\t\t\t\t\tpositionAttribute,\n\t\t\t\t\t\tmorphPosition,\n\t\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\t\ta, b, c,\n\t\t\t\t\t\tmodifiedPosition\n\t\t\t\t\t);\n\n\t\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\t\tobject,\n\t\t\t\t\t\tnormalAttribute,\n\t\t\t\t\t\tmorphNormal,\n\t\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\t\ta, b, c,\n\t\t\t\t\t\tmodifiedNormal\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\tend = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\ta = index.getX( i );\n\t\t\t\tb = index.getX( i + 1 );\n\t\t\t\tc = index.getX( i + 2 );\n\n\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\tobject,\n\t\t\t\t\tpositionAttribute,\n\t\t\t\t\tmorphPosition,\n\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\ta, b, c,\n\t\t\t\t\tmodifiedPosition\n\t\t\t\t);\n\n\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\tobject,\n\t\t\t\t\tnormalAttribute,\n\t\t\t\t\tmorphNormal,\n\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\ta, b, c,\n\t\t\t\t\tmodifiedNormal\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t} else {\n\n\t\t// non-indexed buffer geometry\n\n\t\tif ( Array.isArray( material ) ) {\n\n\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\tgroup = groups[ i ];\n\n\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\ta = j;\n\t\t\t\t\tb = j + 1;\n\t\t\t\t\tc = j + 2;\n\n\t\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\t\tobject,\n\t\t\t\t\t\tpositionAttribute,\n\t\t\t\t\t\tmorphPosition,\n\t\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\t\ta, b, c,\n\t\t\t\t\t\tmodifiedPosition\n\t\t\t\t\t);\n\n\t\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\t\tobject,\n\t\t\t\t\t\tnormalAttribute,\n\t\t\t\t\t\tmorphNormal,\n\t\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\t\ta, b, c,\n\t\t\t\t\t\tmodifiedNormal\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\tend = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\ta = i;\n\t\t\t\tb = i + 1;\n\t\t\t\tc = i + 2;\n\n\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\tobject,\n\t\t\t\t\tpositionAttribute,\n\t\t\t\t\tmorphPosition,\n\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\ta, b, c,\n\t\t\t\t\tmodifiedPosition\n\t\t\t\t);\n\n\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\tobject,\n\t\t\t\t\tnormalAttribute,\n\t\t\t\t\tmorphNormal,\n\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\ta, b, c,\n\t\t\t\t\tmodifiedNormal\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tconst morphedPositionAttribute = new Float32BufferAttribute( modifiedPosition, 3 );\n\tconst morphedNormalAttribute = new Float32BufferAttribute( modifiedNormal, 3 );\n\n\treturn {\n\n\t\tpositionAttribute: positionAttribute,\n\t\tnormalAttribute: normalAttribute,\n\t\tmorphedPositionAttribute: morphedPositionAttribute,\n\t\tmorphedNormalAttribute: morphedNormalAttribute\n\n\t};\n\n}\n\nfunction mergeGroups( geometry ) {\n\n\tif ( geometry.groups.length === 0 ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometryUtils.mergeGroups(): No groups are defined. Nothing to merge.' );\n\t\treturn geometry;\n\n\t}\n\n\tlet groups = geometry.groups;\n\n\t// sort groups by material index\n\n\tgroups = groups.sort( ( a, b ) => {\n\n\t\tif ( a.materialIndex !== b.materialIndex ) return a.materialIndex - b.materialIndex;\n\n\t\treturn a.start - b.start;\n\n\t} );\n\n\t// create index for non-indexed geometries\n\n\tif ( geometry.getIndex() === null ) {\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\t\tconst indices = [];\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i += 3 ) {\n\n\t\t\tindices.push( i, i + 1, i + 2 );\n\n\t\t}\n\n\t\tgeometry.setIndex( indices );\n\n\t}\n\n\t// sort index\n\n\tconst index = geometry.getIndex();\n\n\tconst newIndices = [];\n\n\tfor ( let i = 0; i < groups.length; i ++ ) {\n\n\t\tconst group = groups[ i ];\n\n\t\tconst groupStart = group.start;\n\t\tconst groupLength = groupStart + group.count;\n\n\t\tfor ( let j = groupStart; j < groupLength; j ++ ) {\n\n\t\t\tnewIndices.push( index.getX( j ) );\n\n\t\t}\n\n\t}\n\n\tgeometry.dispose(); // Required to force buffer recreation\n\tgeometry.setIndex( newIndices );\n\n\t// update groups indices\n\n\tlet start = 0;\n\n\tfor ( let i = 0; i < groups.length; i ++ ) {\n\n\t\tconst group = groups[ i ];\n\n\t\tgroup.start = start;\n\t\tstart += group.count;\n\n\t}\n\n\t// merge groups\n\n\tlet currentGroup = groups[ 0 ];\n\n\tgeometry.groups = [ currentGroup ];\n\n\tfor ( let i = 1; i < groups.length; i ++ ) {\n\n\t\tconst group = groups[ i ];\n\n\t\tif ( currentGroup.materialIndex === group.materialIndex ) {\n\n\t\t\tcurrentGroup.count += group.count;\n\n\t\t} else {\n\n\t\t\tcurrentGroup = group;\n\t\t\tgeometry.groups.push( currentGroup );\n\n\t\t}\n\n\t}\n\n\treturn geometry;\n\n}\n\n\n/**\n * Modifies the supplied geometry if it is non-indexed, otherwise creates a new,\n * non-indexed geometry. Returns the geometry with smooth normals everywhere except\n * faces that meet at an angle greater than the crease angle.\n *\n * @param {BufferGeometry} geometry\n * @param {number} [creaseAngle]\n * @return {BufferGeometry}\n */\nfunction toCreasedNormals( geometry, creaseAngle = Math.PI / 3 /* 60 degrees */ ) {\n\n\tconst creaseDot = Math.cos( creaseAngle );\n\tconst hashMultiplier = ( 1 + 1e-10 ) * 1e2;\n\n\t// reusable vectors\n\tconst verts = [ new Vector3(), new Vector3(), new Vector3() ];\n\tconst tempVec1 = new Vector3();\n\tconst tempVec2 = new Vector3();\n\tconst tempNorm = new Vector3();\n\tconst tempNorm2 = new Vector3();\n\n\t// hashes a vector\n\tfunction hashVertex( v ) {\n\n\t\tconst x = ~ ~ ( v.x * hashMultiplier );\n\t\tconst y = ~ ~ ( v.y * hashMultiplier );\n\t\tconst z = ~ ~ ( v.z * hashMultiplier );\n\t\treturn `${x},${y},${z}`;\n\n\t}\n\n\t// BufferGeometry.toNonIndexed() warns if the geometry is non-indexed\n\t// and returns the original geometry\n\tconst resultGeometry = geometry.index ? geometry.toNonIndexed() : geometry;\n\tconst posAttr = resultGeometry.attributes.position;\n\tconst vertexMap = {};\n\n\t// find all the normals shared by commonly located vertices\n\tfor ( let i = 0, l = posAttr.count / 3; i < l; i ++ ) {\n\n\t\tconst i3 = 3 * i;\n\t\tconst a = verts[ 0 ].fromBufferAttribute( posAttr, i3 + 0 );\n\t\tconst b = verts[ 1 ].fromBufferAttribute( posAttr, i3 + 1 );\n\t\tconst c = verts[ 2 ].fromBufferAttribute( posAttr, i3 + 2 );\n\n\t\ttempVec1.subVectors( c, b );\n\t\ttempVec2.subVectors( a, b );\n\n\t\t// add the normal to the map for all vertices\n\t\tconst normal = new Vector3().crossVectors( tempVec1, tempVec2 ).normalize();\n\t\tfor ( let n = 0; n < 3; n ++ ) {\n\n\t\t\tconst vert = verts[ n ];\n\t\t\tconst hash = hashVertex( vert );\n\t\t\tif ( ! ( hash in vertexMap ) ) {\n\n\t\t\t\tvertexMap[ hash ] = [];\n\n\t\t\t}\n\n\t\t\tvertexMap[ hash ].push( normal );\n\n\t\t}\n\n\t}\n\n\t// average normals from all vertices that share a common location if they are within the\n\t// provided crease threshold\n\tconst normalArray = new Float32Array( posAttr.count * 3 );\n\tconst normAttr = new BufferAttribute( normalArray, 3, false );\n\tfor ( let i = 0, l = posAttr.count / 3; i < l; i ++ ) {\n\n\t\t// get the face normal for this vertex\n\t\tconst i3 = 3 * i;\n\t\tconst a = verts[ 0 ].fromBufferAttribute( posAttr, i3 + 0 );\n\t\tconst b = verts[ 1 ].fromBufferAttribute( posAttr, i3 + 1 );\n\t\tconst c = verts[ 2 ].fromBufferAttribute( posAttr, i3 + 2 );\n\n\t\ttempVec1.subVectors( c, b );\n\t\ttempVec2.subVectors( a, b );\n\n\t\ttempNorm.crossVectors( tempVec1, tempVec2 ).normalize();\n\n\t\t// average all normals that meet the threshold and set the normal value\n\t\tfor ( let n = 0; n < 3; n ++ ) {\n\n\t\t\tconst vert = verts[ n ];\n\t\t\tconst hash = hashVertex( vert );\n\t\t\tconst otherNormals = vertexMap[ hash ];\n\t\t\ttempNorm2.set( 0, 0, 0 );\n\n\t\t\tfor ( let k = 0, lk = otherNormals.length; k < lk; k ++ ) {\n\n\t\t\t\tconst otherNorm = otherNormals[ k ];\n\t\t\t\tif ( tempNorm.dot( otherNorm ) > creaseDot ) {\n\n\t\t\t\t\ttempNorm2.add( otherNorm );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttempNorm2.normalize();\n\t\t\tnormAttr.setXYZ( i3 + n, tempNorm2.x, tempNorm2.y, tempNorm2.z );\n\n\t\t}\n\n\t}\n\n\tresultGeometry.setAttribute( 'normal', normAttr );\n\treturn resultGeometry;\n\n}\n\nfunction mergeBufferGeometries( geometries, useGroups = false ) {\n\n\tconsole.warn( 'THREE.BufferGeometryUtils: mergeBufferGeometries() has been renamed to mergeGeometries().' ); // @deprecated, r151\n\treturn mergeGeometries( geometries, useGroups );\n\n}\n\nfunction mergeBufferAttributes( attributes ) {\n\n\tconsole.warn( 'THREE.BufferGeometryUtils: mergeBufferAttributes() has been renamed to mergeAttributes().' ); // @deprecated, r151\n\treturn mergeAttributes( attributes );\n\n}\n\nexport {\n\tcomputeMikkTSpaceTangents,\n\tmergeGeometries,\n\tmergeBufferGeometries,\n\tmergeAttributes,\n\tmergeBufferAttributes,\n\tinterleaveAttributes,\n\testimateBytesUsed,\n\tmergeVertices,\n\ttoTrianglesDrawMode,\n\tcomputeMorphedAttributes,\n\tmergeGroups,\n\ttoCreasedNormals\n};\n","import { BufferGeometry, CircleGeometry, ShapeGeometry } from 'three'\nimport { mergeGeometries } from 'three/examples/jsm/utils/BufferGeometryUtils.js'\n\nimport { Size } from '../../../types'\nimport { getRoundedShape } from '../../../utils/shapes'\n\n/**\n * Classic node geometry parameters\n */\nexport type Params = {\n  /** Socket radius, default: 12.3 */\n  socketRadius?: number\n  /** Socket margin, default: 11.5 */\n  socketMargin?: number\n  /** Inputs offset relative to bottom, default: 15.5 */\n  inputsOffset?: number\n  /** Outputs offset relative to top, default: 44.5 */\n  outputsOffset?: number\n  /** Border radius, default: 10 */\n  borderRadius?: number\n}\n\n/**\n * Create classic node geometry\n * @param size Node size\n * @param params Geometry parameters\n * @returns Node geometry\n */\n// eslint-disable-next-line max-statements\nexport function createClassicNodeGeometry(size: Size, params?: Params): BufferGeometry {\n  const {\n    borderRadius = 10,\n    inputsOffset = 15.5,\n    outputsOffset = 44.5,\n    socketRadius = 12.3,\n    socketMargin = 11.5\n  } = params || {}\n  const fixWidth = size.width - 1 // hide border artifact\n  const fixHeight = size.height - 1 // hide border artifact\n  const shape = getRoundedShape(fixWidth, fixHeight, borderRadius * 1.05)\n  const geometry = new ShapeGeometry(shape)\n  const circle = new CircleGeometry(socketRadius, 16)\n\n  const extra: BufferGeometry[] = []\n\n  if ('inputs' in size) {\n    const inputs = Object.entries((size as any).inputs).length\n\n    for (let index = 0; index < inputs; index++) {\n      const geom = circle.clone()\n      const x = 1.5\n      const y = size.height - socketRadius - inputsOffset - ((socketRadius * 2 + socketMargin) * index)\n\n      geom.translate(x, y, 0)\n\n      extra.push(geom)\n    }\n  }\n  if ('outputs' in size) {\n    const outputs = Object.entries((size as any).outputs).length\n\n    for (let index = 0; index < outputs; index++) {\n      const geom = circle.clone()\n      const x = size.width - 1.5\n      const y = socketRadius + outputsOffset + ((socketRadius * 2 + socketMargin) * index)\n\n      geom.translate(x, y, 0)\n\n      extra.push(geom)\n    }\n  }\n\n  return mergeGeometries([...extra, geometry])\n}\n","import { NodeEditor } from 'rete'\nimport { BufferGeometry } from 'three'\n\nimport { Area3DPlugin } from '../../..'\nimport { ExpectSchemes } from '../../../types'\nimport { createClassicNodeGeometry } from './geometry'\n\nexport { createClassicNodeGeometry }\n\n/**\n * Options for node form generator\n */\nexport type Props<S extends ExpectSchemes> = {\n  /** Customize node geometry */\n  customize?: (node: S['Node']) => BufferGeometry\n}\n\n/**\n * Form generator for embedding nodes into 3D scene.\n * @param area Area3DPlugin instance\n * @param props Options for node form generator\n */\nexport function node<S extends ExpectSchemes, K>(area: Area3DPlugin<S, K>, props?: Props<S>) {\n  const editor = area.parentScope<NodeEditor<S>>(NodeEditor)\n\n  area.addPipe(context => {\n    if (!context || typeof context !== 'object' || !('type' in context)) return context\n    if (context.type === 'render' && context.data.type === 'node') {\n      const id = context.data.payload.id\n      const currentNode = editor.getNode(id)\n      const geometry = props?.customize ? props.customize(currentNode) : createClassicNodeGeometry(currentNode)\n\n      area.area.content.updateGeometry(context.data.element, geometry)\n    }\n    return context\n  })\n}\n","import { ConnectionId, Root, Scope, ScopeAsParameter } from 'rete'\nimport { RenderSignal } from 'rete-area-plugin'\nimport { CircleGeometry } from 'three'\nimport { mergeGeometries } from 'three/examples/jsm/utils/BufferGeometryUtils.js'\n\nimport { Area3DPlugin } from '../..'\nimport { ExpectSchemes, Position } from '../../types'\n\nexport type Pin = {\n  id: string\n  position: Position\n  selected?: boolean\n}\nexport type PinData = {\n  id: ConnectionId\n  pins: Pin[]\n}\n\ntype Requires =\n  | RenderSignal<'reroute-pins', { data: PinData }>\n\n/**\n * Form generator for embedding rete-connection-reroute-plugin into 3D scene.\n * @param scope Area3DPlugin instance\n */\nexport function reroute<S extends ExpectSchemes, K>(scope: ScopeAsParameter<Scope<K, [Root<S>]>, [Requires]>) {\n  if (!(scope instanceof Area3DPlugin<S, Requires>)) throw new Error('')\n  const area = scope as Area3DPlugin<S, Requires>\n\n  area.addPipe(context => {\n    if (!context || typeof context !== 'object' || !('type' in context)) return context\n    if (context.type === 'render' && context.data.type === 'reroute-pins') {\n      const pinGeometry = new CircleGeometry(10, 16)\n      const pins = context.data.data.pins.map(pin => {\n        return pinGeometry.clone().translate(pin.position.x, pin.position.y, 0)\n      })\n\n      // eslint-disable-next-line no-undefined\n      area.area.content.updateGeometry(context.data.element, pins.length ? mergeGeometries(pins) : undefined)\n    }\n    return context\n  })\n}\n","/**\n * Group of functions to replicate forms.\n * This extension provides a functions for generating geometry that replicates the form of HTML elements embedded in the scene.\n * @module Extensions/Forms\n */\nexport { comment } from './comment'\nexport type { Props as ConnectionForm } from './connection'\nexport { connection, createClassicConnectionGeometry } from './connection'\nexport type { Props as NodeForm } from './node'\nexport { createClassicNodeGeometry, node } from './node'\nexport type { Params as ClassicNodeOptions } from './node/geometry'\nexport { reroute } from './reroute'\n","import { Position, Size } from '../types'\n\n/**\n * Bounding box\n */\nconst min = (arr: number[]) => arr.length === 0 ? 0 : Math.min(...arr)\nconst max = (arr: number[]) => arr.length === 0 ? 0 : Math.max(...arr)\n\nexport function getBoundingBox(rects: ({ position: Position } & Size)[]) {\n  const left = min(rects.map(rect => rect.position.x))\n  const top = min(rects.map(rect => rect.position.y))\n  const right = max(rects.map(rect => rect.position.x + rect.width))\n  const bottom = max(rects.map(rect => rect.position.y + rect.height))\n\n  return {\n    left,\n    right,\n    top,\n    bottom,\n    width: Math.abs(left - right),\n    height: Math.abs(top - bottom),\n    center: {\n      x: (left + right) / 2,\n      y: (top + bottom) / 2\n    }\n  }\n}\n","import { NodeId } from 'rete'\n\nimport { NodeView } from '../node-view'\nimport { ExpectSchemes } from '../types'\n\nexport function getNodesRect<S extends ExpectSchemes>(nodes: S['Node'][], views: Map<NodeId, NodeView>) {\n  return nodes\n    .map(node => ({ view: views.get(node.id) as NodeView, node }))\n    .filter(item => item.view)\n    .map(({ view, node }) => {\n      const { width, height } = node\n\n      if (typeof width !== 'undefined' && typeof height !== 'undefined') {\n        return {\n          position: view.position,\n          width,\n          height\n        }\n      }\n\n      return {\n        position: view.position,\n        width: view.element.clientWidth,\n        height: view.element.clientHeight\n      }\n    })\n}\n","import { BaseSchemes, NodeEditor } from 'rete'\n\nimport { Area3DPlugin } from '..'\nimport { ExpectSchemes } from '../types'\nimport { getBoundingBox as getBBox } from '../utils/bounding-box'\nimport { getNodesRect } from '../utils/rects'\n\nexport type NodeRef<Schemes extends BaseSchemes> = Schemes['Node'] | Schemes['Node']['id']\n\nexport function getBoundingBox<Schemes extends ExpectSchemes, K>(plugin: Area3DPlugin<Schemes, K>, nodes: NodeRef<Schemes>[]) {\n  const editor = plugin.parentScope<NodeEditor<Schemes>>(NodeEditor)\n  const list = nodes.map(node => typeof node === 'object' ? node : editor.getNode(node))\n  const rects = getNodesRect(list, plugin.nodeViews)\n\n  return getBBox(rects)\n}\n","import { PerspectiveCamera, Vector3 } from 'three'\n\nimport { Area3DPlugin } from '..'\nimport { ExpectSchemes } from '../types'\nimport { getBoundingBox } from './bounding-box'\n\n/**\n * Parameters for `zoomAt` extension\n */\nexport type Params = {\n  /** Set gap between nodes and the viewport border */\n  scale?: number\n}\n\n/**\n * Move the camera to look at the given nodes\n * @param area The 3D area plugin\n * @param nodes The nodes to look at\n * @param params The lookAt parameters\n * @example Area3DExtensions.lookAt(area, [node1, node2])\n * @example Area3DExtensions.lookAt(area, [node1, node2], { scale: 0.8 })\n */\nexport function lookAt<S extends ExpectSchemes, K>(area: Area3DPlugin<S, K>, nodes: S['Node'][], params?: Params) {\n  const { scale = 0.9 } = params || {}\n  const { scene } = area.area\n  const { camera, orbit, canvases } = scene\n  const canvas = canvases.get(area)\n  const bbox = getBoundingBox(area, nodes)\n\n  if (!canvas) throw new Error('cannot found canvas')\n\n  const distance = getTargetDistance(camera, area.container, bbox, scale)\n  const target = new Vector3(bbox.center.x, bbox.center.y, 0)\n  const source = target.clone().add(new Vector3(0, 0, distance))\n\n  canvas.localToWorld(target)\n  canvas.localToWorld(source)\n\n  camera.position.copy(source)\n  orbit.target.copy(target)\n  orbit.update()\n}\n\nfunction getTargetDistance(camera: PerspectiveCamera, container: HTMLElement, size: { width: number, height: number }, scale: number) {\n  const fov = camera.fov * (Math.PI / 180)\n  const fovh = 2 * Math.atan(Math.tan(fov / 2) * camera.aspect)\n  const dx = Math.abs(size.width / 2 / Math.tan(fovh / 2))\n  const dy = Math.abs(size.height / 2 / Math.tan(fov / 2))\n  const minDistance = Math.abs(container.clientHeight / 2 / Math.tan(fov / 2))\n  const distance = Math.max(dx, dy, minDistance)\n\n  return distance / scale\n}\n","/**\n * Area 3D extensions.\n * These extensions are specific to the 3D area and provide additional functionality, while many of rete-area-plugin's extensions are also available for this plugin.\n * @priority 7\n * @module Extensions\n */\n\nexport { animate } from './animate'\nexport * as forms from './forms'\nexport type { Params as LookAt } from './lookAt'\nexport { lookAt } from './lookAt'\n","import { ConnectionId, NodeId, Root, Scope } from 'rete'\nimport { BaseArea, BaseAreaPlugin } from 'rete-area-plugin'\n\nimport { Area, TransformEventParams } from './area'\nimport { ConnectionView } from './connection-view'\nimport { ElementsHolder } from './elements-holder'\nimport { NodeView } from './node-view'\nimport { ExpectSchemes, GetRenderTypes, Position } from './types'\n\nexport type { Area } from './area'\nexport * as Area3DExtensions from './extensions'\nexport type { HybridScene } from './scene'\nexport type { HybridRenderer } from './scene/HybridRenderer'\n\nexport type RenderMeta = { filled?: boolean }\n\n/**\n * Signal types produced by Area3DPlugin instance\n * @priority 10\n */\nexport type Area3D<Schemes extends ExpectSchemes> =\n  | BaseArea<Schemes>\n  | { type: 'transform', data: TransformEventParams }\n  | { type: 'transformed', data: TransformEventParams }\n  | { type: 'resized', data: { event: Event } }\n\nexport type Area3DInherited<Schemes extends ExpectSchemes, ExtraSignals = never> = [Area3D<Schemes> | ExtraSignals, Root<Schemes>]\n\n/**\n * Plugin for embedding node editor into 3D scene.\n * @priority 9\n */\nexport class Area3DPlugin<Schemes extends ExpectSchemes, ExtraSignals = never> extends BaseAreaPlugin<Schemes, Area3D<Schemes> | ExtraSignals> {\n  /**\n   * Area instance, contains nodes, connections and other elements\n   */\n  public area: Area<Area3DPlugin<Schemes, ExtraSignals>>\n  public nodeViews = new Map<NodeId, NodeView>()\n  public connectionViews = new Map<ConnectionId, ConnectionView>()\n  public elements = new ElementsHolder<HTMLElement, Extract<Area3D<Schemes>, { type: 'render' }>['data'] & RenderMeta>()\n  public container: HTMLElement\n\n  /**\n   * @param container HTML element to render area in\n   */\n  constructor(container: HTMLElement)\n  constructor(shared: Area3DPlugin<Schemes, ExtraSignals>)\n  constructor(argument: HTMLElement | Area3DPlugin<Schemes, ExtraSignals>) {\n    super('area-3d')\n    this.container = argument instanceof Area3DPlugin ? argument.container : argument\n    this.container.style.overflow = 'hidden'\n    this.container.addEventListener('contextmenu', this.onContextMenu)\n\n    this.area = new Area(\n      this.container,\n      argument instanceof Area3DPlugin ? argument.area.scene : null,\n      this,\n      {\n        pointerDown: (position, event) => this.emit({ type: 'pointerdown', data: { position, event } }),\n        pointerMove: (position, event) => this.emit({ type: 'pointermove', data: { position, event } }),\n        pointerUp: (position, event) => this.emit({ type: 'pointerup', data: { position, event } }),\n        resize: event => this.emit({ type: 'resized', data: { event } }),\n        transformed: params => this.emit({ type: 'transformed', data: params }),\n        reordered: element => this.emit({ type: 'reordered', data: { element } })\n      },\n      {\n        transform: params => this.emit({ type: 'transform', data: params })\n      }\n    )\n    this.area.scene.addCanvasFor(this)\n  }\n\n  /**\n   * Share the 3D scene with multiple instances of Area3DPlugin\n   * @returns new instance of Area3DPlugin\n   */\n  share() {\n    return new Area3DPlugin<Schemes, ExtraSignals>(this)\n  }\n\n  setParent(scope: Scope<Root<Schemes>, []>) {\n    super.setParent(scope)\n\n    this.addPipe(context => {\n      if (!context || !(typeof context === 'object' && 'type' in context)) return context\n      if (context.type === 'nodecreated') {\n        this.addNodeView(context.data)\n      }\n      if (context.type === 'noderemoved') {\n        this.removeNodeView(context.data.id)\n      }\n      if (context.type === 'connectioncreated') {\n        this.addConnectionView(context.data)\n      }\n      if (context.type === 'connectionremoved') {\n        this.removeConnectionView(context.data.id)\n      }\n      if (context.type === 'render') {\n        this.elements.set(context.data)\n      }\n      if (context.type === 'unmount') {\n        this.elements.delete(context.data.element)\n      }\n      return context\n    })\n  }\n\n  private onContextMenu = (event: MouseEvent) => {\n    this.emit({ type: 'contextmenu', data: { event, context: 'root' } })\n  }\n\n  public addNodeView(node: Schemes['Node']) {\n    const { id } = node\n    const view = new NodeView(\n      {\n        picked: () => this.emit({ type: 'nodepicked', data: { id } }),\n        translated: data => this.emit({ type: 'nodetranslated', data: { id, ...data } }),\n        dragged: () => this.emit({ type: 'nodedragged', data: node }),\n        contextmenu: event => this.emit({ type: 'contextmenu', data: { event, context: node } }),\n        resized: ({ size }) => this.emit({ type: 'noderesized', data: { id: node.id, size } })\n      },\n      {\n        translate: data => this.emit({ type: 'nodetranslate', data: { id, ...data } }),\n        resize: ({ size }) => this.emit({ type: 'noderesize', data: { id: node.id, size } })\n      }\n    )\n\n    this.nodeViews.set(id, view)\n    this.area.content.add(view.element, view.object)\n\n    this.emit({\n      type: 'render',\n      data: { element: view.element, type: 'node', payload: node }\n    })\n\n    return view\n  }\n\n  public removeNodeView(id: NodeId) {\n    const view = this.nodeViews.get(id)\n\n    if (view) {\n      this.emit({ type: 'unmount', data: { element: view.element } })\n      this.nodeViews.delete(id)\n      this.area.content.remove(view.element)\n    }\n  }\n\n  public addConnectionView(connection: Schemes['Connection']) {\n    const view = new ConnectionView({\n      contextmenu: event => this.emit({ type: 'contextmenu', data: { event, context: connection } })\n    })\n\n    this.connectionViews.set(connection.id, view)\n    this.area.content.add(view.element, view.object)\n\n    this.emit({\n      type: 'render',\n      data: { element: view.element, type: 'connection', payload: connection }\n    })\n\n    return view\n  }\n\n  public removeConnectionView(id: ConnectionId) {\n    const view = this.connectionViews.get(id)\n\n    if (view) {\n      this.emit({ type: 'unmount', data: { element: view.element } })\n      this.connectionViews.delete(id)\n      this.area.content.remove(view.element)\n    }\n  }\n\n  /**\n   * Translate node to position\n   * @param id Node id\n   * @param position Position\n   */\n  public async translate(id: NodeId, { x, y }: Position) {\n    const view = this.nodeViews.get(id)\n\n    if (view) return await view.translate(x, y)\n  }\n\n  /**\n   * Resize node\n   * @param id Node id\n   * @param width Desired width\n   * @param height Desired height\n   */\n  public async resize(id: NodeId, width: number, height: number) {\n    const view = this.nodeViews.get(id)\n\n    if (view) return await view.resize(width, height)\n  }\n\n  /**\n   * Force update rendered element by id (node, connection, etc.)\n   * @param type Element type\n   * @param id Element id\n   * @emits render\n   */\n  public async update(type: GetRenderTypes<Area3D<Schemes>> | GetRenderTypes<ExtraSignals>, id: string) {\n    const data = this.elements.get(type, id)\n\n    if (data) await this.emit({ type: 'render', data } as Area3D<Schemes>)\n  }\n\n  /**\n   * Destroy all views and remove all event listeners\n   */\n  destroy() {\n    this.container.removeEventListener('contextmenu', this.onContextMenu)\n    Array.from(this.connectionViews.keys()).forEach(id => this.removeConnectionView(id))\n    Array.from(this.nodeViews.keys()).forEach(id => this.removeNodeView(id))\n    this.area.destroy()\n  }\n}\n"],"names":["flipFaces","geometry","index","getIndex","numTriangles","count","i","a","getX","b","c","setXYZ","createMaterial","transparent","ShadowMaterial","opacity","blending","NoBlending","side","FrontSide","createBackMaterial","MeshBasicMaterial","color","BackSide","ObjectHTML","_Object3D","_inherits","_super","_createSuper","element","_this","_classCallCheck","call","css3dObject","CSS3DObject","onAfterRender","internalTranslate","style","transform","endsWith","add","front","Mesh","back","castShadow","updateMaterials","_createClass","key","value","updateGeometry","scaled","clone","scale","BufferGeometry","materials","material","Object3D","findTop","objects","sort","position","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","DOCUMENT_POSITION_PRECEDING","Content","scene","scope","reordered","_scene$renderer$css3d","_defineProperty","WeakMap","css3dContainer","renderer","css3d","domElement","firstElementChild","HTMLElement","Error","holder","getPointerFrom","event","_this$holder$getBound","getBoundingClientRect","left","top","x","clientX","y","clientY","object","arguments","length","undefined","set","appendChild","_reorder","_asyncToGenerator","_regeneratorRuntime","mark","_callee","target","next","wrap","_callee$","_context","prev","contains","insertBefore","stop","reorder","_x","_x2","apply","remove","get","raycaster","Raycaster","DragControls","_EventDispatcher","camera","getPlane","_assertThisInitialized","Set","Vector2","Vector3","Matrix4","enabled","updatePointer","setFromCamera","pointer","selected","ray","intersectPlane","intersection","newPosition","sub","offset","applyMatrix4","inverseMatrix","eventData","type","dispatchEvent","intersections","intersectObjects","getObjects","findIntersectedObject","parent","copy","matrixWorld","invert","worldPosition","setFromMatrixPosition","stopPropagation","cursor","hovered","rect","width","height","touchAction","activate","attach","detach","addEventListener","onPointerMove","onPointerDown","onPointerCancel","deactivate","removeEventListener","dispose","Array","from","values","getRaycaster","findContainer","traverseAncestors","intersectedObject","includes","_this2","map","EventDispatcher","DraggableObject3D","_ObjectHTML","events","attachDraggableHooks","controls","e","start","_event$position","z","translate","drag","HybridRenderer","getDefaultCSS3DRenderer","webgl","getDefaultWebGLRenderer","document","createElement","setAttribute","fillAbsolute","pointerEvents","getContent","CSS3DRenderer","WebGLRenderer","alpha","antialias","setPixelRatio","window","devicePixelRatio","setClearColor","shadowMap","PCFSoftShadowMap","setSize","render","el","orbitControlsRestrictor","orbit","check","updated","previous","previousTarget","rotation","_previous","p","r","t","sent","fromArray","update","HybridScene","container","Scene","Map","PerspectiveCamera","fov","near","far","createOrbitControls","createDragControls","OrbitControls","orbitChangeNumber","canvas","canvases","canvasToPlane","plane","Plane","normal","applyQuaternion","quaternion","setFromNormalAndCoplanarPoint","addCanvasFor","root","resize","aspect","updateProjectionMatrix","getCanvasFor","worldToLocal","Area","guards","setPointerFrom","pointerDown","pointerMove","pointerUp","clientWidth","clientHeight","content","pointerdown","pointermove","pointerup","current","transformed","getCanvas","point","destroy","ConnectionView","contextmenu","ElementsHolder","context","payload","id","views","viewsElements","concat","_delete","_view$payload","view","NodeView","_ref","translation","_objectSpread","abrupt","data","translated","_ref2","_callee2","size","_callee2$","_context2","children","item","resized","_x3","_x4","picked","dragged","animate","area","tick","time","requestAnimationFrame","performance","now","getRoundedShape","radius","shape","Shape","moveTo","lineTo","quadraticCurveTo","closePath","comment","commentScope","parentScope","Area3DPlugin","addPipe","updateCommentGeometry","comments","commentGeometry","ShapeGeometry","__commentGeometry","existing","meta","require$$0","require$$1","require$$2","require$$3","createClassicConnectionGeometry","path","segments","contours","parse","points","segment","_slicedToArray","flat","PlaneGeometry","prevPoint","nextPoint","vectorBetweenPoints","normalBetweenPoints","normalize","multiplyScalar","attributes","setX","setY","connection","props","renderScope","_typeof","connectionViews","classicConnectionPath","customize","createClassicNodeGeometry","params","_ref$borderRadius","borderRadius","_ref$inputsOffset","inputsOffset","_ref$outputsOffset","outputsOffset","_ref$socketRadius","socketRadius","_ref$socketMargin","socketMargin","fixWidth","fixHeight","circle","CircleGeometry","extra","inputs","Object","entries","geom","push","outputs","mergeGeometries","node","editor","NodeEditor","currentNode","getNode","reroute","pinGeometry","pins","pin","min","arr","Math","_toConsumableArray","max","getBoundingBox","rects","right","bottom","abs","center","getNodesRect","nodes","filter","plugin","list","nodeViews","getBBox","lookAt","_ref$scale","bbox","distance","getTargetDistance","source","localToWorld","PI","fovh","atan","tan","dx","dy","minDistance","_BaseAreaPlugin","argument","emit","overflow","onContextMenu","share","setParent","_get","_getPrototypeOf","prototype","addNodeView","removeNodeView","addConnectionView","removeConnectionView","elements","_this3","_this4","_translate","_ref3","_resize","_x5","_update","_callee3","_callee3$","_context3","_x6","_x7","_this5","keys","forEach","BaseAreaPlugin"],"mappings":"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"}