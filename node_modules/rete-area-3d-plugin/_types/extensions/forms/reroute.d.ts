import { ConnectionId, Root, Scope, ScopeAsParameter } from 'rete';
import { RenderSignal } from 'rete-area-plugin';
import { ExpectSchemes, Position } from '../../types';
export declare type Pin = {
    id: string;
    position: Position;
    selected?: boolean;
};
export declare type PinData = {
    id: ConnectionId;
    pins: Pin[];
};
declare type Requires = RenderSignal<'reroute-pins', {
    data: PinData;
}>;
/**
 * Form generator for embedding rete-connection-reroute-plugin into 3D scene.
 * @param scope Area3DPlugin instance
 */
export declare function reroute<S extends ExpectSchemes, K>(scope: ScopeAsParameter<Scope<K, [Root<S>]>, [Requires]>): void;
export {};
//# sourceMappingURL=reroute.d.ts.map