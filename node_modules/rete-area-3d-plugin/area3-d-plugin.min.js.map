{"version":3,"file":"area3-d-plugin.min.js","sources":["node_modules/three/examples/jsm/renderers/CSS3DRenderer.js","src/scene/ObjectHTML.ts","src/utils/geometry.ts","src/content.ts","src/scene/Drag/DragControls.ts","src/scene/Drag/DraggableObject3D.ts","src/scene/HybridRenderer.ts","node_modules/three/examples/jsm/controls/OrbitControls.js","src/scene/index.ts","src/scene/Drag/index.ts","src/area.ts","src/scene/OrbitControls/index.ts","src/connection-view.ts","src/elements-holder.ts","src/node-view.ts","src/utils/shapes.ts","src/extensions/forms/comment.ts","node_modules/parse-svg-path/index.js","node_modules/adaptive-bezier-curve/function.js","node_modules/adaptive-bezier-curve/index.js","node_modules/abs-svg-path/index.js","node_modules/normalize-svg-path/index.js","node_modules/vec2-copy/index.js","node_modules/svg-path-contours/index.js","src/extensions/forms/connection/geometry.ts","node_modules/three/examples/jsm/utils/BufferGeometryUtils.js","src/extensions/forms/node/geometry.ts","src/extensions/forms/connection/index.ts","src/extensions/forms/node/index.ts","src/extensions/forms/reroute.ts","src/utils/bounding-box.ts","src/extensions/bounding-box.ts","src/utils/rects.ts","src/extensions/animate.ts","src/extensions/lookAt.ts","src/index.ts"],"sourcesContent":["import {\n\tMatrix4,\n\tObject3D,\n\tQuaternion,\n\tVector3\n} from 'three';\n\n/**\n * Based on http://www.emagix.net/academic/mscs-project/item/camera-sync-with-css3-and-webgl-threejs\n */\n\nconst _position = new Vector3();\nconst _quaternion = new Quaternion();\nconst _scale = new Vector3();\n\nclass CSS3DObject extends Object3D {\n\n\tconstructor( element = document.createElement( 'div' ) ) {\n\n\t\tsuper();\n\n\t\tthis.isCSS3DObject = true;\n\n\t\tthis.element = element;\n\t\tthis.element.style.position = 'absolute';\n\t\tthis.element.style.pointerEvents = 'auto';\n\t\tthis.element.style.userSelect = 'none';\n\n\t\tthis.element.setAttribute( 'draggable', false );\n\n\t\tthis.addEventListener( 'removed', function () {\n\n\t\t\tthis.traverse( function ( object ) {\n\n\t\t\t\tif ( object.element instanceof Element && object.element.parentNode !== null ) {\n\n\t\t\t\t\tobject.element.parentNode.removeChild( object.element );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.element = source.element.cloneNode( true );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass CSS3DSprite extends CSS3DObject {\n\n\tconstructor( element ) {\n\n\t\tsuper( element );\n\n\t\tthis.isCSS3DSprite = true;\n\n\t\tthis.rotation2D = 0;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.rotation2D = source.rotation2D;\n\n\t\treturn this;\n\n\t}\n\n}\n\n//\n\nconst _matrix = new Matrix4();\nconst _matrix2 = new Matrix4();\n\nclass CSS3DRenderer {\n\n\tconstructor( parameters = {} ) {\n\n\t\tconst _this = this;\n\n\t\tlet _width, _height;\n\t\tlet _widthHalf, _heightHalf;\n\n\t\tconst cache = {\n\t\t\tcamera: { fov: 0, style: '' },\n\t\t\tobjects: new WeakMap()\n\t\t};\n\n\t\tconst domElement = parameters.element !== undefined ? parameters.element : document.createElement( 'div' );\n\n\t\tdomElement.style.overflow = 'hidden';\n\n\t\tthis.domElement = domElement;\n\n\t\tconst viewElement = document.createElement( 'div' );\n\t\tviewElement.style.transformOrigin = '0 0';\n\t\tviewElement.style.pointerEvents = 'none';\n\t\tdomElement.appendChild( viewElement );\n\n\t\tconst cameraElement = document.createElement( 'div' );\n\n\t\tcameraElement.style.transformStyle = 'preserve-3d';\n\n\t\tviewElement.appendChild( cameraElement );\n\n\t\tthis.getSize = function () {\n\n\t\t\treturn {\n\t\t\t\twidth: _width,\n\t\t\t\theight: _height\n\t\t\t};\n\n\t\t};\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tconst fov = camera.projectionMatrix.elements[ 5 ] * _heightHalf;\n\n\t\t\tif ( cache.camera.fov !== fov ) {\n\n\t\t\t\tviewElement.style.perspective = camera.isPerspectiveCamera ? fov + 'px' : '';\n\t\t\t\tcache.camera.fov = fov;\n\n\t\t\t}\n\n\t\t\tif ( camera.view && camera.view.enabled ) {\n\n\t\t\t\t// view offset\n\t\t\t\tviewElement.style.transform = `translate( ${ - camera.view.offsetX * ( _width / camera.view.width ) }px, ${ - camera.view.offsetY * ( _height / camera.view.height ) }px )`;\n\n\t\t\t\t// view fullWidth and fullHeight, view width and height\n\t\t\t\tviewElement.style.transform += `scale( ${ camera.view.fullWidth / camera.view.width }, ${ camera.view.fullHeight / camera.view.height } )`;\n\n\t\t\t} else {\n\n\t\t\t\tviewElement.style.transform = '';\n\n\t\t\t}\n\n\t\t\tif ( scene.matrixWorldAutoUpdate === true ) scene.updateMatrixWorld();\n\t\t\tif ( camera.parent === null && camera.matrixWorldAutoUpdate === true ) camera.updateMatrixWorld();\n\n\t\t\tlet tx, ty;\n\n\t\t\tif ( camera.isOrthographicCamera ) {\n\n\t\t\t\ttx = - ( camera.right + camera.left ) / 2;\n\t\t\t\tty = ( camera.top + camera.bottom ) / 2;\n\n\t\t\t}\n\n\t\t\tconst scaleByViewOffset = camera.view && camera.view.enabled ? camera.view.height / camera.view.fullHeight : 1;\n\t\t\tconst cameraCSSMatrix = camera.isOrthographicCamera ?\n\t\t\t\t`scale( ${ scaleByViewOffset } )` + 'scale(' + fov + ')' + 'translate(' + epsilon( tx ) + 'px,' + epsilon( ty ) + 'px)' + getCameraCSSMatrix( camera.matrixWorldInverse ) :\n\t\t\t\t`scale( ${ scaleByViewOffset } )` + 'translateZ(' + fov + 'px)' + getCameraCSSMatrix( camera.matrixWorldInverse );\n\n\t\t\tconst style = cameraCSSMatrix +\n\t\t\t\t'translate(' + _widthHalf + 'px,' + _heightHalf + 'px)';\n\n\t\t\tif ( cache.camera.style !== style ) {\n\n\t\t\t\tcameraElement.style.transform = style;\n\n\t\t\t\tcache.camera.style = style;\n\n\t\t\t}\n\n\t\t\trenderObject( scene, scene, camera, cameraCSSMatrix );\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height ) {\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\t\t\t_widthHalf = _width / 2;\n\t\t\t_heightHalf = _height / 2;\n\n\t\t\tdomElement.style.width = width + 'px';\n\t\t\tdomElement.style.height = height + 'px';\n\n\t\t\tviewElement.style.width = width + 'px';\n\t\t\tviewElement.style.height = height + 'px';\n\n\t\t\tcameraElement.style.width = width + 'px';\n\t\t\tcameraElement.style.height = height + 'px';\n\n\t\t};\n\n\t\tfunction epsilon( value ) {\n\n\t\t\treturn Math.abs( value ) < 1e-10 ? 0 : value;\n\n\t\t}\n\n\t\tfunction getCameraCSSMatrix( matrix ) {\n\n\t\t\tconst elements = matrix.elements;\n\n\t\t\treturn 'matrix3d(' +\n\t\t\t\tepsilon( elements[ 0 ] ) + ',' +\n\t\t\t\tepsilon( - elements[ 1 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 2 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 3 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 4 ] ) + ',' +\n\t\t\t\tepsilon( - elements[ 5 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 6 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 7 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 8 ] ) + ',' +\n\t\t\t\tepsilon( - elements[ 9 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 10 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 11 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 12 ] ) + ',' +\n\t\t\t\tepsilon( - elements[ 13 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 14 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 15 ] ) +\n\t\t\t')';\n\n\t\t}\n\n\t\tfunction getObjectCSSMatrix( matrix ) {\n\n\t\t\tconst elements = matrix.elements;\n\t\t\tconst matrix3d = 'matrix3d(' +\n\t\t\t\tepsilon( elements[ 0 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 1 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 2 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 3 ] ) + ',' +\n\t\t\t\tepsilon( - elements[ 4 ] ) + ',' +\n\t\t\t\tepsilon( - elements[ 5 ] ) + ',' +\n\t\t\t\tepsilon( - elements[ 6 ] ) + ',' +\n\t\t\t\tepsilon( - elements[ 7 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 8 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 9 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 10 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 11 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 12 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 13 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 14 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 15 ] ) +\n\t\t\t')';\n\n\t\t\treturn 'translate(-50%,-50%)' + matrix3d;\n\n\t\t}\n\n\t\tfunction renderObject( object, scene, camera, cameraCSSMatrix ) {\n\n\t\t\tif ( object.isCSS3DObject ) {\n\n\t\t\t\tconst visible = ( object.visible === true ) && ( object.layers.test( camera.layers ) === true );\n\t\t\t\tobject.element.style.display = ( visible === true ) ? '' : 'none';\n\n\t\t\t\tif ( visible === true ) {\n\n\t\t\t\t\tobject.onBeforeRender( _this, scene, camera );\n\n\t\t\t\t\tlet style;\n\n\t\t\t\t\tif ( object.isCSS3DSprite ) {\n\n\t\t\t\t\t\t// http://swiftcoder.wordpress.com/2008/11/25/constructing-a-billboard-matrix/\n\n\t\t\t\t\t\t_matrix.copy( camera.matrixWorldInverse );\n\t\t\t\t\t\t_matrix.transpose();\n\n\t\t\t\t\t\tif ( object.rotation2D !== 0 ) _matrix.multiply( _matrix2.makeRotationZ( object.rotation2D ) );\n\n\t\t\t\t\t\tobject.matrixWorld.decompose( _position, _quaternion, _scale );\n\t\t\t\t\t\t_matrix.setPosition( _position );\n\t\t\t\t\t\t_matrix.scale( _scale );\n\n\t\t\t\t\t\t_matrix.elements[ 3 ] = 0;\n\t\t\t\t\t\t_matrix.elements[ 7 ] = 0;\n\t\t\t\t\t\t_matrix.elements[ 11 ] = 0;\n\t\t\t\t\t\t_matrix.elements[ 15 ] = 1;\n\n\t\t\t\t\t\tstyle = getObjectCSSMatrix( _matrix );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstyle = getObjectCSSMatrix( object.matrixWorld );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst element = object.element;\n\t\t\t\t\tconst cachedObject = cache.objects.get( object );\n\n\t\t\t\t\tif ( cachedObject === undefined || cachedObject.style !== style ) {\n\n\t\t\t\t\t\telement.style.transform = style;\n\n\t\t\t\t\t\tconst objectData = { style: style };\n\t\t\t\t\t\tcache.objects.set( object, objectData );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( element.parentNode !== cameraElement ) {\n\n\t\t\t\t\t\tcameraElement.appendChild( element );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobject.onAfterRender( _this, scene, camera );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = object.children.length; i < l; i ++ ) {\n\n\t\t\t\trenderObject( object.children[ i ], scene, camera, cameraCSSMatrix );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nexport { CSS3DObject, CSS3DSprite, CSS3DRenderer };\n","import {\n  BackSide, BufferGeometry, FrontSide, Material,\n  Mesh, MeshBasicMaterial, NoBlending, Object3D, ShadowMaterial\n} from 'three'\nimport { CSS3DObject } from 'three/examples/jsm/renderers/CSS3DRenderer.js'\n\nimport { flipFaces } from '../utils/geometry'\n\nexport function createMaterial(transparent: boolean) {\n  return new ShadowMaterial({\n    transparent: true,\n    opacity: transparent ? 0.5 : 0.7,\n    blending: NoBlending,\n    side: FrontSide\n  })\n}\n\nexport function createBackMaterial() {\n  return new MeshBasicMaterial({\n    color: 0x6e88ff,\n    side: BackSide\n  })\n}\n\nexport type ObjectHTMLMaterials = {\n  front?: Material\n  back?: Material\n}\n\nexport class ObjectHTML extends Object3D {\n  css3dObject: CSS3DObject\n  front: Mesh\n  back: Mesh\n\n  constructor(element: HTMLElement) {\n    super()\n    this.css3dObject = new CSS3DObject(element)\n    this.css3dObject.onAfterRender = () => {\n      const internalTranslate = ' translate(50%, 50%)'\n\n      if (!element.style.transform.endsWith(internalTranslate)) {\n        element.style.transform += internalTranslate\n      }\n    }\n    this.add(this.css3dObject)\n\n    const front = new Mesh()\n\n    this.front = front\n    this.add(front)\n\n    const back = new Mesh()\n\n    back.castShadow = true\n    this.back = back\n    this.add(back)\n\n    this.updateMaterials()\n  }\n\n  updateGeometry(geometry?: BufferGeometry) {\n    const scaled = geometry?.clone().scale(1, -1, 1)\n\n    if (scaled) flipFaces(scaled)\n\n    if (this.front) this.front.geometry = scaled || new BufferGeometry()\n    if (this.back) this.back.geometry = scaled || new BufferGeometry()\n  }\n\n  updateMaterials(materials?: ObjectHTMLMaterials) {\n    if (this.front) this.front.material = materials?.front || createMaterial(false)\n    if (this.back) this.back.material = materials?.back || createBackMaterial()\n  }\n}\n\nexport function findTop(objects: ObjectHTML[]) {\n  objects.sort((a, b) => {\n    if (!a.css3dObject || !b.css3dObject) return 0\n    const position = a.css3dObject.element.compareDocumentPosition(b.css3dObject.element)\n\n    if (position & Node.DOCUMENT_POSITION_FOLLOWING) {\n      return 1\n    } else if (position & Node.DOCUMENT_POSITION_PRECEDING) {\n      return -1\n    }\n    return 0\n  })\n\n  return objects[0]\n}\n","import { BufferGeometry } from 'three'\n\nexport function flipFaces(geometry: BufferGeometry) {\n  const index = geometry.getIndex()\n\n  if (index) {\n    const numTriangles = index.count / 3\n\n    for (let i = 0; i < numTriangles; i++) {\n      const a = index.getX(i * 3 + 2)\n      const b = index.getX(i * 3 + 1)\n      const c = index.getX(i * 3)\n\n      index.setXYZ(i * 3, a, b, c)\n    }\n  }\n}\n","import { BufferGeometry } from 'three'\n\nimport { HybridScene } from './scene'\nimport { ObjectHTML, ObjectHTMLMaterials } from './scene/ObjectHTML'\n\n/**\n * Responsible for managing 2D content in the plane of 3D scene for a current editor\n */\nexport class Content<Scope> {\n  public holder: HTMLElement\n  public objects = new WeakMap<HTMLElement, ObjectHTML>()\n\n  constructor(private scene: HybridScene<Scope>, private scope: Scope, private reordered: (target: HTMLElement) => Promise<unknown>) {\n    const css3dContainer = scene.renderer.css3d.domElement.firstElementChild?.firstElementChild\n\n    if (!css3dContainer || !(css3dContainer instanceof HTMLElement)) {\n      throw new Error('cannot find container for css3d element')\n    }\n\n    this.holder = css3dContainer\n  }\n\n  public getPointerFrom(event: MouseEvent) {\n    const { left, top } = this.holder.getBoundingClientRect()\n    const x = event.clientX - left\n    const y = event.clientY - top\n\n    return { x, y }\n  }\n\n  /**\n   * Add an HTML element to the 3D scene\n   * @param element HTML element\n   */\n  add(element: HTMLElement, object = new ObjectHTML(element)) {\n    this.objects.set(element, object)\n    this.holder.appendChild(element)\n    this.scene.add(object, this.scope)\n  }\n\n  /**\n   * Reorder the given element in the 3D scene\n   * @param target HTML element to reorder\n   * @param next HTML element to insert before\n   * @throws if `target` or `next` are not in the scene\n   */\n  // eslint-disable-next-line no-undef\n  async reorder(target: HTMLElement, next: ChildNode | null) {\n    if (!this.holder.contains(target)) {\n      throw new Error(`content doesn't have 'target' for reordering`)\n    }\n    if (next !== null && !this.holder.contains(next)) {\n      throw new Error(`content doesn't have 'next' for reordering`)\n    }\n\n    this.holder.insertBefore(target, next)\n    await this.reordered(target)\n  }\n\n  /**\n   * Remove an HTML element from the 3D scene\n   * @param element HTML element\n   */\n  remove(element: HTMLElement) {\n    const object = this.objects.get(element)\n\n    if (object) {\n      this.objects.delete(element)\n      this.scene.remove(object, this.scope)\n    }\n  }\n\n  /**\n   * Update the form (geometry) of the given element\n   */\n  updateGeometry(element: HTMLElement, geometry?: BufferGeometry | ((old?: BufferGeometry) => BufferGeometry | undefined)) {\n    const object = this.objects.get(element)\n\n    if (object) {\n      object.updateGeometry(typeof geometry === 'function' ? geometry(object.front.geometry) : geometry)\n    }\n  }\n\n  /**\n   * Update the material of the given element\n   */\n  updateMaterials(element: HTMLElement, materials?: ObjectHTMLMaterials) {\n    const object = this.objects.get(element)\n\n    if (object) object.updateMaterials(materials)\n  }\n}\n","import {\n  Camera, EventDispatcher, Intersection, Matrix4,\n  Object3D, Plane, Raycaster, Vector2, Vector3\n} from 'three'\n\nimport { findTop, ObjectHTML } from '../ObjectHTML'\n\ntype DefaultObject3D = Object3D\nexport type DragStartEvent = { type: 'dragstart', object: DefaultObject3D }\nexport type DragEvent = { type: 'drag', object: DefaultObject3D, position: Vector3 }\nexport type DragEndEvent = { type: 'dragend', object: DefaultObject3D }\n\nconst raycaster = new Raycaster()\n\n// EventDispatcher should have default generic for three 152-156 compatibility\nclass DragControls extends EventDispatcher {\n  enabled = true\n  intersections: Intersection<ObjectHTML>[] = []\n  selected: Object3D | null = null\n  hovered: Object3D | null = null\n  objects = new Set<DefaultObject3D>()\n\n  private pointer = new Vector2()\n  private offset = new Vector3()\n  private intersection = new Vector3()\n  private worldPosition = new Vector3()\n  private inverseMatrix = new Matrix4()\n\n  constructor(private camera: Camera, private domElement: HTMLElement, private getPlane: (object: Object3D) => Plane) {\n    super()\n\n    this.domElement.style.touchAction = 'none' // disable touch scroll\n    this.activate()\n  }\n\n  attach(object: Object3D) {\n    this.objects.add(object)\n  }\n\n  detach(object: Object3D) {\n    this.objects.delete(object)\n  }\n\n  activate() {\n    this.domElement.addEventListener('pointermove', this.onPointerMove)\n    this.domElement.addEventListener('pointerdown', this.onPointerDown)\n    this.domElement.addEventListener('pointerup', this.onPointerCancel)\n    this.domElement.addEventListener('pointerleave', this.onPointerCancel)\n  }\n\n  deactivate() {\n    this.domElement.removeEventListener('pointermove', this.onPointerMove)\n    this.domElement.removeEventListener('pointerdown', this.onPointerDown)\n    this.domElement.removeEventListener('pointerup', this.onPointerCancel)\n    this.domElement.removeEventListener('pointerleave', this.onPointerCancel)\n\n    this.domElement.style.cursor = ''\n  }\n\n  dispose() {\n    this.deactivate()\n  }\n\n  getObjects(): Object3D[] {\n    return Array.from(this.objects.values())\n  }\n\n  getRaycaster() {\n    return raycaster\n  }\n\n  onPointerMove = (event: PointerEvent) => {\n    if (this.enabled === false) return\n\n    this.updatePointer(event)\n\n    raycaster.setFromCamera(this.pointer, this.camera)\n\n    if (this.selected) {\n      if (raycaster.ray.intersectPlane(this.getPlane(this.selected), this.intersection)) {\n        const newPosition = this.intersection.sub(this.offset).applyMatrix4(this.inverseMatrix)\n\n        const eventData: DragEvent = { type: 'drag', object: this.selected, position: newPosition }\n\n        this.dispatchEvent(eventData as never)\n      }\n    }\n  }\n\n  findContainer(intersection: Intersection<ObjectHTML>) {\n    let object: ObjectHTML | null = null\n    const objects = this.getObjects()\n\n    intersection.object.traverseAncestors(intersectedObject => {\n      if (objects.includes(intersectedObject) && intersectedObject instanceof ObjectHTML) object = intersectedObject\n    })\n    if (!object) throw new Error('cannot find Object3D')\n\n    return object\n  }\n\n  findIntersectedObject(intersections: Intersection<ObjectHTML>[]) {\n    return findTop(intersections.map(i => this.findContainer(i)))\n  }\n\n  onPointerDown = (event: MouseEvent) => {\n    if (this.enabled === false) return\n\n    this.updatePointer(event)\n\n    this.intersections.length = 0\n\n    raycaster.setFromCamera(this.pointer, this.camera)\n    this.intersections = raycaster.intersectObjects(this.getObjects(), true)\n\n    if (this.intersections.length > 0) {\n      this.selected = this.findIntersectedObject(this.intersections) || null\n\n      if (!this.selected) return\n      if (!this.selected.parent) throw new Error('parent required for selected object')\n\n      if (raycaster.ray.intersectPlane(this.getPlane(this.selected), this.intersection)) {\n        this.inverseMatrix.copy(this.selected.parent.matrixWorld).invert()\n        this.offset.copy(this.intersection).sub(this.worldPosition.setFromMatrixPosition(this.selected.matrixWorld))\n      }\n\n      event.stopPropagation()\n      this.domElement.style.cursor = 'move'\n\n      const eventData: DragStartEvent = { type: 'dragstart', object: this.selected }\n\n      this.dispatchEvent(eventData as never)\n    }\n  }\n\n  onPointerCancel = () => {\n    if (this.enabled === false) return\n\n    if (this.selected) {\n      const eventData: DragEndEvent = { type: 'dragend', object: this.selected }\n\n      this.dispatchEvent(eventData as never)\n\n      this.selected = null\n    }\n\n    this.domElement.style.cursor = this.hovered ? 'pointer' : 'auto'\n  }\n\n  updatePointer = (event: MouseEvent) => {\n    const rect = this.domElement.getBoundingClientRect()\n\n    this.pointer.x = (event.clientX - rect.left) / rect.width * 2 - 1\n    this.pointer.y = - (event.clientY - rect.top) / rect.height * 2 + 1\n  }\n}\n\nexport { DragControls }\n","import { ObjectHTML } from '../ObjectHTML'\n\nexport class DraggableObject3D extends ObjectHTML {\n  constructor(element: HTMLElement, public events: {\n    start: () => void,\n    translate: (x: number, y: number, z: number) => void,\n    drag: () => void\n  }) {\n    super(element)\n  }\n}\n","import { Camera, PCFSoftShadowMap, Scene, WebGLRenderer } from 'three'\nimport { CSS3DRenderer } from 'three/examples/jsm/renderers/CSS3DRenderer.js'\n\n/**\n * HybridRenderer is a wrapper for Three.js CSS3DRenderer and WebGLRenderer.\n */\nexport class HybridRenderer {\n  /** CSS3DRenderer instance created by default */\n  css3d: CSS3DRenderer\n  /** WebGLRenderer instance created by default */\n  webgl: WebGLRenderer\n  domElement: HTMLElement\n\n  constructor() {\n    this.css3d = this.getDefaultCSS3DRenderer()\n    this.webgl = this.getDefaultWebGLRenderer()\n\n    this.domElement = document.createElement('div')\n\n    this.css3d.domElement.setAttribute('data-css3d', 'true')\n\n    fillAbsolute(this.domElement)\n    fillAbsolute(this.css3d.domElement)\n    fillAbsolute(this.webgl.domElement)\n\n    this.domElement.appendChild(this.css3d.domElement)\n    this.domElement.appendChild(this.webgl.domElement)\n\n    this.webgl.domElement.style.pointerEvents = 'none'\n  }\n\n  getContent() {\n    return this.webgl.domElement.firstElementChild\n  }\n\n  private getDefaultCSS3DRenderer() {\n    const css3d = new CSS3DRenderer()\n\n    return css3d\n  }\n\n  private getDefaultWebGLRenderer() {\n    const webgl = new WebGLRenderer({ alpha: false, antialias: true })\n\n    webgl.setPixelRatio(window.devicePixelRatio)\n    webgl.setClearColor(0xffffff, 0)\n    webgl.shadowMap.enabled = true\n    webgl.shadowMap.type = PCFSoftShadowMap\n\n    return webgl\n  }\n\n  setSize(width: number, height: number) {\n    this.css3d.setSize(width, height)\n    this.webgl.setSize(width, height)\n  }\n\n  render(scene: Scene, camera: Camera) {\n    this.css3d.render(scene, camera)\n    this.webgl.render(scene, camera)\n  }\n}\n\nfunction fillAbsolute(el: HTMLElement) {\n  el.style.width = '100%'\n  el.style.height = '100%'\n  el.style.position = 'absolute'\n  el.style.left = '0'\n  el.style.top = '0'\n}\n","import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3,\n\tPlane,\n\tRay,\n\tMathUtils\n} from 'three';\n\n// OrbitControls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\nconst _ray = new Ray();\nconst _plane = new Plane();\nconst TILT_LIMIT = Math.cos( 70 * MathUtils.DEG2RAD );\n\nclass OrbitControls extends EventDispatcher {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper();\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\t\tthis.zoomToCursor = false;\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t//\n\t\t// public methods\n\t\t//\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn spherical.phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn spherical.theta;\n\n\t\t};\n\n\t\tthis.getDistance = function () {\n\n\t\t\treturn this.object.position.distanceTo( this.target );\n\n\t\t};\n\n\t\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = domElement;\n\n\t\t};\n\n\t\tthis.stopListenToKeyEvents = function () {\n\n\t\t\tthis._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = null;\n\n\t\t};\n\n\t\tthis.saveState = function () {\n\n\t\t\tscope.target0.copy( scope.target );\n\t\t\tscope.position0.copy( scope.object.position );\n\t\t\tscope.zoom0 = scope.object.zoom;\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\tscope.update();\n\n\t\t\tstate = STATE.NONE;\n\n\t\t};\n\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\n\t\tthis.update = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tconst quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\t\tconst quatInverse = quat.clone().invert();\n\n\t\t\tconst lastPosition = new Vector3();\n\t\t\tconst lastQuaternion = new Quaternion();\n\t\t\tconst lastTargetPosition = new Vector3();\n\n\t\t\tconst twoPI = 2 * Math.PI;\n\n\t\t\treturn function update( deltaTime = null ) {\n\n\t\t\t\tconst position = scope.object.position;\n\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\trotateLeft( getAutoRotationAngle( deltaTime ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t}\n\n\t\t\t\t// restrict theta to be between desired limits\n\n\t\t\t\tlet min = scope.minAzimuthAngle;\n\t\t\t\tlet max = scope.maxAzimuthAngle;\n\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\t\tspherical.makeSafe();\n\n\n\t\t\t\t// move target to panned location\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\t}\n\n\t\t\t\t// adjust the camera position based on zoom only if we're not zooming to the cursor or if it's an ortho camera\n\t\t\t\t// we adjust zoom later in these cases\n\t\t\t\tif ( scope.zoomToCursor && performCursorZoom || scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\tspherical.radius = clampDistance( spherical.radius );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.radius = clampDistance( spherical.radius * scale );\n\n\t\t\t\t}\n\n\n\t\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\t// adjust camera position\n\t\t\t\tlet zoomChanged = false;\n\t\t\t\tif ( scope.zoomToCursor && performCursorZoom ) {\n\n\t\t\t\t\tlet newRadius = null;\n\t\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t\t// move the camera down the pointer ray\n\t\t\t\t\t\t// this method avoids floating point error\n\t\t\t\t\t\tconst prevRadius = offset.length();\n\t\t\t\t\t\tnewRadius = clampDistance( prevRadius * scale );\n\n\t\t\t\t\t\tconst radiusDelta = prevRadius - newRadius;\n\t\t\t\t\t\tscope.object.position.addScaledVector( dollyDirection, radiusDelta );\n\t\t\t\t\t\tscope.object.updateMatrixWorld();\n\n\t\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t\t// adjust the ortho camera position based on zoom changes\n\t\t\t\t\t\tconst mouseBefore = new Vector3( mouse.x, mouse.y, 0 );\n\t\t\t\t\t\tmouseBefore.unproject( scope.object );\n\n\t\t\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / scale ) );\n\t\t\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\t\t\tzoomChanged = true;\n\n\t\t\t\t\t\tconst mouseAfter = new Vector3( mouse.x, mouse.y, 0 );\n\t\t\t\t\t\tmouseAfter.unproject( scope.object );\n\n\t\t\t\t\t\tscope.object.position.sub( mouseAfter ).add( mouseBefore );\n\t\t\t\t\t\tscope.object.updateMatrixWorld();\n\n\t\t\t\t\t\tnewRadius = offset.length();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled.' );\n\t\t\t\t\t\tscope.zoomToCursor = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// handle the placement of the target\n\t\t\t\t\tif ( newRadius !== null ) {\n\n\t\t\t\t\t\tif ( this.screenSpacePanning ) {\n\n\t\t\t\t\t\t\t// position the orbit target in front of the new camera position\n\t\t\t\t\t\t\tscope.target.set( 0, 0, - 1 )\n\t\t\t\t\t\t\t\t.transformDirection( scope.object.matrix )\n\t\t\t\t\t\t\t\t.multiplyScalar( newRadius )\n\t\t\t\t\t\t\t\t.add( scope.object.position );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// get the ray and translation plane to compute target\n\t\t\t\t\t\t\t_ray.origin.copy( scope.object.position );\n\t\t\t\t\t\t\t_ray.direction.set( 0, 0, - 1 ).transformDirection( scope.object.matrix );\n\n\t\t\t\t\t\t\t// if the camera is 20 degrees above the horizon then don't adjust the focus target to avoid\n\t\t\t\t\t\t\t// extremely large values\n\t\t\t\t\t\t\tif ( Math.abs( scope.object.up.dot( _ray.direction ) ) < TILT_LIMIT ) {\n\n\t\t\t\t\t\t\t\tobject.lookAt( scope.target );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t_plane.setFromNormalAndCoplanarPoint( scope.object.up, scope.target );\n\t\t\t\t\t\t\t\t_ray.intersectPlane( _plane, scope.target );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / scale ) );\n\t\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\t\tzoomChanged = true;\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\t\t\t\tperformCursorZoom = false;\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ||\n\t\t\t\t\tlastTargetPosition.distanceToSquared( scope.target ) > 0 ) {\n\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tlastTargetPosition.copy( scope.target );\n\n\t\t\t\t\tzoomChanged = false;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function () {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\tscope.domElement.removeEventListener( 'pointercancel', onPointerUp );\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\t\t\t\tscope._domElementKeyEvents = null;\n\n\t\t\t}\n\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t};\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tconst scope = this;\n\n\t\tconst STATE = {\n\t\t\tNONE: - 1,\n\t\t\tROTATE: 0,\n\t\t\tDOLLY: 1,\n\t\t\tPAN: 2,\n\t\t\tTOUCH_ROTATE: 3,\n\t\t\tTOUCH_PAN: 4,\n\t\t\tTOUCH_DOLLY_PAN: 5,\n\t\t\tTOUCH_DOLLY_ROTATE: 6\n\t\t};\n\n\t\tlet state = STATE.NONE;\n\n\t\tconst EPS = 0.000001;\n\n\t\t// current position in spherical coordinates\n\t\tconst spherical = new Spherical();\n\t\tconst sphericalDelta = new Spherical();\n\n\t\tlet scale = 1;\n\t\tconst panOffset = new Vector3();\n\n\t\tconst rotateStart = new Vector2();\n\t\tconst rotateEnd = new Vector2();\n\t\tconst rotateDelta = new Vector2();\n\n\t\tconst panStart = new Vector2();\n\t\tconst panEnd = new Vector2();\n\t\tconst panDelta = new Vector2();\n\n\t\tconst dollyStart = new Vector2();\n\t\tconst dollyEnd = new Vector2();\n\t\tconst dollyDelta = new Vector2();\n\n\t\tconst dollyDirection = new Vector3();\n\t\tconst mouse = new Vector2();\n\t\tlet performCursorZoom = false;\n\n\t\tconst pointers = [];\n\t\tconst pointerPositions = {};\n\n\t\tfunction getAutoRotationAngle( deltaTime ) {\n\n\t\t\tif ( deltaTime !== null ) {\n\n\t\t\t\treturn ( 2 * Math.PI / 60 * scope.autoRotateSpeed ) * deltaTime;\n\n\t\t\t} else {\n\n\t\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction rotateLeft( angle ) {\n\n\t\t\tsphericalDelta.theta -= angle;\n\n\t\t}\n\n\t\tfunction rotateUp( angle ) {\n\n\t\t\tsphericalDelta.phi -= angle;\n\n\t\t}\n\n\t\tconst panLeft = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tconst panUp = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t\t}\n\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// deltaX and deltaY are in pixels; right and down are positive\n\t\tconst pan = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\t\tconst element = scope.domElement;\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t// perspective\n\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\tlet targetDistance = offset.length();\n\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t// orthographic\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}();\n\n\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera || scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera || scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateMouseParameters( event ) {\n\n\t\t\tif ( ! scope.zoomToCursor ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tperformCursorZoom = true;\n\n\t\t\tconst rect = scope.domElement.getBoundingClientRect();\n\t\t\tconst x = event.clientX - rect.left;\n\t\t\tconst y = event.clientY - rect.top;\n\t\t\tconst w = rect.width;\n\t\t\tconst h = rect.height;\n\n\t\t\tmouse.x = ( x / w ) * 2 - 1;\n\t\t\tmouse.y = - ( y / h ) * 2 + 1;\n\n\t\t\tdollyDirection.set( mouse.x, mouse.y, 1 ).unproject( scope.object ).sub( scope.object.position ).normalize();\n\n\t\t}\n\n\t\tfunction clampDistance( dist ) {\n\n\t\t\treturn Math.max( scope.minDistance, Math.min( scope.maxDistance, dist ) );\n\n\t\t}\n\n\t\t//\n\t\t// event callbacks - update the object state\n\t\t//\n\n\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\tupdateMouseParameters( event );\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseWheel( event ) {\n\n\t\t\tupdateMouseParameters( event );\n\n\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleKeyDown( event ) {\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tswitch ( event.code ) {\n\n\t\t\t\tcase scope.keys.UP:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateUp( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateUp( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateLeft( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateLeft( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction handleTouchStartRotate() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\trotateStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\trotateStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartPan() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\tpanStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartDolly() {\n\n\t\t\tconst dx = pointers[ 0 ].pageX - pointers[ 1 ].pageX;\n\t\t\tconst dy = pointers[ 0 ].pageY - pointers[ 1 ].pageY;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyPan() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enablePan ) handleTouchStartPan();\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyRotate() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate();\n\n\t\t}\n\n\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\tif ( pointers.length == 1 ) {\n\n\t\t\t\trotateEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\trotateEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\tpanEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\tconst dx = event.pageX - position.x;\n\t\t\tconst dy = event.pageY - position.y;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyOut( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t\t}\n\n\t\t//\n\t\t// event handlers - FSM: listen for events and reset state\n\t\t//\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.setPointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.addEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\taddPointer( event );\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchStart( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseDown( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchMove( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseMove( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerUp( event ) {\n\n\t\t\tremovePointer( event );\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.releasePointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tlet mouseAction;\n\n\t\t\tswitch ( event.button ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tmouseAction = - 1;\n\n\t\t\t}\n\n\t\t\tswitch ( mouseAction ) {\n\n\t\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.PAN:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\thandleMouseWheel( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\t\thandleKeyDown( event );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( pointers.length ) {\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onContextMenu( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\tfunction addPointer( event ) {\n\n\t\t\tpointers.push( event );\n\n\t\t}\n\n\t\tfunction removePointer( event ) {\n\n\t\t\tdelete pointerPositions[ event.pointerId ];\n\n\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\n\n\t\t\t\tif ( pointers[ i ].pointerId == event.pointerId ) {\n\n\t\t\t\t\tpointers.splice( i, 1 );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction trackPointer( event ) {\n\n\t\t\tlet position = pointerPositions[ event.pointerId ];\n\n\t\t\tif ( position === undefined ) {\n\n\t\t\t\tposition = new Vector2();\n\t\t\t\tpointerPositions[ event.pointerId ] = position;\n\n\t\t\t}\n\n\t\t\tposition.set( event.pageX, event.pageY );\n\n\t\t}\n\n\t\tfunction getSecondPointerPosition( event ) {\n\n\t\t\tconst pointer = ( event.pointerId === pointers[ 0 ].pointerId ) ? pointers[ 1 ] : pointers[ 0 ];\n\n\t\t\treturn pointerPositions[ pointer.pointerId ];\n\n\t\t}\n\n\t\t//\n\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.addEventListener( 'pointercancel', onPointerUp );\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\n\n\t\t// force an update at start\n\n\t\tthis.update();\n\n\t}\n\n}\n\nexport { OrbitControls };\n","import {\n  Object3D, PerspectiveCamera, Plane,\n  Raycaster, Scene, Vector2, Vector3\n} from 'three'\n\nimport { attachDraggableHooks, DragControls, DraggableObject3D } from './Drag'\nimport { HybridRenderer } from './HybridRenderer'\nimport { OrbitControls } from './OrbitControls'\n\nexport { DraggableObject3D }\n\ntype DefaultObject3D = Object3D\n\n/**\n * HybridScene is a wrapper for Three.js Scene with some additional features such as:\n * - drag controls\n * - orbit controls\n * - camera\n * - renderer\n */\nexport class HybridScene<Scope> {\n  camera: PerspectiveCamera\n  renderer: HybridRenderer\n  root = new Scene()\n  canvases = new Map<Scope, DefaultObject3D>()\n  controls: DragControls\n  orbit: OrbitControls\n\n  constructor(private container: HTMLElement) {\n    this.camera = new PerspectiveCamera()\n    this.camera.position.set(0, 0, 1000)\n    this.camera.fov = 45\n    this.camera.near = 1\n    this.camera.far = 4000\n\n    this.renderer = new HybridRenderer()\n\n    container.appendChild(this.renderer.domElement)\n\n    this.orbit = this.createOrbitControls()\n    this.controls = this.createDragControls(this.orbit)\n  }\n\n  private createOrbitControls() {\n    const orbit = new OrbitControls(this.camera, this.renderer.domElement)\n\n    orbit.update()\n\n    let orbitChangeNumber = 0\n\n    orbit.addEventListener('start', () => {\n      orbitChangeNumber = 0\n    })\n\n    orbit.addEventListener('change', () => {\n      orbitChangeNumber++\n    })\n\n    this.renderer.domElement.addEventListener('contextmenu', e => {\n      if (orbitChangeNumber > 5) e.stopPropagation()\n    })\n\n    return orbit\n  }\n\n  private createDragControls(orbit: OrbitControls) {\n    const controls = new DragControls(\n      this.camera,\n      this.renderer.domElement,\n      (object) => {\n        const canvas = object.parent\n\n        if (!canvas) throw new Error('object doesnt have parent')\n        if (!Array.from(this.canvases.values()).includes(canvas)) throw new Error('object parent isnt canvas')\n\n        return this.canvasToPlane(canvas)\n      }\n    )\n\n    attachDraggableHooks(controls)\n\n    controls.addEventListener('dragstart', () => orbit.enabled = false)\n    controls.addEventListener('dragend', () => orbit.enabled = true)\n\n    return controls\n  }\n\n  canvasToPlane(canvas: Object3D) {\n    const plane = new Plane()\n    const normal = new Vector3(0, 0, 1)\n\n    normal.applyQuaternion(canvas.quaternion)\n    plane.setFromNormalAndCoplanarPoint(normal, canvas.position.clone())\n\n    return plane\n  }\n\n  addCanvasFor(scope: Scope) {\n    const canvas = new Object3D()\n\n    canvas.scale.set(1, -1, 1)\n    this.canvases.set(scope, canvas)\n    this.root.add(canvas)\n  }\n\n  resize(width: number, height: number) {\n    this.camera.aspect = width / height\n    this.camera.updateProjectionMatrix()\n    this.renderer.setSize(width, height)\n  }\n\n  /**\n   * Render the frame. Can be directly used instead of `animate` extension.\n   */\n  public render() {\n    this.renderer.render(this.root, this.camera)\n  }\n\n  private getCanvasFor(scope: Scope) {\n    const canvas = this.canvases.get(scope)\n\n    if (!canvas) throw new Error('cannot find canvas for the scope')\n\n    return canvas\n  }\n\n  add(object: Object3D, scope: Scope) {\n    object.scale.set(1, -1, 1)\n    this.getCanvasFor(scope).add(object)\n    if (object instanceof DraggableObject3D) this.controls.attach(object)\n    this.render() // force DOM elements to be rendered synchronously\n  }\n\n  remove(object: Object3D, scope: Scope) {\n    this.getCanvasFor(scope).remove(object)\n    if (object instanceof DraggableObject3D) this.controls.detach(object)\n    this.render() // force DOM elements to be rendered synchronously\n  }\n\n  public getPointerFrom(event: MouseEvent, scope: Scope) {\n    const rect = this.container.getBoundingClientRect()\n    const raycaster = new Raycaster()\n    const pointer = new Vector2(\n      (event.clientX - rect.left) / rect.width * 2 - 1,\n      - (event.clientY - rect.top) / rect.height * 2 + 1\n    )\n\n    raycaster.setFromCamera(pointer, this.camera)\n\n    const canvas = this.getCanvasFor(scope)\n    const plane = this.canvasToPlane(canvas)\n\n    const intersection = raycaster.ray.intersectPlane(plane, new Vector3())\n\n    if (intersection) {\n      return canvas.worldToLocal(intersection)\n    }\n    return null\n  }\n}\n","import { DragControls, DragStartEvent, DragEvent, DragEndEvent } from './DragControls'\nimport { DraggableObject3D } from './DraggableObject3D'\n\nexport { DragControls, DraggableObject3D }\n\nexport function attachDraggableHooks(controls: DragControls) {\n  controls.addEventListener('dragstart', (e: any) => {\n    const event = e as DragStartEvent\n\n    if (event.object instanceof DraggableObject3D) {\n      event.object.events.start()\n    }\n  })\n  controls.addEventListener('drag', (e: any) => {\n    const event = e as DragEvent\n\n    if (event.object instanceof DraggableObject3D) {\n      const { x, y, z } = event.position\n\n      event.object.events.translate(x, y, z)\n    }\n  })\n  controls.addEventListener('dragend', (e: any) => {\n    const event = e as DragEndEvent\n\n    if (event.object instanceof DraggableObject3D) {\n      event.object.events.drag()\n    }\n  })\n}\n","import { Object3D } from 'three'\nimport { Content } from './content'\nimport { HybridScene } from './scene'\nimport { orbitControlsRestrictor } from './scene/OrbitControls'\nimport { Position, Vector3D } from './types'\n\nexport type Transform = { position: Vector3D, rotation: Vector3D }\nexport type TransformEventParams = { previous: Transform | undefined, current: Transform }\n\ntype Events = {\n  pointerDown: (position: Position, event: PointerEvent) => void\n  pointerMove: (position: Position, event: PointerEvent) => void\n  pointerUp: (position: Position, event: PointerEvent) => void\n  resize: (event: Event) => void\n  transformed: (params: TransformEventParams) => Promise<unknown>\n  reordered: (element: HTMLElement) => Promise<unknown>\n}\ntype Guards = {\n  transform: (params: TransformEventParams) => Promise<unknown | boolean>\n}\n\n/**\n * Area class is responsible for managing 3D scene for a current editor\n */\nexport class Area<Scope> {\n  scene: HybridScene<Scope>\n  pointer: Position = { x: 0, y: 0 }\n\n  content: Content<Scope>\n\n  constructor(private container: HTMLElement, scene: HybridScene<Scope> | null, private scope: Scope, private events: Events, private guards: Guards) {\n    this.scene = scene || new HybridScene(this.container)\n    this.content = new Content(this.scene, scope, element => this.events.reordered(element))\n\n    this.container.addEventListener('pointerdown', this.pointerdown)\n    this.container.addEventListener('pointermove', this.pointermove)\n    window.addEventListener('pointerup', this.pointerup)\n    window.addEventListener('resize', this.resize)\n\n    orbitControlsRestrictor(\n      this.scene.orbit,\n      this.scene.camera,\n      (current, previous) => this.guards.transform({ previous, current }),\n      (current, previous) => this.events.transformed({ previous, current })\n    )\n\n    this.scene.resize(this.container.clientWidth, this.container.clientHeight)\n  }\n\n  /**\n   * Get the canvas in form of Object3D for the current scope\n   */\n  public getCanvas(): Object3D | undefined {\n    return this.scene.canvases.get(this.scope)\n  }\n\n  /**\n   * Set the pointer position from the given mouse event into the `pointer` property\n   */\n  public setPointerFrom(event: MouseEvent) {\n    const point = this.scene.getPointerFrom(event, this.scope)\n\n    if (point) {\n      this.pointer = {\n        x: point.x,\n        y: point.y\n      }\n    }\n  }\n\n  private pointerdown = (event: PointerEvent) => {\n    this.setPointerFrom(event)\n    this.events.pointerDown(this.pointer, event)\n  }\n\n  private pointermove = (event: PointerEvent) => {\n    this.setPointerFrom(event)\n    this.events.pointerMove(this.pointer, event)\n  }\n\n  private pointerup = (event: PointerEvent) => {\n    this.setPointerFrom(event)\n    this.events.pointerUp(this.pointer, event)\n  }\n\n  /**\n   * Force resize the container of the 3D scene\n   * @param event The resize event\n   */\n  public resize = (event: Event) => {\n    this.events.resize(event)\n    this.scene.resize(this.container.clientWidth, this.container.clientHeight)\n  }\n\n  public destroy() {\n    this.container.removeEventListener('pointerdown', this.pointerdown)\n    this.container.removeEventListener('pointermove', this.pointermove)\n    window.removeEventListener('pointerup', this.pointerup)\n    window.removeEventListener('resize', this.resize)\n  }\n}\n","/* eslint-disable init-declarations */\nimport { Camera, Euler, Vector3 } from 'three'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js'\n\nexport { OrbitControls }\n\nexport type Transform = { position: Vector3, rotation: Euler }\n\ntype Check = (current: Transform, previous: Transform | undefined) => Promise<boolean | unknown>\ntype Updated = (current: Transform, previous: Transform | undefined) => Promise<boolean | unknown>\n\nexport function orbitControlsRestrictor(orbit: OrbitControls, camera: Camera, check: Check, updated: Updated) {\n  let previous: Transform | undefined\n  let previousTarget: Vector3\n\n  // eslint-disable-next-line max-statements\n  orbit.addEventListener('change', async () => {\n    const position = camera.position.clone()\n    const rotation = camera.rotation.clone()\n\n    if (await check({ position, rotation }, previous)) {\n      previous = { position, rotation }\n      previousTarget = orbit.target.clone()\n    } else {\n      if (previous && previousTarget) {\n        const { position: p, rotation: r } = previous\n        const t = previousTarget\n\n        camera.position.fromArray([p.x, p.y, p.z])\n        camera.rotation.fromArray([r.x, r.y, r.z])\n        orbit.target.fromArray([t.x, t.y, t.z])\n      }\n      orbit.update()\n      await updated({ position, rotation }, previous)\n    }\n  })\n}\n","import { ObjectHTML } from './scene/ObjectHTML'\n\ntype Events = {\n  contextmenu: (event: MouseEvent) => void\n}\n\nexport class ConnectionView {\n  element: HTMLElement\n  object: ObjectHTML\n\n  constructor(events: Events) {\n    this.element = document.createElement('div')\n\n    this.element.style.position = 'absolute'\n    this.element.style.left = '0'\n    this.element.style.top = '0'\n    this.element.addEventListener('contextmenu', event => events.contextmenu(event))\n\n    this.object = new ObjectHTML(this.element)\n  }\n\n  // public update(params?: HTML3DOptions) {\n  //   setHTMLElement(this.object, this.element, {\n  //     materials: {\n  //       front: params?.materials?.front || createMaterial(false),\n  //       back: params?.materials?.back || createBackMaterial()\n  //     }\n  //   })\n  // }\n}\n","\nexport class ElementsHolder<E extends HTMLElement, Ctx extends { type: string, element: E, payload?: { id: string } }> {\n  views = new WeakMap<E, Ctx>()\n  viewsElements = new Map<`${string}_${string}`, E>()\n\n  public set(context: Ctx) {\n    const { element, type, payload } = context\n\n    if (payload?.id) {\n      this.views.set(element, context)\n      this.viewsElements.set(`${type}_${payload.id}`, element)\n    }\n  }\n\n  public get(type: string, id: string) {\n    const element = this.viewsElements.get(`${type}_${id}`)\n\n    return element && this.views.get(element)\n  }\n\n  public delete(element: E) {\n    const view = this.views.get(element)\n\n    if (view && view.payload?.id) {\n      this.views.delete(element)\n      this.viewsElements.delete(`${view.type}_${view.payload.id}`)\n    }\n  }\n}\n","import { DraggableObject3D } from './scene'\nimport { ObjectHTML } from './scene/ObjectHTML'\nimport { Position, Size } from './types'\n\nexport type NodeTranslateEventParams = { position: Position, previous: Position }\nexport type NodeResizeEventParams = { size: Size }\n\ntype Events = {\n  picked: () => void\n  translated: (params: NodeTranslateEventParams) => Promise<unknown | boolean>\n  dragged: () => void\n  contextmenu: (event: MouseEvent) => void\n  resized: (params: NodeResizeEventParams) => Promise<unknown | boolean>\n}\ntype Guards = {\n  resize: (params: NodeResizeEventParams) => Promise<unknown | boolean>\n  translate: (params: NodeTranslateEventParams) => Promise<unknown | boolean>\n}\n\nexport class NodeView {\n  element: HTMLElement\n  object: ObjectHTML\n  position: Position\n\n  constructor(private events: Events, private guards: Guards) {\n    this.element = document.createElement('div')\n    this.element.style.position = 'absolute'\n    this.position = { x: 0, y: 0 }\n    this.translate(0, 0)\n\n    this.element.addEventListener('contextmenu', event => this.events.contextmenu(event))\n\n    this.object = new DraggableObject3D(this.element, {\n      start: this.events.picked,\n      translate: this.translate,\n      drag: this.events.dragged\n    })\n  }\n\n  public translate = async (x: number, y: number) => {\n    type Params = undefined | { data: NodeTranslateEventParams }\n    const previous = { ...this.position }\n    const translation = await this.guards.translate({ previous, position: { x, y } }) as Params\n\n    if (!translation) return false\n\n    this.position = { ...translation.data.position }\n    this.object.position.set(this.position.x, this.position.y, this.object.position.z)\n\n    await this.events.translated({ position: this.position, previous })\n\n    return true\n  }\n\n  public resize = async (width: number, height: number) => {\n    const size = { width, height }\n\n    if (!(await this.guards.resize({ size }))) return false\n\n    const el = this.element.children.item(0)\n\n    if (!el || !(el instanceof HTMLElement)) return false\n\n    el.style.width = `${width}px`\n    el.style.height = `${height}px`\n\n    await this.events.resized({ size })\n\n    return true\n  }\n\n  public destroy() {\n    null\n  }\n}\n","import { Shape } from 'three'\n\n// eslint-disable-next-line max-statements\nexport function getRoundedShape(width: number, height: number, radius: number) {\n  const shape = new Shape()\n  const x = 0\n  const y = 0\n\n  shape.moveTo(x + radius, y)\n  shape.lineTo(x + width - radius, y)\n  shape.quadraticCurveTo(x + width, y, x + width, y + radius)\n  shape.lineTo(x + width, y + height - radius)\n  shape.quadraticCurveTo(x + width, y + height, x + width - radius, y + height)\n  shape.lineTo(x + radius, y + height)\n  shape.quadraticCurveTo(x, y + height, x, y + height - radius)\n  shape.lineTo(x, y + radius)\n  shape.quadraticCurveTo(x, y, x + radius, y)\n  shape.closePath()\n\n  return shape\n}\n","import { ConnectionId, NodeId, Scope, ScopeAsParameter } from 'rete'\nimport { BufferGeometry, ShapeGeometry } from 'three'\n\nimport { Area3DPlugin } from '../..'\nimport { ExpectSchemes, Position } from '../../types'\nimport { getRoundedShape } from '../../utils/shapes'\n\nexport type Pin = {\n  id: string\n  position: Position\n  selected?: boolean\n}\nexport type PinData = {\n  id: ConnectionId\n  pins: Pin[]\n}\n\ntype Comment = {\n  element: HTMLElement\n  id: string\n  width: number\n  height: number\n  x: number\n  y: number\n}\n\ntype Requires =\n  | { type: 'commentcreated', data: Comment }\n  | { type: 'commentremoved', data: Comment }\n  | { type: 'editcomment', data: Comment }\n  | { type: 'commentselected', data: Comment }\n  | { type: 'commentunselected', data: Comment }\n  | { type: 'commenttranslated', data: { id: Comment['id'], dx: number, dy: number, sources?: NodeId[] } }\n  | { type: 'commentlinktranslate', data: { id: Comment['id'], link: string } }\n\n/**\n * Form generator for embedding rete-comment-plugin into 3D scene.\n * @param scope Area3DPlugin instance\n */\nexport function comment<S extends ExpectSchemes, K>(scope: ScopeAsParameter<Scope<K, any[]>, [Requires]>) {\n  const commentScope = scope as unknown as Scope<Requires> & {\n    comments: Map<string, Comment>\n  }\n  const area = commentScope.parentScope<Area3DPlugin<S, any>>(Area3DPlugin)\n\n  commentScope.addPipe(context => {\n    if (context.type === 'commentcreated') {\n      updateCommentGeometry(area, context.data)\n    }\n    if (context.type === 'commenttranslated') {\n      const { id } = context.data\n      const c = commentScope.comments.get(id)\n\n      if (c) {\n        updateCommentGeometry(area, c)\n      }\n    }\n    return context\n  })\n}\n\ntype CommentGeometry = BufferGeometry & {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  __commentGeometry?: {\n    width: number\n    height: number\n    x: number\n    y: number\n  }\n}\n\nfunction commentGeometry(width: number, height: number, x: number, y: number) {\n  const shape = getRoundedShape(width, height, 18)\n  const geometry = new ShapeGeometry(shape) as CommentGeometry\n\n  geometry.__commentGeometry = {\n    width,\n    height,\n    x,\n    y\n  }\n\n  geometry.translate(x, y, 0)\n\n  return geometry\n}\n\nfunction updateCommentGeometry(area: Area3DPlugin<ExpectSchemes, any>, c: Comment) {\n  area.area.content.updateGeometry(c.element, existing => {\n    const meta = (existing as CommentGeometry)?.__commentGeometry\n\n    if (meta) {\n      if (meta.width !== c.width || meta.height !== c.height) {\n        return commentGeometry(c.width, c.height, c.x, c.y)\n      }\n      if (meta.x !== c.x || meta.y !== c.y) {\n        return existing?.translate(c.x - meta.x, c.y - meta.y, 0)\n      }\n    }\n    return commentGeometry(c.width, c.height, c.x, c.y)\n  })\n}\n","\nmodule.exports = parse\n\n/**\n * expected argument lengths\n * @type {Object}\n */\n\nvar length = {a: 7, c: 6, h: 1, l: 2, m: 2, q: 4, s: 4, t: 2, v: 1, z: 0}\n\n/**\n * segment pattern\n * @type {RegExp}\n */\n\nvar segment = /([astvzqmhlc])([^astvzqmhlc]*)/ig\n\n/**\n * parse an svg path data string. Generates an Array\n * of commands where each command is an Array of the\n * form `[command, arg1, arg2, ...]`\n *\n * @param {String} path\n * @return {Array}\n */\n\nfunction parse(path) {\n\tvar data = []\n\tpath.replace(segment, function(_, command, args){\n\t\tvar type = command.toLowerCase()\n\t\targs = parseValues(args)\n\n\t\t// overloaded moveTo\n\t\tif (type == 'm' && args.length > 2) {\n\t\t\tdata.push([command].concat(args.splice(0, 2)))\n\t\t\ttype = 'l'\n\t\t\tcommand = command == 'm' ? 'l' : 'L'\n\t\t}\n\n\t\twhile (true) {\n\t\t\tif (args.length == length[type]) {\n\t\t\t\targs.unshift(command)\n\t\t\t\treturn data.push(args)\n\t\t\t}\n\t\t\tif (args.length < length[type]) throw new Error('malformed path data')\n\t\t\tdata.push([command].concat(args.splice(0, length[type])))\n\t\t}\n\t})\n\treturn data\n}\n\nvar number = /-?[0-9]*\\.?[0-9]+(?:e[-+]?\\d+)?/ig\n\nfunction parseValues(args) {\n\tvar numbers = args.match(number)\n\treturn numbers ? numbers.map(Number) : []\n}\n","function clone(point) { //TODO: use gl-vec2 for this\n    return [point[0], point[1]]\n}\n\nfunction vec2(x, y) {\n    return [x, y]\n}\n\nmodule.exports = function createBezierBuilder(opt) {\n    opt = opt||{}\n\n    var RECURSION_LIMIT = typeof opt.recursion === 'number' ? opt.recursion : 8\n    var FLT_EPSILON = typeof opt.epsilon === 'number' ? opt.epsilon : 1.19209290e-7\n    var PATH_DISTANCE_EPSILON = typeof opt.pathEpsilon === 'number' ? opt.pathEpsilon : 1.0\n\n    var curve_angle_tolerance_epsilon = typeof opt.angleEpsilon === 'number' ? opt.angleEpsilon : 0.01\n    var m_angle_tolerance = opt.angleTolerance || 0\n    var m_cusp_limit = opt.cuspLimit || 0\n\n    return function bezierCurve(start, c1, c2, end, scale, points) {\n        if (!points)\n            points = []\n\n        scale = typeof scale === 'number' ? scale : 1.0\n        var distanceTolerance = PATH_DISTANCE_EPSILON / scale\n        distanceTolerance *= distanceTolerance\n        begin(start, c1, c2, end, points, distanceTolerance)\n        return points\n    }\n\n\n    ////// Based on:\n    ////// https://github.com/pelson/antigrain/blob/master/agg-2.4/src/agg_curves.cpp\n\n    function begin(start, c1, c2, end, points, distanceTolerance) {\n        points.push(clone(start))\n        var x1 = start[0],\n            y1 = start[1],\n            x2 = c1[0],\n            y2 = c1[1],\n            x3 = c2[0],\n            y3 = c2[1],\n            x4 = end[0],\n            y4 = end[1]\n        recursive(x1, y1, x2, y2, x3, y3, x4, y4, points, distanceTolerance, 0)\n        points.push(clone(end))\n    }\n\n    function recursive(x1, y1, x2, y2, x3, y3, x4, y4, points, distanceTolerance, level) {\n        if(level > RECURSION_LIMIT) \n            return\n\n        var pi = Math.PI\n\n        // Calculate all the mid-points of the line segments\n        //----------------------\n        var x12   = (x1 + x2) / 2\n        var y12   = (y1 + y2) / 2\n        var x23   = (x2 + x3) / 2\n        var y23   = (y2 + y3) / 2\n        var x34   = (x3 + x4) / 2\n        var y34   = (y3 + y4) / 2\n        var x123  = (x12 + x23) / 2\n        var y123  = (y12 + y23) / 2\n        var x234  = (x23 + x34) / 2\n        var y234  = (y23 + y34) / 2\n        var x1234 = (x123 + x234) / 2\n        var y1234 = (y123 + y234) / 2\n\n        if(level > 0) { // Enforce subdivision first time\n            // Try to approximate the full cubic curve by a single straight line\n            //------------------\n            var dx = x4-x1\n            var dy = y4-y1\n\n            var d2 = Math.abs((x2 - x4) * dy - (y2 - y4) * dx)\n            var d3 = Math.abs((x3 - x4) * dy - (y3 - y4) * dx)\n\n            var da1, da2\n\n            if(d2 > FLT_EPSILON && d3 > FLT_EPSILON) {\n                // Regular care\n                //-----------------\n                if((d2 + d3)*(d2 + d3) <= distanceTolerance * (dx*dx + dy*dy)) {\n                    // If the curvature doesn't exceed the distanceTolerance value\n                    // we tend to finish subdivisions.\n                    //----------------------\n                    if(m_angle_tolerance < curve_angle_tolerance_epsilon) {\n                        points.push(vec2(x1234, y1234))\n                        return\n                    }\n\n                    // Angle & Cusp Condition\n                    //----------------------\n                    var a23 = Math.atan2(y3 - y2, x3 - x2)\n                    da1 = Math.abs(a23 - Math.atan2(y2 - y1, x2 - x1))\n                    da2 = Math.abs(Math.atan2(y4 - y3, x4 - x3) - a23)\n                    if(da1 >= pi) da1 = 2*pi - da1\n                    if(da2 >= pi) da2 = 2*pi - da2\n\n                    if(da1 + da2 < m_angle_tolerance) {\n                        // Finally we can stop the recursion\n                        //----------------------\n                        points.push(vec2(x1234, y1234))\n                        return\n                    }\n\n                    if(m_cusp_limit !== 0.0) {\n                        if(da1 > m_cusp_limit) {\n                            points.push(vec2(x2, y2))\n                            return\n                        }\n\n                        if(da2 > m_cusp_limit) {\n                            points.push(vec2(x3, y3))\n                            return\n                        }\n                    }\n                }\n            }\n            else {\n                if(d2 > FLT_EPSILON) {\n                    // p1,p3,p4 are collinear, p2 is considerable\n                    //----------------------\n                    if(d2 * d2 <= distanceTolerance * (dx*dx + dy*dy)) {\n                        if(m_angle_tolerance < curve_angle_tolerance_epsilon) {\n                            points.push(vec2(x1234, y1234))\n                            return\n                        }\n\n                        // Angle Condition\n                        //----------------------\n                        da1 = Math.abs(Math.atan2(y3 - y2, x3 - x2) - Math.atan2(y2 - y1, x2 - x1))\n                        if(da1 >= pi) da1 = 2*pi - da1\n\n                        if(da1 < m_angle_tolerance) {\n                            points.push(vec2(x2, y2))\n                            points.push(vec2(x3, y3))\n                            return\n                        }\n\n                        if(m_cusp_limit !== 0.0) {\n                            if(da1 > m_cusp_limit) {\n                                points.push(vec2(x2, y2))\n                                return\n                            }\n                        }\n                    }\n                }\n                else if(d3 > FLT_EPSILON) {\n                    // p1,p2,p4 are collinear, p3 is considerable\n                    //----------------------\n                    if(d3 * d3 <= distanceTolerance * (dx*dx + dy*dy)) {\n                        if(m_angle_tolerance < curve_angle_tolerance_epsilon) {\n                            points.push(vec2(x1234, y1234))\n                            return\n                        }\n\n                        // Angle Condition\n                        //----------------------\n                        da1 = Math.abs(Math.atan2(y4 - y3, x4 - x3) - Math.atan2(y3 - y2, x3 - x2))\n                        if(da1 >= pi) da1 = 2*pi - da1\n\n                        if(da1 < m_angle_tolerance) {\n                            points.push(vec2(x2, y2))\n                            points.push(vec2(x3, y3))\n                            return\n                        }\n\n                        if(m_cusp_limit !== 0.0) {\n                            if(da1 > m_cusp_limit)\n                            {\n                                points.push(vec2(x3, y3))\n                                return\n                            }\n                        }\n                    }\n                }\n                else {\n                    // Collinear case\n                    //-----------------\n                    dx = x1234 - (x1 + x4) / 2\n                    dy = y1234 - (y1 + y4) / 2\n                    if(dx*dx + dy*dy <= distanceTolerance) {\n                        points.push(vec2(x1234, y1234))\n                        return\n                    }\n                }\n            }\n        }\n\n        // Continue subdivision\n        //----------------------\n        recursive(x1, y1, x12, y12, x123, y123, x1234, y1234, points, distanceTolerance, level + 1) \n        recursive(x1234, y1234, x234, y234, x34, y34, x4, y4, points, distanceTolerance, level + 1) \n    }\n}\n","module.exports = require('./function')()","\nmodule.exports = absolutize\n\n/**\n * redefine `path` with absolute coordinates\n *\n * @param {Array} path\n * @return {Array}\n */\n\nfunction absolutize(path){\n\tvar startX = 0\n\tvar startY = 0\n\tvar x = 0\n\tvar y = 0\n\n\treturn path.map(function(seg){\n\t\tseg = seg.slice()\n\t\tvar type = seg[0]\n\t\tvar command = type.toUpperCase()\n\n\t\t// is relative\n\t\tif (type != command) {\n\t\t\tseg[0] = command\n\t\t\tswitch (type) {\n\t\t\t\tcase 'a':\n\t\t\t\t\tseg[6] += x\n\t\t\t\t\tseg[7] += y\n\t\t\t\t\tbreak\n\t\t\t\tcase 'v':\n\t\t\t\t\tseg[1] += y\n\t\t\t\t\tbreak\n\t\t\t\tcase 'h':\n\t\t\t\t\tseg[1] += x\n\t\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\tfor (var i = 1; i < seg.length;) {\n\t\t\t\t\t\tseg[i++] += x\n\t\t\t\t\t\tseg[i++] += y\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// update cursor state\n\t\tswitch (command) {\n\t\t\tcase 'Z':\n\t\t\t\tx = startX\n\t\t\t\ty = startY\n\t\t\t\tbreak\n\t\t\tcase 'H':\n\t\t\t\tx = seg[1]\n\t\t\t\tbreak\n\t\t\tcase 'V':\n\t\t\t\ty = seg[1]\n\t\t\t\tbreak\n\t\t\tcase 'M':\n\t\t\t\tx = startX = seg[1]\n\t\t\t\ty = startY = seg[2]\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tx = seg[seg.length - 2]\n\t\t\t\ty = seg[seg.length - 1]\n\t\t}\n\n\t\treturn seg\n\t})\n}\n","\nvar π = Math.PI\nvar _120 = radians(120)\n\nmodule.exports = normalize\n\n/**\n * describe `path` in terms of cubic bézier \n * curves and move commands\n *\n * @param {Array} path\n * @return {Array}\n */\n\nfunction normalize(path){\n\t// init state\n\tvar prev\n\tvar result = []\n\tvar bezierX = 0\n\tvar bezierY = 0\n\tvar startX = 0\n\tvar startY = 0\n\tvar quadX = null\n\tvar quadY = null\n\tvar x = 0\n\tvar y = 0\n\n\tfor (var i = 0, len = path.length; i < len; i++) {\n\t\tvar seg = path[i]\n\t\tvar command = seg[0]\n\t\tswitch (command) {\n\t\t\tcase 'M':\n\t\t\t\tstartX = seg[1]\n\t\t\t\tstartY = seg[2]\n\t\t\t\tbreak\n\t\t\tcase 'A':\n\t\t\t\tseg = arc(x, y,seg[1],seg[2],radians(seg[3]),seg[4],seg[5],seg[6],seg[7])\n\t\t\t\t// split multi part\n\t\t\t\tseg.unshift('C')\n\t\t\t\tif (seg.length > 7) {\n\t\t\t\t\tresult.push(seg.splice(0, 7))\n\t\t\t\t\tseg.unshift('C')\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\tcase 'S':\n\t\t\t\t// default control point\n\t\t\t\tvar cx = x\n\t\t\t\tvar cy = y\n\t\t\t\tif (prev == 'C' || prev == 'S') {\n\t\t\t\t\tcx += cx - bezierX // reflect the previous command's control\n\t\t\t\t\tcy += cy - bezierY // point relative to the current point\n\t\t\t\t}\n\t\t\t\tseg = ['C', cx, cy, seg[1], seg[2], seg[3], seg[4]]\n\t\t\t\tbreak\n\t\t\tcase 'T':\n\t\t\t\tif (prev == 'Q' || prev == 'T') {\n\t\t\t\t\tquadX = x * 2 - quadX // as with 'S' reflect previous control point\n\t\t\t\t\tquadY = y * 2 - quadY\n\t\t\t\t} else {\n\t\t\t\t\tquadX = x\n\t\t\t\t\tquadY = y\n\t\t\t\t}\n\t\t\t\tseg = quadratic(x, y, quadX, quadY, seg[1], seg[2])\n\t\t\t\tbreak\n\t\t\tcase 'Q':\n\t\t\t\tquadX = seg[1]\n\t\t\t\tquadY = seg[2]\n\t\t\t\tseg = quadratic(x, y, seg[1], seg[2], seg[3], seg[4])\n\t\t\t\tbreak\n\t\t\tcase 'L':\n\t\t\t\tseg = line(x, y, seg[1], seg[2])\n\t\t\t\tbreak\n\t\t\tcase 'H':\n\t\t\t\tseg = line(x, y, seg[1], y)\n\t\t\t\tbreak\n\t\t\tcase 'V':\n\t\t\t\tseg = line(x, y, x, seg[1])\n\t\t\t\tbreak\n\t\t\tcase 'Z':\n\t\t\t\tseg = line(x, y, startX, startY)\n\t\t\t\tbreak\n\t\t}\n\n\t\t// update state\n\t\tprev = command\n\t\tx = seg[seg.length - 2]\n\t\ty = seg[seg.length - 1]\n\t\tif (seg.length > 4) {\n\t\t\tbezierX = seg[seg.length - 4]\n\t\t\tbezierY = seg[seg.length - 3]\n\t\t} else {\n\t\t\tbezierX = x\n\t\t\tbezierY = y\n\t\t}\n\t\tresult.push(seg)\n\t}\n\n\treturn result\n}\n\nfunction line(x1, y1, x2, y2){\n\treturn ['C', x1, y1, x2, y2, x2, y2]\n}\n\nfunction quadratic(x1, y1, cx, cy, x2, y2){\n\treturn [\n\t\t'C',\n\t\tx1/3 + (2/3) * cx,\n\t\ty1/3 + (2/3) * cy,\n\t\tx2/3 + (2/3) * cx,\n\t\ty2/3 + (2/3) * cy,\n\t\tx2,\n\t\ty2\n\t]\n}\n\n// This function is ripped from \n// github.com/DmitryBaranovskiy/raphael/blob/4d97d4/raphael.js#L2216-L2304 \n// which references w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n// TODO: make it human readable\n\nfunction arc(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n\tif (!recursive) {\n\t\tvar xy = rotate(x1, y1, -angle)\n\t\tx1 = xy.x\n\t\ty1 = xy.y\n\t\txy = rotate(x2, y2, -angle)\n\t\tx2 = xy.x\n\t\ty2 = xy.y\n\t\tvar x = (x1 - x2) / 2\n\t\tvar y = (y1 - y2) / 2\n\t\tvar h = (x * x) / (rx * rx) + (y * y) / (ry * ry)\n\t\tif (h > 1) {\n\t\t\th = Math.sqrt(h)\n\t\t\trx = h * rx\n\t\t\try = h * ry\n\t\t}\n\t\tvar rx2 = rx * rx\n\t\tvar ry2 = ry * ry\n\t\tvar k = (large_arc_flag == sweep_flag ? -1 : 1)\n\t\t\t* Math.sqrt(Math.abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x)))\n\t\tif (k == Infinity) k = 1 // neutralize\n\t\tvar cx = k * rx * y / ry + (x1 + x2) / 2\n\t\tvar cy = k * -ry * x / rx + (y1 + y2) / 2\n\t\tvar f1 = Math.asin(((y1 - cy) / ry).toFixed(9))\n\t\tvar f2 = Math.asin(((y2 - cy) / ry).toFixed(9))\n\n\t\tf1 = x1 < cx ? π - f1 : f1\n\t\tf2 = x2 < cx ? π - f2 : f2\n\t\tif (f1 < 0) f1 = π * 2 + f1\n\t\tif (f2 < 0) f2 = π * 2 + f2\n\t\tif (sweep_flag && f1 > f2) f1 = f1 - π * 2\n\t\tif (!sweep_flag && f2 > f1) f2 = f2 - π * 2\n\t} else {\n\t\tf1 = recursive[0]\n\t\tf2 = recursive[1]\n\t\tcx = recursive[2]\n\t\tcy = recursive[3]\n\t}\n\t// greater than 120 degrees requires multiple segments\n\tif (Math.abs(f2 - f1) > _120) {\n\t\tvar f2old = f2\n\t\tvar x2old = x2\n\t\tvar y2old = y2\n\t\tf2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1)\n\t\tx2 = cx + rx * Math.cos(f2)\n\t\ty2 = cy + ry * Math.sin(f2)\n\t\tvar res = arc(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy])\n\t}\n\tvar t = Math.tan((f2 - f1) / 4)\n\tvar hx = 4 / 3 * rx * t\n\tvar hy = 4 / 3 * ry * t\n\tvar curve = [\n\t\t2 * x1 - (x1 + hx * Math.sin(f1)),\n\t\t2 * y1 - (y1 - hy * Math.cos(f1)),\n\t\tx2 + hx * Math.sin(f2),\n\t\ty2 - hy * Math.cos(f2),\n\t\tx2,\n\t\ty2\n\t]\n\tif (recursive) return curve\n\tif (res) curve = curve.concat(res)\n\tfor (var i = 0; i < curve.length;) {\n\t\tvar rot = rotate(curve[i], curve[i+1], angle)\n\t\tcurve[i++] = rot.x\n\t\tcurve[i++] = rot.y\n\t}\n\treturn curve\n}\n\nfunction rotate(x, y, rad){\n\treturn {\n\t\tx: x * Math.cos(rad) - y * Math.sin(rad),\n\t\ty: x * Math.sin(rad) + y * Math.cos(rad)\n\t}\n}\n\nfunction radians(degress){\n\treturn degress * (π / 180)\n}\n","module.exports = function vec2Copy(out, a) {\n    out[0] = a[0]\n    out[1] = a[1]\n    return out\n}","var bezier = require('adaptive-bezier-curve')\nvar abs = require('abs-svg-path')\nvar norm = require('normalize-svg-path')\nvar copy = require('vec2-copy')\n\nfunction set(out, x, y) {\n    out[0] = x\n    out[1] = y\n    return out\n}\n\nvar tmp1 = [0,0],\n    tmp2 = [0,0],\n    tmp3 = [0,0]\n\nfunction bezierTo(points, scale, start, seg) {\n    bezier(start, \n        set(tmp1, seg[1], seg[2]), \n        set(tmp2, seg[3], seg[4]),\n        set(tmp3, seg[5], seg[6]), scale, points)\n}\n\nmodule.exports = function contours(svg, scale) {\n    var paths = []\n\n    var points = []\n    var pen = [0, 0]\n    norm(abs(svg)).forEach(function(segment, i, self) {\n        if (segment[0] === 'M') {\n            copy(pen, segment.slice(1))\n            if (points.length>0) {\n                paths.push(points)\n                points = []\n            }\n        } else if (segment[0] === 'C') {\n            bezierTo(points, scale, pen, segment)\n            set(pen, segment[5], segment[6])\n        } else {\n            throw new Error('illegal type in SVG: '+segment[0])\n        }\n    })\n    if (points.length>0)\n        paths.push(points)\n    return paths\n}","/* eslint-disable @typescript-eslint/ban-ts-comment */\n// @ts-ignore\nimport parse from 'parse-svg-path'\n// @ts-ignore\nimport contours from 'svg-path-contours'\nimport { BufferGeometry, PlaneGeometry, Vector2 } from 'three'\n\n/**\n * Create geometry for classic connection.\n * Can be used in `customize` option.\n * @param path SVG path\n * @param width Connection width\n * @returns Connection geometry\n */\n// eslint-disable-next-line max-statements\nexport function createClassicConnectionGeometry(path: string, width: number): BufferGeometry {\n  const segments = contours(parse(path)) as [number, number][][]\n  const points = segments.map(segment => segment.map(([x, y]) => ({ x, y }))).flat()\n  const geometry: BufferGeometry = new PlaneGeometry(100, 10, points.length - 1, 1)\n\n  for (let i = 0; i < points.length; i++) {\n    const normal = new Vector2(0, width / 2)\n    const point = new Vector2(points[i].x, points[i].y)\n\n    if (i > 0 && i < points.length - 1) {\n      const prevPoint = new Vector2(points[i - 1].x, points[i - 1].y)\n      const nextPoint = new Vector2(points[i + 1].x, points[i + 1].y)\n      const vectorBetweenPoints = nextPoint.clone().sub(prevPoint)\n      const normalBetweenPoints = new Vector2(-vectorBetweenPoints.y, vectorBetweenPoints.x).clone().normalize()\n\n      normal.set(normalBetweenPoints.x, normalBetweenPoints.y).multiplyScalar(width / 2)\n    }\n\n    geometry.attributes.position.setX(i, point.x + normal.x)\n    geometry.attributes.position.setY(i, point.y + normal.y)\n\n    geometry.attributes.position.setX(i + points.length, point.x - normal.x)\n    geometry.attributes.position.setY(i + points.length, point.y - normal.y)\n  }\n\n  return geometry\n}\n","import {\n\tBufferAttribute,\n\tBufferGeometry,\n\tFloat32BufferAttribute,\n\tInstancedBufferAttribute,\n\tInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tTriangleFanDrawMode,\n\tTriangleStripDrawMode,\n\tTrianglesDrawMode,\n\tVector3,\n} from 'three';\n\nfunction computeMikkTSpaceTangents( geometry, MikkTSpace, negateSign = true ) {\n\n\tif ( ! MikkTSpace || ! MikkTSpace.isReady ) {\n\n\t\tthrow new Error( 'BufferGeometryUtils: Initialized MikkTSpace library required.' );\n\n\t}\n\n\tif ( ! geometry.hasAttribute( 'position' ) || ! geometry.hasAttribute( 'normal' ) || ! geometry.hasAttribute( 'uv' ) ) {\n\n\t\tthrow new Error( 'BufferGeometryUtils: Tangents require \"position\", \"normal\", and \"uv\" attributes.' );\n\n\t}\n\n\tfunction getAttributeArray( attribute ) {\n\n\t\tif ( attribute.normalized || attribute.isInterleavedBufferAttribute ) {\n\n\t\t\tconst dstArray = new Float32Array( attribute.count * attribute.itemSize );\n\n\t\t\tfor ( let i = 0, j = 0; i < attribute.count; i ++ ) {\n\n\t\t\t\tdstArray[ j ++ ] = attribute.getX( i );\n\t\t\t\tdstArray[ j ++ ] = attribute.getY( i );\n\n\t\t\t\tif ( attribute.itemSize > 2 ) {\n\n\t\t\t\t\tdstArray[ j ++ ] = attribute.getZ( i );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn dstArray;\n\n\t\t}\n\n\t\tif ( attribute.array instanceof Float32Array ) {\n\n\t\t\treturn attribute.array;\n\n\t\t}\n\n\t\treturn new Float32Array( attribute.array );\n\n\t}\n\n\t// MikkTSpace algorithm requires non-indexed input.\n\n\tconst _geometry = geometry.index ? geometry.toNonIndexed() : geometry;\n\n\t// Compute vertex tangents.\n\n\tconst tangents = MikkTSpace.generateTangents(\n\n\t\tgetAttributeArray( _geometry.attributes.position ),\n\t\tgetAttributeArray( _geometry.attributes.normal ),\n\t\tgetAttributeArray( _geometry.attributes.uv )\n\n\t);\n\n\t// Texture coordinate convention of glTF differs from the apparent\n\t// default of the MikkTSpace library; .w component must be flipped.\n\n\tif ( negateSign ) {\n\n\t\tfor ( let i = 3; i < tangents.length; i += 4 ) {\n\n\t\t\ttangents[ i ] *= - 1;\n\n\t\t}\n\n\t}\n\n\t//\n\n\t_geometry.setAttribute( 'tangent', new BufferAttribute( tangents, 4 ) );\n\n\tif ( geometry !== _geometry ) {\n\n\t\tgeometry.copy( _geometry );\n\n\t}\n\n\treturn geometry;\n\n}\n\n/**\n * @param  {Array<BufferGeometry>} geometries\n * @param  {Boolean} useGroups\n * @return {BufferGeometry}\n */\nfunction mergeGeometries( geometries, useGroups = false ) {\n\n\tconst isIndexed = geometries[ 0 ].index !== null;\n\n\tconst attributesUsed = new Set( Object.keys( geometries[ 0 ].attributes ) );\n\tconst morphAttributesUsed = new Set( Object.keys( geometries[ 0 ].morphAttributes ) );\n\n\tconst attributes = {};\n\tconst morphAttributes = {};\n\n\tconst morphTargetsRelative = geometries[ 0 ].morphTargetsRelative;\n\n\tconst mergedGeometry = new BufferGeometry();\n\n\tlet offset = 0;\n\n\tfor ( let i = 0; i < geometries.length; ++ i ) {\n\n\t\tconst geometry = geometries[ i ];\n\t\tlet attributesCount = 0;\n\n\t\t// ensure that all geometries are indexed, or none\n\n\t\tif ( isIndexed !== ( geometry.index !== null ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '. All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// gather attributes, exit early if they're different\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tif ( ! attributesUsed.has( name ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '. All geometries must have compatible attributes; make sure \"' + name + '\" attribute exists among all geometries, or in none of them.' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tif ( attributes[ name ] === undefined ) attributes[ name ] = [];\n\n\t\t\tattributes[ name ].push( geometry.attributes[ name ] );\n\n\t\t\tattributesCount ++;\n\n\t\t}\n\n\t\t// ensure geometries have the same number of attributes\n\n\t\tif ( attributesCount !== attributesUsed.size ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '. Make sure all geometries have the same number of attributes.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// gather morph attributes, exit early if they're different\n\n\t\tif ( morphTargetsRelative !== geometry.morphTargetsRelative ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '. .morphTargetsRelative must be consistent throughout all geometries.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tfor ( const name in geometry.morphAttributes ) {\n\n\t\t\tif ( ! morphAttributesUsed.has( name ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '.  .morphAttributes must be consistent throughout all geometries.' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tif ( morphAttributes[ name ] === undefined ) morphAttributes[ name ] = [];\n\n\t\t\tmorphAttributes[ name ].push( geometry.morphAttributes[ name ] );\n\n\t\t}\n\n\t\tif ( useGroups ) {\n\n\t\t\tlet count;\n\n\t\t\tif ( isIndexed ) {\n\n\t\t\t\tcount = geometry.index.count;\n\n\t\t\t} else if ( geometry.attributes.position !== undefined ) {\n\n\t\t\t\tcount = geometry.attributes.position.count;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '. The geometry must have either an index or a position attribute' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tmergedGeometry.addGroup( offset, count, i );\n\n\t\t\toffset += count;\n\n\t\t}\n\n\t}\n\n\t// merge indices\n\n\tif ( isIndexed ) {\n\n\t\tlet indexOffset = 0;\n\t\tconst mergedIndex = [];\n\n\t\tfor ( let i = 0; i < geometries.length; ++ i ) {\n\n\t\t\tconst index = geometries[ i ].index;\n\n\t\t\tfor ( let j = 0; j < index.count; ++ j ) {\n\n\t\t\t\tmergedIndex.push( index.getX( j ) + indexOffset );\n\n\t\t\t}\n\n\t\t\tindexOffset += geometries[ i ].attributes.position.count;\n\n\t\t}\n\n\t\tmergedGeometry.setIndex( mergedIndex );\n\n\t}\n\n\t// merge attributes\n\n\tfor ( const name in attributes ) {\n\n\t\tconst mergedAttribute = mergeAttributes( attributes[ name ] );\n\n\t\tif ( ! mergedAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the ' + name + ' attribute.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tmergedGeometry.setAttribute( name, mergedAttribute );\n\n\t}\n\n\t// merge morph attributes\n\n\tfor ( const name in morphAttributes ) {\n\n\t\tconst numMorphTargets = morphAttributes[ name ][ 0 ].length;\n\n\t\tif ( numMorphTargets === 0 ) break;\n\n\t\tmergedGeometry.morphAttributes = mergedGeometry.morphAttributes || {};\n\t\tmergedGeometry.morphAttributes[ name ] = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; ++ i ) {\n\n\t\t\tconst morphAttributesToMerge = [];\n\n\t\t\tfor ( let j = 0; j < morphAttributes[ name ].length; ++ j ) {\n\n\t\t\t\tmorphAttributesToMerge.push( morphAttributes[ name ][ j ][ i ] );\n\n\t\t\t}\n\n\t\t\tconst mergedMorphAttribute = mergeAttributes( morphAttributesToMerge );\n\n\t\t\tif ( ! mergedMorphAttribute ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the ' + name + ' morphAttribute.' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tmergedGeometry.morphAttributes[ name ].push( mergedMorphAttribute );\n\n\t\t}\n\n\t}\n\n\treturn mergedGeometry;\n\n}\n\n/**\n * @param {Array<BufferAttribute>} attributes\n * @return {BufferAttribute}\n */\nfunction mergeAttributes( attributes ) {\n\n\tlet TypedArray;\n\tlet itemSize;\n\tlet normalized;\n\tlet gpuType = - 1;\n\tlet arrayLength = 0;\n\n\tfor ( let i = 0; i < attributes.length; ++ i ) {\n\n\t\tconst attribute = attributes[ i ];\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeAttributes() failed. InterleavedBufferAttributes are not supported.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tif ( TypedArray === undefined ) TypedArray = attribute.array.constructor;\n\t\tif ( TypedArray !== attribute.array.constructor ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.array must be of consistent array types across matching attributes.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tif ( itemSize === undefined ) itemSize = attribute.itemSize;\n\t\tif ( itemSize !== attribute.itemSize ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.itemSize must be consistent across matching attributes.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tif ( normalized === undefined ) normalized = attribute.normalized;\n\t\tif ( normalized !== attribute.normalized ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.normalized must be consistent across matching attributes.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tif ( gpuType === - 1 ) gpuType = attribute.gpuType;\n\t\tif ( gpuType !== attribute.gpuType ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.gpuType must be consistent across matching attributes.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tarrayLength += attribute.array.length;\n\n\t}\n\n\tconst array = new TypedArray( arrayLength );\n\tlet offset = 0;\n\n\tfor ( let i = 0; i < attributes.length; ++ i ) {\n\n\t\tarray.set( attributes[ i ].array, offset );\n\n\t\toffset += attributes[ i ].array.length;\n\n\t}\n\n\tconst result = new BufferAttribute( array, itemSize, normalized );\n\tif ( gpuType !== undefined ) {\n\n\t\tresult.gpuType = gpuType;\n\n\t}\n\n\treturn result;\n\n}\n\n/**\n * @param {BufferAttribute}\n * @return {BufferAttribute}\n */\nexport function deepCloneAttribute( attribute ) {\n\n\tif ( attribute.isInstancedInterleavedBufferAttribute || attribute.isInterleavedBufferAttribute ) {\n\n\t\treturn deinterleaveAttribute( attribute );\n\n\t}\n\n\tif ( attribute.isInstancedBufferAttribute ) {\n\n\t\treturn new InstancedBufferAttribute().copy( attribute );\n\n\t}\n\n\treturn new BufferAttribute().copy( attribute );\n\n}\n\n/**\n * @param {Array<BufferAttribute>} attributes\n * @return {Array<InterleavedBufferAttribute>}\n */\nfunction interleaveAttributes( attributes ) {\n\n\t// Interleaves the provided attributes into an InterleavedBuffer and returns\n\t// a set of InterleavedBufferAttributes for each attribute\n\tlet TypedArray;\n\tlet arrayLength = 0;\n\tlet stride = 0;\n\n\t// calculate the length and type of the interleavedBuffer\n\tfor ( let i = 0, l = attributes.length; i < l; ++ i ) {\n\n\t\tconst attribute = attributes[ i ];\n\n\t\tif ( TypedArray === undefined ) TypedArray = attribute.array.constructor;\n\t\tif ( TypedArray !== attribute.array.constructor ) {\n\n\t\t\tconsole.error( 'AttributeBuffers of different types cannot be interleaved' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tarrayLength += attribute.array.length;\n\t\tstride += attribute.itemSize;\n\n\t}\n\n\t// Create the set of buffer attributes\n\tconst interleavedBuffer = new InterleavedBuffer( new TypedArray( arrayLength ), stride );\n\tlet offset = 0;\n\tconst res = [];\n\tconst getters = [ 'getX', 'getY', 'getZ', 'getW' ];\n\tconst setters = [ 'setX', 'setY', 'setZ', 'setW' ];\n\n\tfor ( let j = 0, l = attributes.length; j < l; j ++ ) {\n\n\t\tconst attribute = attributes[ j ];\n\t\tconst itemSize = attribute.itemSize;\n\t\tconst count = attribute.count;\n\t\tconst iba = new InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, attribute.normalized );\n\t\tres.push( iba );\n\n\t\toffset += itemSize;\n\n\t\t// Move the data for each attribute into the new interleavedBuffer\n\t\t// at the appropriate offset\n\t\tfor ( let c = 0; c < count; c ++ ) {\n\n\t\t\tfor ( let k = 0; k < itemSize; k ++ ) {\n\n\t\t\t\tiba[ setters[ k ] ]( c, attribute[ getters[ k ] ]( c ) );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn res;\n\n}\n\n// returns a new, non-interleaved version of the provided attribute\nexport function deinterleaveAttribute( attribute ) {\n\n\tconst cons = attribute.data.array.constructor;\n\tconst count = attribute.count;\n\tconst itemSize = attribute.itemSize;\n\tconst normalized = attribute.normalized;\n\n\tconst array = new cons( count * itemSize );\n\tlet newAttribute;\n\tif ( attribute.isInstancedInterleavedBufferAttribute ) {\n\n\t\tnewAttribute = new InstancedBufferAttribute( array, itemSize, normalized, attribute.meshPerAttribute );\n\n\t} else {\n\n\t\tnewAttribute = new BufferAttribute( array, itemSize, normalized );\n\n\t}\n\n\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\tnewAttribute.setX( i, attribute.getX( i ) );\n\n\t\tif ( itemSize >= 2 ) {\n\n\t\t\tnewAttribute.setY( i, attribute.getY( i ) );\n\n\t\t}\n\n\t\tif ( itemSize >= 3 ) {\n\n\t\t\tnewAttribute.setZ( i, attribute.getZ( i ) );\n\n\t\t}\n\n\t\tif ( itemSize >= 4 ) {\n\n\t\t\tnewAttribute.setW( i, attribute.getW( i ) );\n\n\t\t}\n\n\t}\n\n\treturn newAttribute;\n\n}\n\n// deinterleaves all attributes on the geometry\nexport function deinterleaveGeometry( geometry ) {\n\n\tconst attributes = geometry.attributes;\n\tconst morphTargets = geometry.morphTargets;\n\tconst attrMap = new Map();\n\n\tfor ( const key in attributes ) {\n\n\t\tconst attr = attributes[ key ];\n\t\tif ( attr.isInterleavedBufferAttribute ) {\n\n\t\t\tif ( ! attrMap.has( attr ) ) {\n\n\t\t\t\tattrMap.set( attr, deinterleaveAttribute( attr ) );\n\n\t\t\t}\n\n\t\t\tattributes[ key ] = attrMap.get( attr );\n\n\t\t}\n\n\t}\n\n\tfor ( const key in morphTargets ) {\n\n\t\tconst attr = morphTargets[ key ];\n\t\tif ( attr.isInterleavedBufferAttribute ) {\n\n\t\t\tif ( ! attrMap.has( attr ) ) {\n\n\t\t\t\tattrMap.set( attr, deinterleaveAttribute( attr ) );\n\n\t\t\t}\n\n\t\t\tmorphTargets[ key ] = attrMap.get( attr );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * @param {Array<BufferGeometry>} geometry\n * @return {number}\n */\nfunction estimateBytesUsed( geometry ) {\n\n\t// Return the estimated memory used by this geometry in bytes\n\t// Calculate using itemSize, count, and BYTES_PER_ELEMENT to account\n\t// for InterleavedBufferAttributes.\n\tlet mem = 0;\n\tfor ( const name in geometry.attributes ) {\n\n\t\tconst attr = geometry.getAttribute( name );\n\t\tmem += attr.count * attr.itemSize * attr.array.BYTES_PER_ELEMENT;\n\n\t}\n\n\tconst indices = geometry.getIndex();\n\tmem += indices ? indices.count * indices.itemSize * indices.array.BYTES_PER_ELEMENT : 0;\n\treturn mem;\n\n}\n\n/**\n * @param {BufferGeometry} geometry\n * @param {number} tolerance\n * @return {BufferGeometry}\n */\nfunction mergeVertices( geometry, tolerance = 1e-4 ) {\n\n\ttolerance = Math.max( tolerance, Number.EPSILON );\n\n\t// Generate an index buffer if the geometry doesn't have one, or optimize it\n\t// if it's already available.\n\tconst hashToIndex = {};\n\tconst indices = geometry.getIndex();\n\tconst positions = geometry.getAttribute( 'position' );\n\tconst vertexCount = indices ? indices.count : positions.count;\n\n\t// next value for triangle indices\n\tlet nextIndex = 0;\n\n\t// attributes and new attribute arrays\n\tconst attributeNames = Object.keys( geometry.attributes );\n\tconst tmpAttributes = {};\n\tconst tmpMorphAttributes = {};\n\tconst newIndices = [];\n\tconst getters = [ 'getX', 'getY', 'getZ', 'getW' ];\n\tconst setters = [ 'setX', 'setY', 'setZ', 'setW' ];\n\n\t// Initialize the arrays, allocating space conservatively. Extra\n\t// space will be trimmed in the last step.\n\tfor ( let i = 0, l = attributeNames.length; i < l; i ++ ) {\n\n\t\tconst name = attributeNames[ i ];\n\t\tconst attr = geometry.attributes[ name ];\n\n\t\ttmpAttributes[ name ] = new BufferAttribute(\n\t\t\tnew attr.array.constructor( attr.count * attr.itemSize ),\n\t\t\tattr.itemSize,\n\t\t\tattr.normalized\n\t\t);\n\n\t\tconst morphAttr = geometry.morphAttributes[ name ];\n\t\tif ( morphAttr ) {\n\n\t\t\ttmpMorphAttributes[ name ] = new BufferAttribute(\n\t\t\t\tnew morphAttr.array.constructor( morphAttr.count * morphAttr.itemSize ),\n\t\t\t\tmorphAttr.itemSize,\n\t\t\t\tmorphAttr.normalized\n\t\t\t);\n\n\t\t}\n\n\t}\n\n\t// convert the error tolerance to an amount of decimal places to truncate to\n\tconst decimalShift = Math.log10( 1 / tolerance );\n\tconst shiftMultiplier = Math.pow( 10, decimalShift );\n\tfor ( let i = 0; i < vertexCount; i ++ ) {\n\n\t\tconst index = indices ? indices.getX( i ) : i;\n\n\t\t// Generate a hash for the vertex attributes at the current index 'i'\n\t\tlet hash = '';\n\t\tfor ( let j = 0, l = attributeNames.length; j < l; j ++ ) {\n\n\t\t\tconst name = attributeNames[ j ];\n\t\t\tconst attribute = geometry.getAttribute( name );\n\t\t\tconst itemSize = attribute.itemSize;\n\n\t\t\tfor ( let k = 0; k < itemSize; k ++ ) {\n\n\t\t\t\t// double tilde truncates the decimal value\n\t\t\t\thash += `${ ~ ~ ( attribute[ getters[ k ] ]( index ) * shiftMultiplier ) },`;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Add another reference to the vertex if it's already\n\t\t// used by another index\n\t\tif ( hash in hashToIndex ) {\n\n\t\t\tnewIndices.push( hashToIndex[ hash ] );\n\n\t\t} else {\n\n\t\t\t// copy data to the new index in the temporary attributes\n\t\t\tfor ( let j = 0, l = attributeNames.length; j < l; j ++ ) {\n\n\t\t\t\tconst name = attributeNames[ j ];\n\t\t\t\tconst attribute = geometry.getAttribute( name );\n\t\t\t\tconst morphAttr = geometry.morphAttributes[ name ];\n\t\t\t\tconst itemSize = attribute.itemSize;\n\t\t\t\tconst newarray = tmpAttributes[ name ];\n\t\t\t\tconst newMorphArrays = tmpMorphAttributes[ name ];\n\n\t\t\t\tfor ( let k = 0; k < itemSize; k ++ ) {\n\n\t\t\t\t\tconst getterFunc = getters[ k ];\n\t\t\t\t\tconst setterFunc = setters[ k ];\n\t\t\t\t\tnewarray[ setterFunc ]( nextIndex, attribute[ getterFunc ]( index ) );\n\n\t\t\t\t\tif ( morphAttr ) {\n\n\t\t\t\t\t\tfor ( let m = 0, ml = morphAttr.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\t\tnewMorphArrays[ m ][ setterFunc ]( nextIndex, morphAttr[ m ][ getterFunc ]( index ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\thashToIndex[ hash ] = nextIndex;\n\t\t\tnewIndices.push( nextIndex );\n\t\t\tnextIndex ++;\n\n\t\t}\n\n\t}\n\n\t// generate result BufferGeometry\n\tconst result = geometry.clone();\n\tfor ( const name in geometry.attributes ) {\n\n\t\tconst tmpAttribute = tmpAttributes[ name ];\n\n\t\tresult.setAttribute( name, new BufferAttribute(\n\t\t\ttmpAttribute.array.slice( 0, nextIndex * tmpAttribute.itemSize ),\n\t\t\ttmpAttribute.itemSize,\n\t\t\ttmpAttribute.normalized,\n\t\t) );\n\n\t\tif ( ! ( name in tmpMorphAttributes ) ) continue;\n\n\t\tfor ( let j = 0; j < tmpMorphAttributes[ name ].length; j ++ ) {\n\n\t\t\tconst tmpMorphAttribute = tmpMorphAttributes[ name ][ j ];\n\n\t\t\tresult.morphAttributes[ name ][ j ] = new BufferAttribute(\n\t\t\t\ttmpMorphAttribute.array.slice( 0, nextIndex * tmpMorphAttribute.itemSize ),\n\t\t\t\ttmpMorphAttribute.itemSize,\n\t\t\t\ttmpMorphAttribute.normalized,\n\t\t\t);\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tresult.setIndex( newIndices );\n\n\treturn result;\n\n}\n\n/**\n * @param {BufferGeometry} geometry\n * @param {number} drawMode\n * @return {BufferGeometry}\n */\nfunction toTrianglesDrawMode( geometry, drawMode ) {\n\n\tif ( drawMode === TrianglesDrawMode ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometryUtils.toTrianglesDrawMode(): Geometry already defined as triangles.' );\n\t\treturn geometry;\n\n\t}\n\n\tif ( drawMode === TriangleFanDrawMode || drawMode === TriangleStripDrawMode ) {\n\n\t\tlet index = geometry.getIndex();\n\n\t\t// generate index if not present\n\n\t\tif ( index === null ) {\n\n\t\t\tconst indices = [];\n\n\t\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tfor ( let i = 0; i < position.count; i ++ ) {\n\n\t\t\t\t\tindices.push( i );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setIndex( indices );\n\t\t\t\tindex = geometry.getIndex();\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils.toTrianglesDrawMode(): Undefined position attribute. Processing not possible.' );\n\t\t\t\treturn geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst numberOfTriangles = index.count - 2;\n\t\tconst newIndices = [];\n\n\t\tif ( drawMode === TriangleFanDrawMode ) {\n\n\t\t\t// gl.TRIANGLE_FAN\n\n\t\t\tfor ( let i = 1; i <= numberOfTriangles; i ++ ) {\n\n\t\t\t\tnewIndices.push( index.getX( 0 ) );\n\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// gl.TRIANGLE_STRIP\n\n\t\t\tfor ( let i = 0; i < numberOfTriangles; i ++ ) {\n\n\t\t\t\tif ( i % 2 === 0 ) {\n\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( ( newIndices.length / 3 ) !== numberOfTriangles ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unable to generate correct amount of triangles.' );\n\n\t\t}\n\n\t\t// build final geometry\n\n\t\tconst newGeometry = geometry.clone();\n\t\tnewGeometry.setIndex( newIndices );\n\t\tnewGeometry.clearGroups();\n\n\t\treturn newGeometry;\n\n\t} else {\n\n\t\tconsole.error( 'THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unknown draw mode:', drawMode );\n\t\treturn geometry;\n\n\t}\n\n}\n\n/**\n * Calculates the morphed attributes of a morphed/skinned BufferGeometry.\n * Helpful for Raytracing or Decals.\n * @param {Mesh | Line | Points} object An instance of Mesh, Line or Points.\n * @return {Object} An Object with original position/normal attributes and morphed ones.\n */\nfunction computeMorphedAttributes( object ) {\n\n\tconst _vA = new Vector3();\n\tconst _vB = new Vector3();\n\tconst _vC = new Vector3();\n\n\tconst _tempA = new Vector3();\n\tconst _tempB = new Vector3();\n\tconst _tempC = new Vector3();\n\n\tconst _morphA = new Vector3();\n\tconst _morphB = new Vector3();\n\tconst _morphC = new Vector3();\n\n\tfunction _calculateMorphedAttributeData(\n\t\tobject,\n\t\tattribute,\n\t\tmorphAttribute,\n\t\tmorphTargetsRelative,\n\t\ta,\n\t\tb,\n\t\tc,\n\t\tmodifiedAttributeArray\n\t) {\n\n\t\t_vA.fromBufferAttribute( attribute, a );\n\t\t_vB.fromBufferAttribute( attribute, b );\n\t\t_vC.fromBufferAttribute( attribute, c );\n\n\t\tconst morphInfluences = object.morphTargetInfluences;\n\n\t\tif ( morphAttribute && morphInfluences ) {\n\n\t\t\t_morphA.set( 0, 0, 0 );\n\t\t\t_morphB.set( 0, 0, 0 );\n\t\t\t_morphC.set( 0, 0, 0 );\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst influence = morphInfluences[ i ];\n\t\t\t\tconst morph = morphAttribute[ i ];\n\n\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute( morph, a );\n\t\t\t\t_tempB.fromBufferAttribute( morph, b );\n\t\t\t\t_tempC.fromBufferAttribute( morph, c );\n\n\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\t\t\t\t\t_morphB.addScaledVector( _tempB, influence );\n\t\t\t\t\t_morphC.addScaledVector( _tempC, influence );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( _vA ), influence );\n\t\t\t\t\t_morphB.addScaledVector( _tempB.sub( _vB ), influence );\n\t\t\t\t\t_morphC.addScaledVector( _tempC.sub( _vC ), influence );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_vA.add( _morphA );\n\t\t\t_vB.add( _morphB );\n\t\t\t_vC.add( _morphC );\n\n\t\t}\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tobject.applyBoneTransform( a, _vA );\n\t\t\tobject.applyBoneTransform( b, _vB );\n\t\t\tobject.applyBoneTransform( c, _vC );\n\n\t\t}\n\n\t\tmodifiedAttributeArray[ a * 3 + 0 ] = _vA.x;\n\t\tmodifiedAttributeArray[ a * 3 + 1 ] = _vA.y;\n\t\tmodifiedAttributeArray[ a * 3 + 2 ] = _vA.z;\n\t\tmodifiedAttributeArray[ b * 3 + 0 ] = _vB.x;\n\t\tmodifiedAttributeArray[ b * 3 + 1 ] = _vB.y;\n\t\tmodifiedAttributeArray[ b * 3 + 2 ] = _vB.z;\n\t\tmodifiedAttributeArray[ c * 3 + 0 ] = _vC.x;\n\t\tmodifiedAttributeArray[ c * 3 + 1 ] = _vC.y;\n\t\tmodifiedAttributeArray[ c * 3 + 2 ] = _vC.z;\n\n\t}\n\n\tconst geometry = object.geometry;\n\tconst material = object.material;\n\n\tlet a, b, c;\n\tconst index = geometry.index;\n\tconst positionAttribute = geometry.attributes.position;\n\tconst morphPosition = geometry.morphAttributes.position;\n\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\tconst normalAttribute = geometry.attributes.normal;\n\tconst morphNormal = geometry.morphAttributes.position;\n\n\tconst groups = geometry.groups;\n\tconst drawRange = geometry.drawRange;\n\tlet i, j, il, jl;\n\tlet group;\n\tlet start, end;\n\n\tconst modifiedPosition = new Float32Array( positionAttribute.count * positionAttribute.itemSize );\n\tconst modifiedNormal = new Float32Array( normalAttribute.count * normalAttribute.itemSize );\n\n\tif ( index !== null ) {\n\n\t\t// indexed buffer geometry\n\n\t\tif ( Array.isArray( material ) ) {\n\n\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\tgroup = groups[ i ];\n\n\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\ta = index.getX( j );\n\t\t\t\t\tb = index.getX( j + 1 );\n\t\t\t\t\tc = index.getX( j + 2 );\n\n\t\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\t\tobject,\n\t\t\t\t\t\tpositionAttribute,\n\t\t\t\t\t\tmorphPosition,\n\t\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\t\ta, b, c,\n\t\t\t\t\t\tmodifiedPosition\n\t\t\t\t\t);\n\n\t\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\t\tobject,\n\t\t\t\t\t\tnormalAttribute,\n\t\t\t\t\t\tmorphNormal,\n\t\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\t\ta, b, c,\n\t\t\t\t\t\tmodifiedNormal\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\tend = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\ta = index.getX( i );\n\t\t\t\tb = index.getX( i + 1 );\n\t\t\t\tc = index.getX( i + 2 );\n\n\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\tobject,\n\t\t\t\t\tpositionAttribute,\n\t\t\t\t\tmorphPosition,\n\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\ta, b, c,\n\t\t\t\t\tmodifiedPosition\n\t\t\t\t);\n\n\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\tobject,\n\t\t\t\t\tnormalAttribute,\n\t\t\t\t\tmorphNormal,\n\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\ta, b, c,\n\t\t\t\t\tmodifiedNormal\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t} else {\n\n\t\t// non-indexed buffer geometry\n\n\t\tif ( Array.isArray( material ) ) {\n\n\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\tgroup = groups[ i ];\n\n\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\ta = j;\n\t\t\t\t\tb = j + 1;\n\t\t\t\t\tc = j + 2;\n\n\t\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\t\tobject,\n\t\t\t\t\t\tpositionAttribute,\n\t\t\t\t\t\tmorphPosition,\n\t\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\t\ta, b, c,\n\t\t\t\t\t\tmodifiedPosition\n\t\t\t\t\t);\n\n\t\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\t\tobject,\n\t\t\t\t\t\tnormalAttribute,\n\t\t\t\t\t\tmorphNormal,\n\t\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\t\ta, b, c,\n\t\t\t\t\t\tmodifiedNormal\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\tend = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\ta = i;\n\t\t\t\tb = i + 1;\n\t\t\t\tc = i + 2;\n\n\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\tobject,\n\t\t\t\t\tpositionAttribute,\n\t\t\t\t\tmorphPosition,\n\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\ta, b, c,\n\t\t\t\t\tmodifiedPosition\n\t\t\t\t);\n\n\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\tobject,\n\t\t\t\t\tnormalAttribute,\n\t\t\t\t\tmorphNormal,\n\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\ta, b, c,\n\t\t\t\t\tmodifiedNormal\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tconst morphedPositionAttribute = new Float32BufferAttribute( modifiedPosition, 3 );\n\tconst morphedNormalAttribute = new Float32BufferAttribute( modifiedNormal, 3 );\n\n\treturn {\n\n\t\tpositionAttribute: positionAttribute,\n\t\tnormalAttribute: normalAttribute,\n\t\tmorphedPositionAttribute: morphedPositionAttribute,\n\t\tmorphedNormalAttribute: morphedNormalAttribute\n\n\t};\n\n}\n\nfunction mergeGroups( geometry ) {\n\n\tif ( geometry.groups.length === 0 ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometryUtils.mergeGroups(): No groups are defined. Nothing to merge.' );\n\t\treturn geometry;\n\n\t}\n\n\tlet groups = geometry.groups;\n\n\t// sort groups by material index\n\n\tgroups = groups.sort( ( a, b ) => {\n\n\t\tif ( a.materialIndex !== b.materialIndex ) return a.materialIndex - b.materialIndex;\n\n\t\treturn a.start - b.start;\n\n\t} );\n\n\t// create index for non-indexed geometries\n\n\tif ( geometry.getIndex() === null ) {\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\t\tconst indices = [];\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i += 3 ) {\n\n\t\t\tindices.push( i, i + 1, i + 2 );\n\n\t\t}\n\n\t\tgeometry.setIndex( indices );\n\n\t}\n\n\t// sort index\n\n\tconst index = geometry.getIndex();\n\n\tconst newIndices = [];\n\n\tfor ( let i = 0; i < groups.length; i ++ ) {\n\n\t\tconst group = groups[ i ];\n\n\t\tconst groupStart = group.start;\n\t\tconst groupLength = groupStart + group.count;\n\n\t\tfor ( let j = groupStart; j < groupLength; j ++ ) {\n\n\t\t\tnewIndices.push( index.getX( j ) );\n\n\t\t}\n\n\t}\n\n\tgeometry.dispose(); // Required to force buffer recreation\n\tgeometry.setIndex( newIndices );\n\n\t// update groups indices\n\n\tlet start = 0;\n\n\tfor ( let i = 0; i < groups.length; i ++ ) {\n\n\t\tconst group = groups[ i ];\n\n\t\tgroup.start = start;\n\t\tstart += group.count;\n\n\t}\n\n\t// merge groups\n\n\tlet currentGroup = groups[ 0 ];\n\n\tgeometry.groups = [ currentGroup ];\n\n\tfor ( let i = 1; i < groups.length; i ++ ) {\n\n\t\tconst group = groups[ i ];\n\n\t\tif ( currentGroup.materialIndex === group.materialIndex ) {\n\n\t\t\tcurrentGroup.count += group.count;\n\n\t\t} else {\n\n\t\t\tcurrentGroup = group;\n\t\t\tgeometry.groups.push( currentGroup );\n\n\t\t}\n\n\t}\n\n\treturn geometry;\n\n}\n\n\n/**\n * Modifies the supplied geometry if it is non-indexed, otherwise creates a new,\n * non-indexed geometry. Returns the geometry with smooth normals everywhere except\n * faces that meet at an angle greater than the crease angle.\n *\n * @param {BufferGeometry} geometry\n * @param {number} [creaseAngle]\n * @return {BufferGeometry}\n */\nfunction toCreasedNormals( geometry, creaseAngle = Math.PI / 3 /* 60 degrees */ ) {\n\n\tconst creaseDot = Math.cos( creaseAngle );\n\tconst hashMultiplier = ( 1 + 1e-10 ) * 1e2;\n\n\t// reusable vectors\n\tconst verts = [ new Vector3(), new Vector3(), new Vector3() ];\n\tconst tempVec1 = new Vector3();\n\tconst tempVec2 = new Vector3();\n\tconst tempNorm = new Vector3();\n\tconst tempNorm2 = new Vector3();\n\n\t// hashes a vector\n\tfunction hashVertex( v ) {\n\n\t\tconst x = ~ ~ ( v.x * hashMultiplier );\n\t\tconst y = ~ ~ ( v.y * hashMultiplier );\n\t\tconst z = ~ ~ ( v.z * hashMultiplier );\n\t\treturn `${x},${y},${z}`;\n\n\t}\n\n\t// BufferGeometry.toNonIndexed() warns if the geometry is non-indexed\n\t// and returns the original geometry\n\tconst resultGeometry = geometry.index ? geometry.toNonIndexed() : geometry;\n\tconst posAttr = resultGeometry.attributes.position;\n\tconst vertexMap = {};\n\n\t// find all the normals shared by commonly located vertices\n\tfor ( let i = 0, l = posAttr.count / 3; i < l; i ++ ) {\n\n\t\tconst i3 = 3 * i;\n\t\tconst a = verts[ 0 ].fromBufferAttribute( posAttr, i3 + 0 );\n\t\tconst b = verts[ 1 ].fromBufferAttribute( posAttr, i3 + 1 );\n\t\tconst c = verts[ 2 ].fromBufferAttribute( posAttr, i3 + 2 );\n\n\t\ttempVec1.subVectors( c, b );\n\t\ttempVec2.subVectors( a, b );\n\n\t\t// add the normal to the map for all vertices\n\t\tconst normal = new Vector3().crossVectors( tempVec1, tempVec2 ).normalize();\n\t\tfor ( let n = 0; n < 3; n ++ ) {\n\n\t\t\tconst vert = verts[ n ];\n\t\t\tconst hash = hashVertex( vert );\n\t\t\tif ( ! ( hash in vertexMap ) ) {\n\n\t\t\t\tvertexMap[ hash ] = [];\n\n\t\t\t}\n\n\t\t\tvertexMap[ hash ].push( normal );\n\n\t\t}\n\n\t}\n\n\t// average normals from all vertices that share a common location if they are within the\n\t// provided crease threshold\n\tconst normalArray = new Float32Array( posAttr.count * 3 );\n\tconst normAttr = new BufferAttribute( normalArray, 3, false );\n\tfor ( let i = 0, l = posAttr.count / 3; i < l; i ++ ) {\n\n\t\t// get the face normal for this vertex\n\t\tconst i3 = 3 * i;\n\t\tconst a = verts[ 0 ].fromBufferAttribute( posAttr, i3 + 0 );\n\t\tconst b = verts[ 1 ].fromBufferAttribute( posAttr, i3 + 1 );\n\t\tconst c = verts[ 2 ].fromBufferAttribute( posAttr, i3 + 2 );\n\n\t\ttempVec1.subVectors( c, b );\n\t\ttempVec2.subVectors( a, b );\n\n\t\ttempNorm.crossVectors( tempVec1, tempVec2 ).normalize();\n\n\t\t// average all normals that meet the threshold and set the normal value\n\t\tfor ( let n = 0; n < 3; n ++ ) {\n\n\t\t\tconst vert = verts[ n ];\n\t\t\tconst hash = hashVertex( vert );\n\t\t\tconst otherNormals = vertexMap[ hash ];\n\t\t\ttempNorm2.set( 0, 0, 0 );\n\n\t\t\tfor ( let k = 0, lk = otherNormals.length; k < lk; k ++ ) {\n\n\t\t\t\tconst otherNorm = otherNormals[ k ];\n\t\t\t\tif ( tempNorm.dot( otherNorm ) > creaseDot ) {\n\n\t\t\t\t\ttempNorm2.add( otherNorm );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttempNorm2.normalize();\n\t\t\tnormAttr.setXYZ( i3 + n, tempNorm2.x, tempNorm2.y, tempNorm2.z );\n\n\t\t}\n\n\t}\n\n\tresultGeometry.setAttribute( 'normal', normAttr );\n\treturn resultGeometry;\n\n}\n\nfunction mergeBufferGeometries( geometries, useGroups = false ) {\n\n\tconsole.warn( 'THREE.BufferGeometryUtils: mergeBufferGeometries() has been renamed to mergeGeometries().' ); // @deprecated, r151\n\treturn mergeGeometries( geometries, useGroups );\n\n}\n\nfunction mergeBufferAttributes( attributes ) {\n\n\tconsole.warn( 'THREE.BufferGeometryUtils: mergeBufferAttributes() has been renamed to mergeAttributes().' ); // @deprecated, r151\n\treturn mergeAttributes( attributes );\n\n}\n\nexport {\n\tcomputeMikkTSpaceTangents,\n\tmergeGeometries,\n\tmergeBufferGeometries,\n\tmergeAttributes,\n\tmergeBufferAttributes,\n\tinterleaveAttributes,\n\testimateBytesUsed,\n\tmergeVertices,\n\ttoTrianglesDrawMode,\n\tcomputeMorphedAttributes,\n\tmergeGroups,\n\ttoCreasedNormals\n};\n","import { BufferGeometry, CircleGeometry, ShapeGeometry } from 'three'\nimport { mergeGeometries } from 'three/examples/jsm/utils/BufferGeometryUtils.js'\n\nimport { Size } from '../../../types'\nimport { getRoundedShape } from '../../../utils/shapes'\n\n/**\n * Classic node geometry parameters\n */\nexport type Params = {\n  /** Socket radius, default: 12.3 */\n  socketRadius?: number\n  /** Socket margin, default: 11.5 */\n  socketMargin?: number\n  /** Inputs offset relative to bottom, default: 15.5 */\n  inputsOffset?: number\n  /** Outputs offset relative to top, default: 44.5 */\n  outputsOffset?: number\n  /** Border radius, default: 10 */\n  borderRadius?: number\n}\n\n/**\n * Create classic node geometry\n * @param size Node size\n * @param params Geometry parameters\n * @returns Node geometry\n */\n// eslint-disable-next-line max-statements\nexport function createClassicNodeGeometry(size: Size, params?: Params): BufferGeometry {\n  const {\n    borderRadius = 10,\n    inputsOffset = 15.5,\n    outputsOffset = 44.5,\n    socketRadius = 12.3,\n    socketMargin = 11.5\n  } = params || {}\n  const fixWidth = size.width - 1 // hide border artifact\n  const fixHeight = size.height - 1 // hide border artifact\n  const shape = getRoundedShape(fixWidth, fixHeight, borderRadius * 1.05)\n  const geometry = new ShapeGeometry(shape)\n  const circle = new CircleGeometry(socketRadius, 16)\n\n  const extra: BufferGeometry[] = []\n\n  if ('inputs' in size) {\n    const inputs = Object.entries((size as any).inputs).length\n\n    for (let index = 0; index < inputs; index++) {\n      const geom = circle.clone()\n      const x = 1.5\n      const y = size.height - socketRadius - inputsOffset - ((socketRadius * 2 + socketMargin) * index)\n\n      geom.translate(x, y, 0)\n\n      extra.push(geom)\n    }\n  }\n  if ('outputs' in size) {\n    const outputs = Object.entries((size as any).outputs).length\n\n    for (let index = 0; index < outputs; index++) {\n      const geom = circle.clone()\n      const x = size.width - 1.5\n      const y = socketRadius + outputsOffset + ((socketRadius * 2 + socketMargin) * index)\n\n      geom.translate(x, y, 0)\n\n      extra.push(geom)\n    }\n  }\n\n  return mergeGeometries([...extra, geometry])\n}\n","import { BaseSchemes, Scope, ScopeAsParameter } from 'rete'\nimport { classicConnectionPath } from 'rete-render-utils'\nimport { BufferGeometry } from 'three'\n\nimport { Area3DPlugin } from '../../..'\nimport { ExpectSchemes } from '../../../types'\nimport { createClassicConnectionGeometry } from './geometry'\n\nexport { createClassicConnectionGeometry }\n\ntype Position = { x: number, y: number }\ntype Requires<Schemes extends BaseSchemes> =\n  | { type: 'connectionpath', data: { payload: Schemes['Connection'], path?: string, points: Position[] } }\n\n/**\n * Options for node form generator\n */\nexport type Props = {\n  /** Customize connection geometry */\n  customize?: (path: string) => BufferGeometry\n}\n\n/**\n * Form generator for embedding connections into 3D scene.\n * @param scope Area3DPlugin instance\n * @param props Options for connection form generator\n */\nexport function connection<S extends ExpectSchemes, K, E>(scope: ScopeAsParameter<Scope<K, E[]>, [Requires<S>]>, props?: Props) {\n  const renderScope = scope as Scope<Requires<S>, E[]>\n  const area = renderScope.parentScope<Area3DPlugin<S, Requires<S>>>(Area3DPlugin)\n  // const editor = area.parentScope<NodeEditor<S>>(NodeEditor)\n\n  renderScope.addPipe(context => {\n    if (!context || typeof context !== 'object' || !('type' in context)) return context\n\n    if (context.type === 'connectionpath') {\n      const { id } = context.data.payload\n      const view = area.connectionViews.get(id)\n\n      if (view) {\n        const path = context.data.path || classicConnectionPath(context.data.points as [Position, Position], 0.3)\n        const geometry = props?.customize ? props.customize(path) : createClassicConnectionGeometry(path, 4.6)\n\n        if (geometry) {\n          area.area.content.updateGeometry(view.element, geometry)\n        }\n      }\n    }\n    return context\n  })\n}\n","import { NodeEditor } from 'rete'\nimport { BufferGeometry } from 'three'\n\nimport { Area3DPlugin } from '../../..'\nimport { ExpectSchemes } from '../../../types'\nimport { createClassicNodeGeometry } from './geometry'\n\nexport { createClassicNodeGeometry }\n\n/**\n * Options for node form generator\n */\nexport type Props<S extends ExpectSchemes> = {\n  /** Customize node geometry */\n  customize?: (node: S['Node']) => BufferGeometry\n}\n\n/**\n * Form generator for embedding nodes into 3D scene.\n * @param area Area3DPlugin instance\n * @param props Options for node form generator\n */\nexport function node<S extends ExpectSchemes, K>(area: Area3DPlugin<S, K>, props?: Props<S>) {\n  const editor = area.parentScope<NodeEditor<S>>(NodeEditor)\n\n  area.addPipe(context => {\n    if (!context || typeof context !== 'object' || !('type' in context)) return context\n    if (context.type === 'render' && context.data.type === 'node') {\n      const id = context.data.payload.id\n      const currentNode = editor.getNode(id)\n      const geometry = props?.customize ? props.customize(currentNode) : createClassicNodeGeometry(currentNode)\n\n      area.area.content.updateGeometry(context.data.element, geometry)\n    }\n    return context\n  })\n}\n","import { ConnectionId, Root, Scope, ScopeAsParameter } from 'rete'\nimport { RenderSignal } from 'rete-area-plugin'\nimport { CircleGeometry } from 'three'\nimport { mergeGeometries } from 'three/examples/jsm/utils/BufferGeometryUtils.js'\n\nimport { Area3DPlugin } from '../..'\nimport { ExpectSchemes, Position } from '../../types'\n\nexport type Pin = {\n  id: string\n  position: Position\n  selected?: boolean\n}\nexport type PinData = {\n  id: ConnectionId\n  pins: Pin[]\n}\n\ntype Requires =\n  | RenderSignal<'reroute-pins', { data: PinData }>\n\n/**\n * Form generator for embedding rete-connection-reroute-plugin into 3D scene.\n * @param scope Area3DPlugin instance\n */\nexport function reroute<S extends ExpectSchemes, K>(scope: ScopeAsParameter<Scope<K, [Root<S>]>, [Requires]>) {\n  if (!(scope instanceof Area3DPlugin<S, Requires>)) throw new Error('')\n  const area = scope as Area3DPlugin<S, Requires>\n\n  area.addPipe(context => {\n    if (!context || typeof context !== 'object' || !('type' in context)) return context\n    if (context.type === 'render' && context.data.type === 'reroute-pins') {\n      const pinGeometry = new CircleGeometry(10, 16)\n      const pins = context.data.data.pins.map(pin => {\n        return pinGeometry.clone().translate(pin.position.x, pin.position.y, 0)\n      })\n\n      // eslint-disable-next-line no-undefined\n      area.area.content.updateGeometry(context.data.element, pins.length ? mergeGeometries(pins) : undefined)\n    }\n    return context\n  })\n}\n","import { Position, Size } from '../types'\n\n/**\n * Bounding box\n */\nconst min = (arr: number[]) => arr.length === 0 ? 0 : Math.min(...arr)\nconst max = (arr: number[]) => arr.length === 0 ? 0 : Math.max(...arr)\n\nexport function getBoundingBox(rects: ({ position: Position } & Size)[]) {\n  const left = min(rects.map(rect => rect.position.x))\n  const top = min(rects.map(rect => rect.position.y))\n  const right = max(rects.map(rect => rect.position.x + rect.width))\n  const bottom = max(rects.map(rect => rect.position.y + rect.height))\n\n  return {\n    left,\n    right,\n    top,\n    bottom,\n    width: Math.abs(left - right),\n    height: Math.abs(top - bottom),\n    center: {\n      x: (left + right) / 2,\n      y: (top + bottom) / 2\n    }\n  }\n}\n","import { BaseSchemes, NodeEditor } from 'rete'\n\nimport { Area3DPlugin } from '..'\nimport { ExpectSchemes } from '../types'\nimport { getBoundingBox as getBBox } from '../utils/bounding-box'\nimport { getNodesRect } from '../utils/rects'\n\nexport type NodeRef<Schemes extends BaseSchemes> = Schemes['Node'] | Schemes['Node']['id']\n\nexport function getBoundingBox<Schemes extends ExpectSchemes, K>(plugin: Area3DPlugin<Schemes, K>, nodes: NodeRef<Schemes>[]) {\n  const editor = plugin.parentScope<NodeEditor<Schemes>>(NodeEditor)\n  const list = nodes.map(node => typeof node === 'object' ? node : editor.getNode(node))\n  const rects = getNodesRect(list, plugin.nodeViews)\n\n  return getBBox(rects)\n}\n","import { NodeId } from 'rete'\n\nimport { NodeView } from '../node-view'\nimport { ExpectSchemes } from '../types'\n\nexport function getNodesRect<S extends ExpectSchemes>(nodes: S['Node'][], views: Map<NodeId, NodeView>) {\n  return nodes\n    .map(node => ({ view: views.get(node.id) as NodeView, node }))\n    .filter(item => item.view)\n    .map(({ view, node }) => {\n      const { width, height } = node\n\n      if (typeof width !== 'undefined' && typeof height !== 'undefined') {\n        return {\n          position: view.position,\n          width,\n          height\n        }\n      }\n\n      return {\n        position: view.position,\n        width: view.element.clientWidth,\n        height: view.element.clientHeight\n      }\n    })\n}\n","import { Area3DPlugin } from '..'\nimport { ExpectSchemes } from '../types'\n\n/**\n * Animate the given 3D scene, uses `requestAnimationFrame`\n * @param area The 3D area plugin\n * @param tick Optional callback to be called on each frame\n * @example Area3DExtensions.animate(area)\n * @example Area3DExtensions.animate(area, time => console.log(time))\n */\nexport function animate<S extends ExpectSchemes, K>(area: Area3DPlugin<S, K>, tick?: (time: number) => void) {\n  function render(time: number) {\n    if (tick) tick(time)\n\n    area.area.scene.render()\n    requestAnimationFrame((t) => render(t))\n  }\n\n  render(performance.now())\n}\n","import { PerspectiveCamera, Vector3 } from 'three'\n\nimport { Area3DPlugin } from '..'\nimport { ExpectSchemes } from '../types'\nimport { getBoundingBox } from './bounding-box'\n\n/**\n * Parameters for `zoomAt` extension\n */\nexport type Params = {\n  /** Set gap between nodes and the viewport border */\n  scale?: number\n}\n\n/**\n * Move the camera to look at the given nodes\n * @param area The 3D area plugin\n * @param nodes The nodes to look at\n * @param params The lookAt parameters\n * @example Area3DExtensions.lookAt(area, [node1, node2])\n * @example Area3DExtensions.lookAt(area, [node1, node2], { scale: 0.8 })\n */\nexport function lookAt<S extends ExpectSchemes, K>(area: Area3DPlugin<S, K>, nodes: S['Node'][], params?: Params) {\n  const { scale = 0.9 } = params || {}\n  const { scene } = area.area\n  const { camera, orbit, canvases } = scene\n  const canvas = canvases.get(area)\n  const bbox = getBoundingBox(area, nodes)\n\n  if (!canvas) throw new Error('cannot found canvas')\n\n  const distance = getTargetDistance(camera, area.container, bbox, scale)\n  const target = new Vector3(bbox.center.x, bbox.center.y, 0)\n  const source = target.clone().add(new Vector3(0, 0, distance))\n\n  canvas.localToWorld(target)\n  canvas.localToWorld(source)\n\n  camera.position.copy(source)\n  orbit.target.copy(target)\n  orbit.update()\n}\n\nfunction getTargetDistance(camera: PerspectiveCamera, container: HTMLElement, size: { width: number, height: number }, scale: number) {\n  const fov = camera.fov * (Math.PI / 180)\n  const fovh = 2 * Math.atan(Math.tan(fov / 2) * camera.aspect)\n  const dx = Math.abs(size.width / 2 / Math.tan(fovh / 2))\n  const dy = Math.abs(size.height / 2 / Math.tan(fov / 2))\n  const minDistance = Math.abs(container.clientHeight / 2 / Math.tan(fov / 2))\n  const distance = Math.max(dx, dy, minDistance)\n\n  return distance / scale\n}\n","import { ConnectionId, NodeId, Root, Scope } from 'rete'\nimport { BaseArea, BaseAreaPlugin } from 'rete-area-plugin'\n\nimport { Area, TransformEventParams } from './area'\nimport { ConnectionView } from './connection-view'\nimport { ElementsHolder } from './elements-holder'\nimport { NodeView } from './node-view'\nimport { ExpectSchemes, GetRenderTypes, Position } from './types'\n\nexport type { Area } from './area'\nexport * as Area3DExtensions from './extensions'\nexport type { HybridScene } from './scene'\nexport type { HybridRenderer } from './scene/HybridRenderer'\n\nexport type RenderMeta = { filled?: boolean }\n\n/**\n * Signal types produced by Area3DPlugin instance\n * @priority 10\n */\nexport type Area3D<Schemes extends ExpectSchemes> =\n  | BaseArea<Schemes>\n  | { type: 'transform', data: TransformEventParams }\n  | { type: 'transformed', data: TransformEventParams }\n  | { type: 'resized', data: { event: Event } }\n\nexport type Area3DInherited<Schemes extends ExpectSchemes, ExtraSignals = never> = [Area3D<Schemes> | ExtraSignals, Root<Schemes>]\n\n/**\n * Plugin for embedding node editor into 3D scene.\n * @priority 9\n */\nexport class Area3DPlugin<Schemes extends ExpectSchemes, ExtraSignals = never> extends BaseAreaPlugin<Schemes, Area3D<Schemes> | ExtraSignals> {\n  /**\n   * Area instance, contains nodes, connections and other elements\n   */\n  public area: Area<Area3DPlugin<Schemes, ExtraSignals>>\n  public nodeViews = new Map<NodeId, NodeView>()\n  public connectionViews = new Map<ConnectionId, ConnectionView>()\n  public elements = new ElementsHolder<HTMLElement, Extract<Area3D<Schemes>, { type: 'render' }>['data'] & RenderMeta>()\n  public container: HTMLElement\n\n  /**\n   * @param container HTML element to render area in\n   */\n  constructor(container: HTMLElement)\n  constructor(shared: Area3DPlugin<Schemes, ExtraSignals>)\n  constructor(argument: HTMLElement | Area3DPlugin<Schemes, ExtraSignals>) {\n    super('area-3d')\n    this.container = argument instanceof Area3DPlugin ? argument.container : argument\n    this.container.style.overflow = 'hidden'\n    this.container.addEventListener('contextmenu', this.onContextMenu)\n\n    this.area = new Area(\n      this.container,\n      argument instanceof Area3DPlugin ? argument.area.scene : null,\n      this,\n      {\n        pointerDown: (position, event) => this.emit({ type: 'pointerdown', data: { position, event } }),\n        pointerMove: (position, event) => this.emit({ type: 'pointermove', data: { position, event } }),\n        pointerUp: (position, event) => this.emit({ type: 'pointerup', data: { position, event } }),\n        resize: event => this.emit({ type: 'resized', data: { event } }),\n        transformed: params => this.emit({ type: 'transformed', data: params }),\n        reordered: element => this.emit({ type: 'reordered', data: { element } })\n      },\n      {\n        transform: params => this.emit({ type: 'transform', data: params })\n      }\n    )\n    this.area.scene.addCanvasFor(this)\n  }\n\n  /**\n   * Share the 3D scene with multiple instances of Area3DPlugin\n   * @returns new instance of Area3DPlugin\n   */\n  share() {\n    return new Area3DPlugin<Schemes, ExtraSignals>(this)\n  }\n\n  setParent(scope: Scope<Root<Schemes>, []>) {\n    super.setParent(scope)\n\n    this.addPipe(context => {\n      if (!context || !(typeof context === 'object' && 'type' in context)) return context\n      if (context.type === 'nodecreated') {\n        this.addNodeView(context.data)\n      }\n      if (context.type === 'noderemoved') {\n        this.removeNodeView(context.data.id)\n      }\n      if (context.type === 'connectioncreated') {\n        this.addConnectionView(context.data)\n      }\n      if (context.type === 'connectionremoved') {\n        this.removeConnectionView(context.data.id)\n      }\n      if (context.type === 'render') {\n        this.elements.set(context.data)\n      }\n      if (context.type === 'unmount') {\n        this.elements.delete(context.data.element)\n      }\n      return context\n    })\n  }\n\n  private onContextMenu = (event: MouseEvent) => {\n    this.emit({ type: 'contextmenu', data: { event, context: 'root' } })\n  }\n\n  public addNodeView(node: Schemes['Node']) {\n    const { id } = node\n    const view = new NodeView(\n      {\n        picked: () => this.emit({ type: 'nodepicked', data: { id } }),\n        translated: data => this.emit({ type: 'nodetranslated', data: { id, ...data } }),\n        dragged: () => this.emit({ type: 'nodedragged', data: node }),\n        contextmenu: event => this.emit({ type: 'contextmenu', data: { event, context: node } }),\n        resized: ({ size }) => this.emit({ type: 'noderesized', data: { id: node.id, size } })\n      },\n      {\n        translate: data => this.emit({ type: 'nodetranslate', data: { id, ...data } }),\n        resize: ({ size }) => this.emit({ type: 'noderesize', data: { id: node.id, size } })\n      }\n    )\n\n    this.nodeViews.set(id, view)\n    this.area.content.add(view.element, view.object)\n\n    this.emit({\n      type: 'render',\n      data: { element: view.element, type: 'node', payload: node }\n    })\n\n    return view\n  }\n\n  public removeNodeView(id: NodeId) {\n    const view = this.nodeViews.get(id)\n\n    if (view) {\n      this.emit({ type: 'unmount', data: { element: view.element } })\n      this.nodeViews.delete(id)\n      this.area.content.remove(view.element)\n    }\n  }\n\n  public addConnectionView(connection: Schemes['Connection']) {\n    const view = new ConnectionView({\n      contextmenu: event => this.emit({ type: 'contextmenu', data: { event, context: connection } })\n    })\n\n    this.connectionViews.set(connection.id, view)\n    this.area.content.add(view.element, view.object)\n\n    this.emit({\n      type: 'render',\n      data: { element: view.element, type: 'connection', payload: connection }\n    })\n\n    return view\n  }\n\n  public removeConnectionView(id: ConnectionId) {\n    const view = this.connectionViews.get(id)\n\n    if (view) {\n      this.emit({ type: 'unmount', data: { element: view.element } })\n      this.connectionViews.delete(id)\n      this.area.content.remove(view.element)\n    }\n  }\n\n  /**\n   * Translate node to position\n   * @param id Node id\n   * @param position Position\n   */\n  public async translate(id: NodeId, { x, y }: Position) {\n    const view = this.nodeViews.get(id)\n\n    if (view) return await view.translate(x, y)\n  }\n\n  /**\n   * Resize node\n   * @param id Node id\n   * @param width Desired width\n   * @param height Desired height\n   */\n  public async resize(id: NodeId, width: number, height: number) {\n    const view = this.nodeViews.get(id)\n\n    if (view) return await view.resize(width, height)\n  }\n\n  /**\n   * Force update rendered element by id (node, connection, etc.)\n   * @param type Element type\n   * @param id Element id\n   * @emits render\n   */\n  public async update(type: GetRenderTypes<Area3D<Schemes>> | GetRenderTypes<ExtraSignals>, id: string) {\n    const data = this.elements.get(type, id)\n\n    if (data) await this.emit({ type: 'render', data } as Area3D<Schemes>)\n  }\n\n  /**\n   * Destroy all views and remove all event listeners\n   */\n  destroy() {\n    this.container.removeEventListener('contextmenu', this.onContextMenu)\n    Array.from(this.connectionViews.keys()).forEach(id => this.removeConnectionView(id))\n    Array.from(this.nodeViews.keys()).forEach(id => this.removeNodeView(id))\n    this.area.destroy()\n  }\n}\n"],"names":["_position","Vector3","_quaternion","Quaternion","_scale","CSS3DObject","Object3D","constructor","element","document","createElement","super","this","isCSS3DObject","style","position","pointerEvents","userSelect","setAttribute","addEventListener","traverse","object","Element","parentNode","removeChild","copy","source","recursive","cloneNode","_matrix","Matrix4","_matrix2","CSS3DRenderer","parameters","_this","_width","_height","_widthHalf","_heightHalf","cache","camera","fov","objects","WeakMap","domElement","undefined","overflow","viewElement","transformOrigin","appendChild","cameraElement","epsilon","value","Math","abs","getCameraCSSMatrix","matrix","elements","getObjectCSSMatrix","renderObject","scene","cameraCSSMatrix","visible","layers","test","display","onBeforeRender","isCSS3DSprite","matrixWorldInverse","transpose","rotation2D","multiply","makeRotationZ","matrixWorld","decompose","setPosition","scale","cachedObject","get","transform","objectData","set","onAfterRender","i","l","children","length","transformStyle","getSize","width","height","render","projectionMatrix","tx","ty","perspective","isPerspectiveCamera","view","enabled","offsetX","offsetY","fullWidth","fullHeight","matrixWorldAutoUpdate","updateMatrixWorld","parent","isOrthographicCamera","right","left","top","bottom","scaleByViewOffset","setSize","ObjectHTML","_Object3D","_inherits","_super","_createSuper","_classCallCheck","call","css3dObject","internalTranslate","endsWith","add","front","Mesh","back","castShadow","updateMaterials","_createClass","key","geometry","scaled","clone","index","getIndex","numTriangles","count","a","getX","b","c","setXYZ","flipFaces","BufferGeometry","materials","transparent","material","ShadowMaterial","opacity","blending","NoBlending","side","FrontSide","MeshBasicMaterial","color","BackSide","Content","scope","reordered","_scene$renderer$css3d","_defineProperty","css3dContainer","renderer","css3d","firstElementChild","HTMLElement","Error","holder","_reorder","event","_this$holder$getBound","getBoundingClientRect","x","clientX","y","clientY","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","target","next","wrap","_context","prev","contains","insertBefore","stop","_x","_x2","apply","remove","updateGeometry","raycaster","Raycaster","DragControls","_EventDispatcher","getPlane","_assertThisInitialized","Set","Vector2","updatePointer","setFromCamera","pointer","selected","ray","intersectPlane","intersection","newPosition","sub","offset","applyMatrix4","inverseMatrix","eventData","type","dispatchEvent","intersections","intersectObjects","getObjects","findIntersectedObject","invert","worldPosition","setFromMatrixPosition","stopPropagation","cursor","hovered","rect","touchAction","activate","onPointerMove","onPointerDown","onPointerCancel","removeEventListener","deactivate","Array","from","values","traverseAncestors","intersectedObject","includes","_this2","map","findContainer","sort","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","DOCUMENT_POSITION_PRECEDING","EventDispatcher","DraggableObject3D","_ObjectHTML","events","HybridRenderer","getDefaultCSS3DRenderer","webgl","getDefaultWebGLRenderer","fillAbsolute","WebGLRenderer","alpha","antialias","setPixelRatio","window","devicePixelRatio","setClearColor","shadowMap","PCFSoftShadowMap","el","_changeEvent","_startEvent","_endEvent","_ray","Ray","_plane","Plane","TILT_LIMIT","cos","MathUtils","DEG2RAD","OrbitControls","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","zoomToCursor","autoRotate","autoRotateSpeed","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MOUSE","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TOUCH","TWO","DOLLY_PAN","target0","position0","zoom0","zoom","_domElementKeyEvents","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","getDistance","distanceTo","listenToKeyEvents","onKeyDown","stopListenToKeyEvents","saveState","reset","updateProjectionMatrix","update","state","STATE","NONE","quat","setFromUnitVectors","up","quatInverse","lastPosition","lastQuaternion","lastTargetPosition","twoPI","deltaTime","applyQuaternion","setFromVector3","rotateLeft","getAutoRotationAngle","sphericalDelta","min","max","isFinite","makeSafe","addScaledVector","panOffset","performCursorZoom","radius","clampDistance","setFromSpherical","lookAt","multiplyScalar","zoomChanged","newRadius","prevRadius","radiusDelta","dollyDirection","mouseBefore","mouse","unproject","mouseAfter","console","warn","transformDirection","origin","direction","dot","setFromNormalAndCoplanarPoint","distanceToSquared","EPS","quaternion","dispose","onContextMenu","onPointerUp","onMouseWheel","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","Spherical","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","targetDistance","tan","clientHeight","clientWidth","dollyOut","dollyScale","dollyIn","updateMouseParameters","w","h","normalize","dist","handleMouseDownRotate","handleMouseDownPan","handleTouchStartRotate","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchMoveRotate","getSecondPointerPosition","subVectors","handleTouchMovePan","handleTouchMoveDolly","setPointerCapture","pointerId","push","addPointer","pointerType","trackPointer","DOLLY_ROTATE","onTouchStart","mouseAction","button","handleMouseDownDolly","ctrlKey","metaKey","shiftKey","onMouseDown","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","onTouchMove","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","onMouseMove","splice","removePointer","releasePointerCapture","preventDefault","handleMouseWheel","needsUpdate","code","handleKeyDown","passive","HybridScene","container","Scene","Map","PerspectiveCamera","near","far","orbit","createOrbitControls","controls","createDragControls","orbitChangeNumber","e","canvas","canvases","canvasToPlane","start","_event$position","z","translate","drag","attachDraggableHooks","plane","normal","root","aspect","getCanvasFor","attach","detach","worldToLocal","Area","guards","check","updated","previous","previousTarget","setPointerFrom","pointerDown","pointerMove","pointerUp","resize","content","pointerdown","pointermove","pointerup","current","transformed","rotation","_previous","p","r","t","sent","fromArray","point","getPointerFrom","ConnectionView","contextmenu","ElementsHolder","context","payload","id","views","viewsElements","concat","_view$payload","NodeView","_ref","translation","_objectSpread","abrupt","data","translated","_ref2","_callee2","size","_context2","item","resized","_x3","_x4","picked","dragged","getRoundedShape","shape","Shape","moveTo","lineTo","quadraticCurveTo","closePath","commentGeometry","ShapeGeometry","__commentGeometry","updateCommentGeometry","area","existing","meta","parseSvgPath","path","replace","segment","_","command","args","toLowerCase","numbers","match","number","Number","parseValues","unshift","m","q","s","vec2","adaptiveBezierCurve","opt","RECURSION_LIMIT","recursion","FLT_EPSILON","PATH_DISTANCE_EPSILON","pathEpsilon","curve_angle_tolerance_epsilon","angleEpsilon","m_angle_tolerance","angleTolerance","m_cusp_limit","cuspLimit","c1","c2","end","points","distanceTolerance","x1","y1","x2","y2","x3","y3","x4","y4","begin","level","pi","x12","y12","x23","y23","x34","y34","x123","y123","x234","y234","x1234","y1234","da1","da2","d2","d3","a23","atan2","require$$0","absSvgPath","startX","startY","seg","slice","toUpperCase","_120","radians","line","quadratic","cx","cy","arc","rx","ry","large_arc_flag","sweep_flag","f1","f2","xy","rotate","rx2","ry2","k","asin","toFixed","f2old","x2old","y2old","res","sin","hx","hy","curve","rot","rad","degress","bezier","require$$1","norm","result","bezierX","bezierY","quadX","quadY","len","out","tmp1","tmp2","tmp3","svgPathContours","svg","paths","pen","forEach","self","bezierTo","createClassicConnectionGeometry","contours","parse","_slicedToArray","flat","PlaneGeometry","prevPoint","vectorBetweenPoints","normalBetweenPoints","attributes","setX","setY","mergeGeometries","geometries","useGroups","isIndexed","attributesUsed","Object","morphAttributesUsed","morphAttributes","morphTargetsRelative","mergedGeometry","attributesCount","error","name","has","addGroup","indexOffset","mergedIndex","j","setIndex","mergedAttribute","mergeAttributes","numMorphTargets","morphAttributesToMerge","mergedMorphAttribute","TypedArray","itemSize","normalized","gpuType","arrayLength","attribute","isInterleavedBufferAttribute","array","BufferAttribute","createClassicNodeGeometry","params","_ref$borderRadius","borderRadius","_ref$inputsOffset","inputsOffset","_ref$outputsOffset","outputsOffset","_ref$socketRadius","socketRadius","_ref$socketMargin","socketMargin","circle","CircleGeometry","extra","inputs","entries","geom","outputs","commentScope","parentScope","Area3DPlugin","addPipe","comments","props","renderScope","_typeof","connectionViews","classicConnectionPath","customize","editor","NodeEditor","currentNode","getNode","pinGeometry","pins","pin","arr","_toConsumableArray","getBoundingBox","plugin","nodes","list","node","rects","filter","getNodesRect","nodeViews","center","getBBox","tick","time","requestAnimationFrame","performance","now","_ref$scale","bbox","fovh","atan","getTargetDistance","localToWorld","_BaseAreaPlugin","_update","_resize","_translate","argument","emit","addCanvasFor","_get","_getPrototypeOf","prototype","addNodeView","removeNodeView","addConnectionView","removeConnectionView","_this3","connection","_this4","_ref3","_x5","_callee3","_context3","_x6","_x7","_this5","destroy","BaseAreaPlugin"],"mappings":"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"}