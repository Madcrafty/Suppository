{"version":3,"file":"rete-auto-arrange-plugin.min.js","sources":["src/appliers/applier.ts","src/appliers/list/standard.ts","src/appliers/list/transition/animation.ts","src/appliers/list/transition/index.ts","src/presets/classic/index.ts","src/index.ts"],"sourcesContent":["import { ElkNode } from 'elkjs'\nimport { NodeEditor } from 'rete'\nimport { BaseAreaPlugin } from 'rete-area-plugin'\n\nimport { ExpectedSchemes } from '../types'\n\nexport abstract class Applier<S extends ExpectedSchemes, K> {\n  editor!: NodeEditor<S>\n  area!: BaseAreaPlugin<S, K>\n\n  setEditor(editor: NodeEditor<S>) {\n    this.editor = editor\n  }\n\n  setArea(area: BaseAreaPlugin<S, K>) {\n    this.area = area\n  }\n\n  public abstract apply(nodes: ElkNode[]): Promise<void>\n}\n","import { ElkNode, ElkShape } from 'elkjs'\nimport { NodeId } from 'rete'\n\nimport { ExpectedSchemes } from '../../types'\nimport { Applier } from '../applier'\n\n/**\n * Standard applier. Applies the layout to the nodes and their children immediately\n */\nexport class StandardApplier<S extends ExpectedSchemes, K> extends Applier<S, K> {\n  protected getValidShapes<Shape extends ElkShape>(shapes: Shape[]): (Shape & Required<ElkShape>)[] {\n    return shapes.filter((shape): shape is Shape & Required<ElkShape> => {\n      const { x, y, width, height } = shape\n\n      return ![typeof x, typeof y, typeof width, typeof height].includes('undefined')\n    })\n  }\n  protected async resizeNode(id: NodeId, width: number, height: number): Promise<void | boolean> {\n    return await this.area.resize(id, width, height)\n  }\n  protected async translateNode(id: NodeId, x: number, y: number): Promise<void | boolean> {\n    const view = this.area.nodeViews.get(id)\n\n    if (view) {\n      await view.translate(x, y)\n    }\n  }\n\n  public async apply(nodes: ElkNode[], offset = { x: 0, y: 0 }) {\n    const correctNodes = this.getValidShapes(nodes)\n\n    await Promise.all(correctNodes.map(async ({ id, x, y, width, height, children }) => {\n      await Promise.all([\n        this.resizeNode(id, width, height),\n        this.translateNode(id, offset.x + x, offset.y + y)\n      ])\n\n      if (children) {\n        await this.apply(children, { x: offset.x + x, y: offset.y + y })\n      }\n    }))\n  }\n}\n","\ntype AnimationRecord = {\n    startTime: number\n    duration: number\n    cb: (t: number) => void\n    done: (success: boolean) => void\n}\n\nexport class AnimationSystem {\n  activeAnimations = new Map<string, AnimationRecord>()\n  frameId?: number\n\n  start() {\n    const entries = Array.from(this.activeAnimations.entries())\n\n    entries.forEach(([key, { startTime, duration, cb, done }]) => {\n      let t = (Date.now() - startTime) / duration\n\n      if (t >= 1) t = 1\n\n      if (t < 0 || t >= 1) {\n        this.activeAnimations.delete(key)\n        if (t >= 1) {\n          cb(1)\n          done(true)\n        }\n        return\n      }\n      cb(t)\n    })\n    this.frameId = requestAnimationFrame(() => this.start())\n  }\n\n  async add<R>(duration: number, id: string, tick: (t: number) => Promise<R>) {\n    const startTime = Date.now()\n\n    return new Promise<boolean>(done => {\n      this.activeAnimations.set(id, { startTime, duration, cb: tick, done })\n    })\n  }\n\n  cancel(key: string) {\n    this.activeAnimations.get(key)?.done(false)\n    this.activeAnimations.delete(key)\n  }\n\n  stop() {\n    if (typeof this.frameId !== 'undefined') cancelAnimationFrame(this.frameId)\n  }\n}\n","import { ElkNode } from 'elkjs'\nimport { NodeId } from 'rete'\n\nimport { ExpectedSchemes } from '../../../types'\nimport { StandardApplier } from '../standard'\nimport { AnimationSystem } from './animation'\n\n/**\n * Transition applier props\n */\nexport type Props = {\n  /** Transition duration */\n  duration?: number\n  /** Transition timing function. Default is linear */\n  timingFunction?: (t: number) => number\n  /** Callback for each tick (frame) of the transition */\n  onTick?: (t: number) => void\n  /** Callback specifying whether the node needs to be laid out */\n  needsLayout?: (id: NodeId) => boolean\n}\n\n/**\n * Transition applier. Applies the layout to the nodes and their children with transition\n */\nexport class TransitionApplier<S extends ExpectedSchemes, K> extends StandardApplier<S, K> {\n  duration: number\n  timingFunction: (t: number) => number\n  animation = new AnimationSystem()\n\n  /**\n   * @param props Transition applier props\n   */\n  constructor(private props?: Props) {\n    super()\n    this.duration = typeof props?.duration !== 'undefined' ? props.duration : 2000\n    this.timingFunction = typeof props?.timingFunction !== 'undefined' ? props.timingFunction : t => t\n\n    this.animation.start()\n  }\n\n  protected applyTiming(from: number, to: number, t: number) {\n    const k = this.timingFunction(t)\n\n    return from * (1 - k) + to * k\n  }\n\n  protected async resizeNode(id: NodeId, width: number, height: number) {\n    const node = this.editor.getNode(id)\n\n    if (!node) return false\n    const previous = { width: node.width, height: node.height }\n\n    return await this.animation.add(this.duration, `${id}_resize`, t => {\n      const currentWidth = this.applyTiming(previous.width, width, t)\n      const currentHeight = this.applyTiming(previous.height, height, t)\n\n      this.props?.onTick && this.props.onTick(t)\n      return super.resizeNode(id, currentWidth, currentHeight)\n    })\n  }\n\n  protected async translateNode(id: NodeId, x: number, y: number) {\n    const view = this.area.nodeViews.get(id)\n\n    if (!view) return false\n    const previous = { ...view.position }\n\n    return await this.animation.add(this.duration, `${id}_translate`, t => {\n      const currentX = this.applyTiming(previous.x, x, t)\n      const currentY = this.applyTiming(previous.y, y, t)\n\n      this.props?.onTick && this.props.onTick(t)\n      return super.translateNode(id, currentX, currentY)\n    })\n  }\n\n  public cancel(id: NodeId) {\n    this.animation.cancel(`${id}_resize`)\n    this.animation.cancel(`${id}_translate`)\n  }\n\n  public async apply(nodes: ElkNode[], offset = { x: 0, y: 0 }) {\n    const correctNodes = this.getValidShapes(nodes)\n\n    await Promise.all(correctNodes.map(({ id, x, y, width, height, children }) => {\n      const hasChilden = children && children.length\n      const needsLayout = this.props?.needsLayout ? this.props.needsLayout(id) : true\n      const forceSelf = !hasChilden || needsLayout\n\n      return Promise.all([\n        hasChilden && this.apply(children, { x: offset.x + x, y: offset.y + y }),\n        forceSelf && this.resizeNode(id, width, height),\n        forceSelf && this.translateNode(id, offset.x + x, offset.y + y)\n      ])\n    }))\n  }\n\n  public destroy() {\n    this.animation.stop()\n  }\n}\n","import { PortData, Preset } from '../types'\n\n/**\n * Classic preset. Input ports are positioned on the left bottom side of the node, output ports are positioned on the right top side of the node.\n * @priority 7\n */\nexport const setup = (props?: { spacing?: number, top?: number, bottom?: number }): Preset => {\n  return () => ({\n    port(data): PortData {\n      const { spacing, top, bottom } = {\n        spacing: props && typeof props.spacing !== 'undefined' ? props.spacing : 35,\n        top: props && typeof props.top !== 'undefined' ? props.top : 35,\n        bottom: props && typeof props.bottom !== 'undefined' ? props.bottom : 15\n      }\n\n      if (data.side === 'output') {\n        return {\n          x: 0,\n          y: top + data.index * spacing,\n          width: 15,\n          height: 15,\n          side: 'EAST'\n        }\n      }\n      return {\n        x: 0,\n        y: data.height - bottom - data.ports * spacing + data.index * spacing,\n        width: 15,\n        height: 15,\n        side: 'WEST'\n      }\n    }\n  })\n}\n","import ELK, { ElkNode, ElkPort, LayoutOptions } from 'elkjs'\nimport { NodeEditor, NodeId, Root, Scope } from 'rete'\nimport { BaseArea, BaseAreaPlugin } from 'rete-area-plugin'\n\nimport { Applier, StandardApplier } from './appliers'\nimport { Preset } from './presets/types'\nimport { ExpectedSchemes } from './types'\n\nexport type { Preset }\nexport * as ArrangeAppliers from './appliers'\nexport * as Presets from './presets'\nexport * from './types'\n\ntype Context<S extends ExpectedSchemes> = {\n  nodes: S['Node'][]\n  connections: S['Connection'][]\n}\n\n/**\n * Auto arrange plugin. Layouts the graph using `elk.js`\n * @priority 10\n */\nexport class AutoArrangePlugin<Schemes extends ExpectedSchemes, T = never> extends Scope<never, [BaseArea<Schemes> | T, Root<Schemes>]> {\n  elk = new ELK()\n  demonstration = 'https://rtsys.informatik.uni-kiel.de/elklive/json.html'\n  presets: Preset[] = []\n\n  constructor() {\n    super('auto-arrange')\n  }\n\n  /**\n   * Adds a preset to the plugin, which will be used to layout the node ports and customize the layout options\n   * @param preset Preset to add\n   */\n  public addPreset(preset: Preset) {\n    this.presets.push(preset)\n  }\n\n  private findPreset(nodeId: string) {\n    for (const presetFactory of this.presets) {\n      const result = presetFactory(nodeId)\n\n      if (result) return result\n    }\n    throw new Error('cannot find preset for node with id = ' + nodeId)\n  }\n\n  private getArea() {\n    return this.parentScope<BaseAreaPlugin<Schemes, T>>(BaseAreaPlugin)\n  }\n\n  private getEditor() {\n    return this.getArea().parentScope<NodeEditor<Schemes>>(NodeEditor)\n  }\n\n  private nodeToLayoutChild(node: Schemes['Node'], context: Context<Schemes>): ElkNode {\n    const { id, width, height } = node\n    const inputs = node.inputs\n      ? Object.entries(node.inputs).map(([key, input]) => ({\n        key,\n        input\n      }))\n      : []\n    const outputs = node.outputs\n      ? Object.entries(node.outputs).map(([key, output]) => ({\n        key,\n        output\n      }))\n      : []\n    const preset = this.findPreset(id)\n\n    return <ElkNode>{\n      id,\n      width,\n      height,\n      labels: [\n        {\n          text: 'label' in node ? node.label : ''\n        }\n      ],\n      ...this.graphToElk(context, id),\n      ports: [\n        ...inputs\n          .sort((a, b) => (a.input?.index || 0) - (b.input?.index || 0))\n          .map(({ key }, index) => {\n            const { side, width: portWidth, height: portHeight, x, y } = preset.port({\n              nodeId: id,\n              key,\n              side: 'input',\n              width,\n              height,\n              index,\n              ports: inputs.length\n            })\n\n            return <ElkPort>{\n              id: this.getPortId(id, key, 'input'),\n              width: portWidth,\n              height: portHeight,\n              x,\n              y,\n              properties: {\n                side\n              }\n            }\n          }),\n        ...outputs\n          .sort((a, b) => (a.output?.index || 0) - (b.output?.index || 0))\n          .map(({ key }, index) => {\n            const { side, width: portWidth, height: portHeight, x, y } = preset.port({\n              nodeId: id,\n              side: 'output',\n              key,\n              index,\n              width,\n              height,\n              ports: outputs.length\n            })\n\n            return <ElkPort>{\n              id: this.getPortId(id, key, 'output'),\n              width: portWidth,\n              height: portHeight,\n              x,\n              y,\n              properties: {\n                side\n              }\n            }\n          })\n      ],\n      layoutOptions: {\n        ...preset.options?.(id) || {},\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        portConstraints: 'FIXED_POS'\n      }\n    }\n  }\n\n  private connectionToLayoutEdge(connection: Schemes['Connection']) {\n    const source = connection.sourceOutput\n      ? this.getPortId(connection.source, connection.sourceOutput, 'output')\n      : connection.source\n    const target = connection.targetInput\n      ? this.getPortId(connection.target, connection.targetInput, 'input')\n      : connection.target\n\n    return {\n      id: connection.id,\n      sources: [source],\n      targets: [target]\n    }\n  }\n\n  private graphToElk(context: Context<Schemes>, parent?: NodeId): Pick<ElkNode, 'children' | 'edges'> {\n    const nodes = context.nodes.filter(n => n.parent === parent)\n\n    return {\n      children: nodes\n        .map(n => this.nodeToLayoutChild(n, context)),\n      edges: context.connections\n        .filter(() => !parent)\n        .map(c => this.connectionToLayoutEdge(c))\n    }\n  }\n\n  private getPortId(id: NodeId, key: string, side: 'input' | 'output') {\n    return [id, key, side].join('_')\n  }\n\n  /**\n   * Method to layout the graph\n   * @param props Options for the layout\n   * @param props.options elk.js options for the layout\n   * @param props.applier Layout applier. Responsible for applying node positions to the graph\n   * @returns Debug information about the layout\n   */\n  // eslint-disable-next-line max-statements, max-len\n  async layout(props?: { options?: LayoutOptions, applier?: Applier<Schemes, T> } & Partial<Context<Schemes>>) {\n    const nodes = props?.nodes || this.getEditor().getNodes()\n    const connections = props?.connections || this.getEditor().getConnections()\n    const graph: ElkNode = {\n      id: 'root',\n      layoutOptions: {\n        /* eslint-disable @typescript-eslint/naming-convention */\n        'elk.algorithm': 'layered',\n        'elk.hierarchyHandling': 'INCLUDE_CHILDREN',\n        'elk.edgeRouting': 'POLYLINE',\n        ...(props?.options || {} as LayoutOptions)\n        /* eslint-enable @typescript-eslint/naming-convention */\n      },\n      ...this.graphToElk({ nodes, connections })\n    }\n    const applier = props?.applier || new StandardApplier()\n    const source = JSON.stringify(graph, null, '\\t')\n\n    applier.setEditor(this.getEditor())\n    applier.setArea(this.getArea())\n\n    try {\n      const result = await this.elk.layout(graph)\n\n      if (result.children) {\n        await applier.apply(result.children)\n      }\n\n      return {\n        demonstration: this.demonstration,\n        source,\n        result\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.warn('[rete-auto-arrange-plugin]', {\n        source,\n        demonstration: this.demonstration\n      })\n      throw error\n    }\n  }\n}\n"],"names":["Applier","_classCallCheck","_createClass","key","value","editor","this","area","StandardApplier","_Applier","_inherits","_apply","_translateNode","_resizeNode","_super","_createSuper","apply","arguments","shapes","filter","shape","x","y","width","height","_typeof","includes","_asyncToGenerator","_regeneratorRuntime","mark","_callee","id","wrap","_context","prev","next","resize","abrupt","sent","stop","_x","_x2","_x3","_callee2","view","_context2","nodeViews","get","translate","_x4","_x5","_x6","_callee4","nodes","offset","correctNodes","_this","_args4","_context4","length","undefined","getValidShapes","Promise","all","map","_ref2","_callee3","_ref","children","_context3","resizeNode","translateNode","_x8","_x7","AnimationSystem","_defineProperty","Map","_add","Array","from","activeAnimations","entries","forEach","_slicedToArray","_ref2$","startTime","duration","cb","done","t","Date","now","frameId","requestAnimationFrame","start","tick","_this2","set","_this$activeAnimation","cancelAnimationFrame","TransitionApplier","_StandardApplier","props","_assertThisInitialized","call","timingFunction","animation","to","k","node","previous","getNode","add","concat","_this2$props","currentWidth","applyTiming","currentHeight","onTick","_get","_getPrototypeOf","prototype","_this3","_objectSpread","position","_this3$props","currentX","currentY","cancel","_this4","_args3","_this4$props","hasChilden","needsLayout","forceSelf","port","data","_spacing$top$bottom","spacing","top","bottom","side","index","ports","AutoArrangePlugin","_Scope","_layout","ELK","preset","presets","push","nodeId","_step","_iterator","_createForOfIteratorHelper","s","n","result","presetFactory","err","e","f","Error","parentScope","BaseAreaPlugin","getArea","NodeEditor","context","_preset$options","inputs","Object","input","outputs","_ref3","_ref4","output","findPreset","labels","text","label","graphToElk","_toConsumableArray","sort","a","b","_a$input","_b$input","_ref5","_preset$port","portWidth","portHeight","getPortId","properties","_a$output","_b$output","_ref6","_preset$port2","layoutOptions","options","portConstraints","connection","source","sourceOutput","target","targetInput","sources","targets","parent","nodeToLayoutChild","edges","connections","c","connectionToLayoutEdge","join","graph","applier","getEditor","getNodes","getConnections","JSON","stringify","setEditor","setArea","elk","layout","demonstration","t0","console","warn","Scope"],"mappings":"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"}